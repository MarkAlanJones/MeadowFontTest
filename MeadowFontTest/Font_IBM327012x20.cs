using System.Collections.Generic;

namespace Meadow.Foundation.Graphics
{
    // !!! This code is generated by a tool (FontConverter) !!!
    // Based on ibm3270 Copyright 2019 The 3270font Project Authors (https://github.com/rbanffy/3270font)
    // Using threshold of 48 at 2020-07-19T15:38:53.8477851-04:00
    public class ibm327012x20 : FontBase
    {
        private const int WIDTH = 12;
        private const int HEIGHT = 20;

        public override int Width { get { return WIDTH; } }
        public override int Height { get { return HEIGHT; } }

        /// <summary>
        ///   Font table containing the binary representation of ASCII characters.
        /// </summary>
        private static readonly byte[][] _fontTable =
        {
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0020( ) space
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0021(!) exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0xC0, 0x0D, 0xDC, 0xC0, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0022(") quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x0D, 0xD8, 0xE0, 0x3F, 0xD8, 0x80, 0x0D, 0xD8, 0xE0, 0x3F, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0023(#) number sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xC0, 0x7F, 0x6E, 0x60, 0x06, 0x6E, 0xC0, 0x3F, 0x60, 0x07, 0x66, 0x60, 0xE6, 0x3F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0024($) dollar sign
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0x60, 0x03, 0x3E, 0xC0, 0x61, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x38, 0xC0, 0x01, 0x8E, 0x03, 0x6C, 0xC0, 0x07, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0025(%) percent sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xE0, 0x06, 0x66, 0x60, 0x06, 0x6E, 0xC0, 0x03, 0x3E, 0x62, 0x77, 0xE6, 0xE1, 0x1C, 0xFC, 0x03, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0026(&) ampersand
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0027(') apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x60, 0x00, 0x0C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0028(() left parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0029()) right parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xE0, 0x76, 0xF8, 0x03, 0x1F, 0xF8, 0xE3, 0x76, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002A(*) asterisk
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002B(+) plus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00}, //002C(,) comma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002D(-) hyphen-minus
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002E(.) full stop
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002F(/) solidus
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x0C, 0x63, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0030(0) digit zero
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0x78, 0xC0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0031(1) digit one
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x60, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0032(2) digit two
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x0E, 0x80, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0xE7, 0x38, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0033(3) digit three
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xE0, 0x03, 0x33, 0x18, 0xC3, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0034(4) digit four
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x00, 0x18, 0x00, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x18, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0035(5) digit five
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x0F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x0C, 0x87, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0036(6) digit six
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0037(7) digit seven
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x18, 0x83, 0x31, 0x98, 0x03, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0038(8) digit eight
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x70, 0x06, 0x67, 0x78, 0xCE, 0xC6, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0039(9) digit nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003A(:) colon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00}, //003B(;) semicolon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x07, 0x38, 0x80, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003C(<) less-than sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003D(=) equals sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003E(>) greater-than sign
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x18, 0x86, 0x71, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003F(?) question mark
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0xE6, 0x66, 0x6F, 0xF6, 0x67, 0x3F, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0040(@) commercial at
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0041(A) latin capital letter a
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x71, 0x98, 0x83, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x87, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0042(B) latin capital letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0043(C) latin capital letter c
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0044(D) latin capital letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0045(E) latin capital letter e
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0046(F) latin capital letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0047(G) latin capital letter g
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0048(H) latin capital letter h
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0049(I) latin capital letter i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x60, 0x0C, 0xC6, 0xE0, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004A(J) latin capital letter j
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004B(K) latin capital letter k
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004C(L) latin capital letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004D(M) latin capital letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004E(N) latin capital letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004F(O) latin capital letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0050(P) latin capital letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x6E, 0x87, 0x3F, 0xF0, 0x01, 0x38, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //0051(Q) latin capital letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0052(R) latin capital letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0053(S) latin capital letter s
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0054(T) latin capital letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0055(U) latin capital letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x60, 0x0C, 0xC3, 0x30, 0x9C, 0x83, 0x19, 0xB8, 0x01, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0056(V) latin capital letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7F, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0057(W) latin capital letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0058(X) latin capital letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0059(Y) latin capital letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005A(Z) latin capital letter z
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005B([) left square bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005C(\) reverse solidus
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005D(]) right square bracket
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005E(^) circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005F(_) low line
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0060(`) grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0061(a) latin small letter a
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0062(b) latin small letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0063(c) latin small letter c
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0064(d) latin small letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0065(e) latin small letter e
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x07, 0x30, 0x00, 0x03, 0xFE, 0x01, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0066(f) latin small letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x31, 0x0C, 0x63, 0x30, 0x06, 0xC3, 0x38, 0x98, 0x03, 0x3F, 0x00, 0x83, 0x31, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00}, //0067(g) latin small letter g
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xF6, 0xE0, 0x39, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0068(h) latin small letter h
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0069(i) latin small letter i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //006A(j) latin small letter j
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x06, 0x3E, 0x60, 0x06, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006B(k) latin small letter k
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006C(l) latin small letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x6E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006D(m) latin small letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006E(n) latin small letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006F(o) latin small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //0070(p) latin small letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x07, 0x00}, //0071(q) latin small letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xC0, 0x3B, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0072(r) latin small letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0073(s) latin small letter s
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0074(t) latin small letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0075(u) latin small letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0076(v) latin small letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0077(w) latin small letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x70, 0x98, 0x03, 0x0F, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0078(x) latin small letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //0079(y) latin small letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007A(z) latin small letter z
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x80, 0x03, 0x1C, 0x80, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007B({) left curly bracket
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //007C(|) vertical line
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007D(}) right curly bracket
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x06, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007E(~) tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007F() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0080() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0081() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0082() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0083() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0084() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0085() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0086() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0087() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0088() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0089() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008A() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008B() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008C() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008D() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008E() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //008F() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0090() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0091() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0092() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0093() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0094() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0095() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0096() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0097() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0098() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0099() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009A() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009B() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009C() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009D() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009E() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //009F() 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A0( ) no-break space
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A1(¡) inverted exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0xC0, 0x3F, 0x66, 0x60, 0x06, 0x66, 0xE0, 0x06, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A2(¢) cent sign
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x01, 0x3F, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x1F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x63, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A3(£) pound sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC7, 0x39, 0xF8, 0x81, 0x19, 0x08, 0x81, 0x10, 0x98, 0x81, 0x1F, 0x9C, 0xE3, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A4(¤) currency sign
            new byte[] { 0x00, 0x00, 0x00, 0x0C, 0xE2, 0x71, 0xF8, 0x01, 0x0F, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A5(¥) yen sign
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //00A6(¦) broken bar
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x80, 0x01, 0x18, 0xC0, 0x01, 0x3E, 0x60, 0x06, 0xC6, 0xC0, 0x18, 0x18, 0x03, 0x33, 0x60, 0x03, 0x1C, 0xC0, 0x00, 0x0C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A7(§) section sign
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A8(¨) diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x70, 0xE6, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x6E, 0x0E, 0xC7, 0x31, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A9(©) copyright sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x38, 0x00, 0xC3, 0x3F, 0x0E, 0x63, 0x30, 0x0E, 0xC3, 0x7F, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AA(ª) feminine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02, 0x77, 0xB8, 0xC1, 0x1D, 0xEE, 0x60, 0x06, 0xCC, 0x80, 0x19, 0x30, 0x03, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AB(«) left-pointing double angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AC(¬) not sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AD(­) soft hyphen
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x70, 0xF6, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xFE, 0xC6, 0x30, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AE(®) registered sign
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AF(¯) macron
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B0(°) degree sign
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B1(±) plus-minus sign
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x80, 0x1B, 0x80, 0x01, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B2(²) superscript two
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0x01, 0x1C, 0xE0, 0x00, 0x0F, 0xC0, 0x01, 0x18, 0x80, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B3(³) superscript three
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B4(´) acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //00B5(µ) micro sign
            new byte[] { 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0xE0, 0x07, 0x06, 0x60, 0x00, 0xC6, 0x61, 0x3E, 0xC6, 0x61, 0x1C, 0xC6, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B6(¶) pilcrow sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B7(·) middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B8(¸) cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0x78, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B9(¹) superscript one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BA(º) masculine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0xE0, 0x0E, 0x98, 0x01, 0x33, 0x60, 0x06, 0xEE, 0x70, 0x83, 0x1B, 0xDC, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BB(») right-pointing double angle quotation mark
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x70, 0x80, 0x73, 0x98, 0xE7, 0x7C, 0xC0, 0x0F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BC(¼) vulgar fraction one quarter
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x60, 0x00, 0x7B, 0x18, 0xCE, 0x60, 0x0E, 0x03, 0x38, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BD(½) vulgar fraction one half
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x80, 0x03, 0x38, 0x07, 0x33, 0xB0, 0xE1, 0x0F, 0x60, 0x00, 0x73, 0x98, 0xE7, 0x7C, 0xC4, 0x0F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BE(¾) vulgar fraction three quarters
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xE0, 0x00, 0x06, 0x30, 0x80, 0x61, 0x18, 0x86, 0x61, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BF(¿) inverted question mark
            new byte[] { 0x0C, 0x80, 0x01, 0x30, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C0(À) latin capital letter a with grave
            new byte[] { 0x00, 0x03, 0x18, 0xC0, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C1(Á) latin capital letter a with acute
            new byte[] { 0xF0, 0x80, 0x19, 0x0C, 0x03, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C2(Â) latin capital letter a with circumflex
            new byte[] { 0x6E, 0x40, 0x7E, 0xC0, 0x03, 0x06, 0xF0, 0x80, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C3(Ã) latin capital letter a with tilde
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C4(Ä) latin capital letter a with diaeresis
            new byte[] { 0x98, 0x81, 0x19, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x9C, 0xE3, 0x70, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C5(Å) latin capital letter a with ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0x0F, 0xD8, 0xC0, 0x0C, 0xC6, 0x60, 0x7C, 0xFE, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C6(Æ) latin capital letter ae
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF0, 0x87, 0x23, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x77, 0xE0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x07}, //00C7(Ç) latin capital letter c with cedilla
            new byte[] { 0x38, 0x00, 0x07, 0x60, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C8(È) latin capital letter e with grave
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C9(É) latin capital letter e with acute
            new byte[] { 0xF0, 0x80, 0x19, 0x0C, 0xE3, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CA(Ê) latin capital letter e with circumflex
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CB(Ë) latin capital letter e with diaeresis
            new byte[] { 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CC(Ì) latin capital letter i with grave
            new byte[] { 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CD(Í) latin capital letter i with acute
            new byte[] { 0xF0, 0x80, 0x1B, 0x1C, 0x03, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CE(Î) latin capital letter i with circumflex
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CF(Ï) latin capital letter i with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC1, 0x39, 0x1C, 0xC7, 0x61, 0x1C, 0xE6, 0x67, 0x1C, 0xC6, 0x61, 0x1C, 0xC7, 0x39, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D0(Ð) latin capital letter eth
            new byte[] { 0x6E, 0x40, 0x7E, 0xC0, 0xE3, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D1(Ñ) latin capital letter n with tilde
            new byte[] { 0x70, 0x00, 0x0E, 0xC0, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D2(Ò) latin capital letter o with grave
            new byte[] { 0x00, 0x0C, 0xE0, 0x00, 0x06, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D3(Ó) latin capital letter o with acute
            new byte[] { 0x80, 0x0F, 0xDC, 0xC0, 0x08, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D4(Ô) latin capital letter o with circumflex
            new byte[] { 0x60, 0x03, 0x64, 0x00, 0x0C, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D5(Õ) latin capital letter o with tilde
            new byte[] { 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D6(Ö) latin capital letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x83, 0x1B, 0xF0, 0x00, 0x0E, 0xF0, 0xC1, 0x39, 0x08, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D7(×) multiplication sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x66, 0x66, 0x36, 0xE6, 0x61, 0x0E, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D8(Ø) latin capital letter o with stroke
            new byte[] { 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D9(Ù) latin capital letter u with grave
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DA(Ú) latin capital letter u with acute
            new byte[] { 0xF0, 0x80, 0x19, 0x0C, 0x03, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DB(Û) latin capital letter u with circumflex
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DC(Ü) latin capital letter u with diaeresis
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DD(Ý) latin capital letter y with acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x86, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x61, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DE(Þ) latin capital letter thorn
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0D, 0xCE, 0x60, 0x0C, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x73, 0xE6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DF(ß) latin small letter sharp s
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0xF8, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E0(à) latin small letter a with grave
            new byte[] { 0x00, 0x00, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E1(á) latin small letter a with acute
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1D, 0x8C, 0x03, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E2(â) latin small letter a with circumflex
            new byte[] { 0x00, 0x80, 0x03, 0x6C, 0xC2, 0x6C, 0xC0, 0x03, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E3(ã) latin small letter a with tilde
            new byte[] { 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E4(ä) latin small letter a with diaeresis
            new byte[] { 0xF0, 0x80, 0x1D, 0x98, 0x81, 0x1D, 0xF0, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E5(å) latin small letter a with ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x7E, 0x60, 0x06, 0x67, 0xF8, 0xE7, 0x06, 0x66, 0xE0, 0x0E, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E6(æ) latin small letter ae
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x07}, //00E7(ç) latin small letter c with cedilla
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E8(è) latin small letter e with grave
            new byte[] { 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E9(é) latin small letter e with acute
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1D, 0x8C, 0x01, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EA(ê) latin small letter e with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EB(ë) latin small letter e with diaeresis
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EC(ì) latin small letter i with grave
            new byte[] { 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00ED(í) latin small letter i with acute
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EE(î) latin small letter i with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EF(ï) latin small letter i with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F0(ð) latin small letter eth
            new byte[] { 0x00, 0xC0, 0x03, 0x6E, 0x40, 0x7C, 0xC0, 0x03, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F1(ñ) latin small letter n with tilde
            new byte[] { 0x00, 0xC0, 0x00, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F2(ò) latin small letter o with grave
            new byte[] { 0x00, 0x00, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F3(ó) latin small letter o with acute
            new byte[] { 0x00, 0x00, 0x03, 0x78, 0xC0, 0x0D, 0x8C, 0x01, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F4(ô) latin small letter o with circumflex
            new byte[] { 0x00, 0xC0, 0x01, 0x36, 0x41, 0x36, 0xC0, 0x01, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F5(õ) latin small letter o with tilde
            new byte[] { 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F6(ö) latin small letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F7(÷) division sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x87, 0x39, 0x9C, 0xC3, 0x3D, 0xFC, 0xC3, 0x33, 0x3C, 0xC3, 0x39, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F8(ø) latin small letter o with stroke
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F9(ù) latin small letter u with grave
            new byte[] { 0x00, 0x00, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FA(ú) latin small letter u with acute
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x19, 0x0C, 0x03, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FB(û) latin small letter u with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FC(ü) latin small letter u with diaeresis
            new byte[] { 0x00, 0x00, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //00FD(ý) latin small letter y with acute
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x1C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x63, 0x1C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //00FE(þ) latin small letter thorn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0C, 0x00, 0x00, 0x00, 0x86, 0x63, 0x38, 0x86, 0x63, 0x38, 0x86, 0xC3, 0x38, 0x98, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //00FF(ÿ) latin small letter y with diaeresis
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x9C, 0xE1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0100(Ā) latin capital letter a with macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x18, 0x80, 0x03, 0x38, 0xFC, 0xE3, 0x38, 0x86, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0101(ā) latin small letter a with macron
            new byte[] { 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1B, 0x1C, 0xE3, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0102(Ă) latin capital letter a with breve
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x00, 0xF8, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0103(ă) latin small letter a with breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x60, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00}, //0104(Ą) latin capital letter a with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x30, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //0105(ą) latin small letter a with ogonek
            new byte[] { 0x00, 0x07, 0x38, 0x80, 0x01, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0106(Ć) latin capital letter c with acute
            new byte[] { 0x00, 0x00, 0x30, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0107(ć) latin small letter c with acute
            new byte[] { 0xE0, 0x01, 0x37, 0x38, 0x06, 0x00, 0xE0, 0x03, 0x73, 0x18, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0108(Ĉ) latin capital letter c with circumflex
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x01, 0x3B, 0x18, 0x07, 0x00, 0xF0, 0x83, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0109(ĉ) latin small letter c with circumflex
            new byte[] { 0x00, 0x00, 0x1C, 0xC0, 0x01, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010A(Ċ) latin capital letter c with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010B(ċ) latin small letter c with dot above
            new byte[] { 0x70, 0x07, 0x1E, 0xC0, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010C(Č) latin capital letter c with caron
            new byte[] { 0x00, 0x00, 0x33, 0xF0, 0x03, 0x1E, 0xC0, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010D(č) latin small letter c with caron
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0xC0, 0x19, 0x1C, 0xC7, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC7, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010E(Ď) latin capital letter d with caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x83, 0x31, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010F(ď) latin small letter d with caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC1, 0x39, 0x1C, 0xC7, 0x61, 0x1C, 0xE6, 0x63, 0x1C, 0xC6, 0x61, 0x1C, 0xC7, 0x39, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0110(Đ) latin capital letter d with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0xE0, 0x07, 0x30, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0111(đ) latin small letter d with stroke
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0112(Ē) latin capital letter e with macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x18, 0x86, 0x63, 0x38, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0113(ē) latin small letter e with macron
            new byte[] { 0x98, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0114(Ĕ) latin capital letter e with breve
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0115(ĕ) latin small letter e with breve
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0116(Ė) latin capital letter e with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x18, 0x86, 0x63, 0x38, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0117(ė) latin small letter e with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //0118(Ę) latin capital letter e with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x18, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //0119(ę) latin small letter e with ogonek
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011A(Ě) latin capital letter e with caron
            new byte[] { 0x00, 0x80, 0x08, 0xDC, 0x01, 0x07, 0x20, 0x00, 0x00, 0xFC, 0xE0, 0x18, 0x86, 0x63, 0x38, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011B(ě) latin small letter e with caron
            new byte[] { 0xF0, 0x80, 0x1D, 0x8C, 0x03, 0x00, 0xF8, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x38, 0x8E, 0x83, 0x39, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011C(Ĝ) latin capital letter g with circumflex
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1D, 0x8C, 0x03, 0x00, 0xF0, 0x81, 0x31, 0x0E, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xDC, 0x83, 0x3F, 0x00, 0x83, 0x31, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00}, //011D(ĝ) latin small letter g with circumflex
            new byte[] { 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011E(Ğ) latin capital letter g with breve
            new byte[] { 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x60, 0x06, 0xC6, 0x70, 0x98, 0x07, 0x6F, 0x00, 0x86, 0x61, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00}, //011F(ğ) latin small letter g with breve
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x38, 0x8E, 0x83, 0x39, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0120(Ġ) latin capital letter g with dot above
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x31, 0x0E, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xDC, 0x03, 0x3F, 0x00, 0x83, 0x31, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00}, //0121(ġ) latin small letter g with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x38, 0x8E, 0x83, 0x39, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0122(Ģ) latin capital letter g with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x60, 0x06, 0xC6, 0x70, 0x98, 0x07, 0x6F, 0x60, 0x86, 0x67, 0xF0, 0x03, 0x06, 0x70, 0x80, 0x03}, //0123(ģ) latin small letter g with cedilla
            new byte[] { 0xF0, 0x80, 0x1B, 0x1C, 0x03, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0124(Ĥ) latin capital letter h with circumflex
            new byte[] { 0xF0, 0x80, 0x1B, 0x1E, 0x63, 0x00, 0x06, 0x60, 0x00, 0xF6, 0xE0, 0x39, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0125(ĥ) latin small letter h with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0xFE, 0x6F, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0126(Ħ) latin capital letter h with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x3E, 0x60, 0x00, 0xF6, 0xE0, 0x39, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0127(ħ) latin small letter h with stroke
            new byte[] { 0x6C, 0x00, 0x6C, 0xC0, 0x03, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0128(Ĩ) latin capital letter i with tilde
            new byte[] { 0x00, 0x80, 0x03, 0x6C, 0x42, 0x6C, 0xC0, 0x03, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0129(ĩ) latin small letter i with tilde
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012A(Ī) latin capital letter i with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012B(ī) latin small letter i with macron
            new byte[] { 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012C(Ĭ) latin capital letter i with breve
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012D(ĭ) latin small letter i with breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x1C}, //012E(Į) latin capital letter i with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0C}, //012F(į) latin small letter i with ogonek
            new byte[] { 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0130(İ) latin capital letter i with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0131(ı) latin small letter dotless i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9E, 0xC7, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x33, 0x3C, 0xC3, 0x37, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0132(Ĳ) latin capital ligature ij
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x83, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //0133(ĳ) latin small ligature ij
            new byte[] { 0x78, 0xC0, 0x0C, 0x86, 0x01, 0x00, 0xE0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x60, 0x0C, 0xC6, 0xE0, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0134(Ĵ) latin capital letter j with circumflex
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1B, 0x1C, 0x03, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //0135(ĵ) latin small letter j with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //0136(Ķ) latin capital letter k with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x06, 0x3E, 0x60, 0x06, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //0137(ķ) latin small letter k with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0138(ĸ) latin small letter kra
            new byte[] { 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0139(Ĺ) latin capital letter l with acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013A(ĺ) latin small letter l with acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //013B(Ļ) latin capital letter l with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x06, 0x60, 0x80, 0x03, 0x10, 0x00, 0x00}, //013C(ļ) latin small letter l with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x60, 0x0E, 0x76, 0x60, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013D(Ľ) latin capital letter l with caron
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x0C, 0x66, 0x60, 0x03, 0x1E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013E(ľ) latin small letter l with caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xC6, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013F(Ŀ) latin capital letter l with middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0140(ŀ) latin small letter l with middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0xC6, 0xE0, 0x07, 0x1E, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0141(Ł) latin capital letter l with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x03, 0x3E, 0x78, 0x80, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0142(ł) latin small letter l with stroke
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0x86, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0143(Ń) latin capital letter n with acute
            new byte[] { 0x00, 0x00, 0x18, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0xFE, 0x80, 0x39, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0144(ń) latin small letter n with acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //0145(Ņ) latin capital letter n with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x0C, 0xE0, 0x00, 0x07, 0x20, 0x00, 0x00}, //0146(ņ) latin small letter n with cedilla
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0147(Ň) latin capital letter n with caron
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0148(ň) latin small letter n with caron
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0149(ŉ) latin small letter n preceded by apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014A(Ŋ) latin capital letter eng
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014B(ŋ) latin small letter eng
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014C(Ō) latin capital letter o with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014D(ō) latin small letter o with macron
            new byte[] { 0xC0, 0x08, 0xDC, 0x80, 0x0F, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014E(Ŏ) latin capital letter o with breve
            new byte[] { 0x00, 0x00, 0x00, 0x8C, 0xC1, 0x19, 0xF8, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014F(ŏ) latin small letter o with breve
            new byte[] { 0x70, 0x83, 0x1B, 0xD8, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0150(Ő) latin capital letter o with double acute
            new byte[] { 0x00, 0x00, 0x36, 0xB0, 0x83, 0x1D, 0xCC, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0151(ő) latin small letter o with double acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x7C, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0152(Œ) latin capital ligature oe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x67, 0x06, 0x66, 0xE0, 0x0E, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0153(œ) latin small ligature oe
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0154(Ŕ) latin capital letter r with acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //0156(Ŗ) latin capital letter r with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xC0, 0x3B, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00}, //0157(ŗ) latin small letter r with cedilla
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0158(Ř) latin capital letter r with caron
            new byte[] { 0x00, 0x80, 0x08, 0xDC, 0x01, 0x07, 0x20, 0x00, 0x00, 0xEE, 0xC0, 0x3B, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0159(ř) latin small letter r with caron
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015A(Ś) latin capital letter s with acute
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015B(ś) latin small letter s with acute
            new byte[] { 0xF0, 0x80, 0x1B, 0x1C, 0x03, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015C(Ŝ) latin capital letter s with circumflex
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1D, 0x8C, 0x01, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015D(ŝ) latin small letter s with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x0C, 0xE0, 0x00, 0x07, 0x20, 0x00, 0x00}, //015E(Ş) latin capital letter s with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xFC, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x20, 0x00, 0x00}, //015F(ş) latin small letter s with cedilla
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0160(Š) latin capital letter s with caron
            new byte[] { 0x00, 0x80, 0x19, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0161(š) latin small letter s with caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x03, 0x10, 0x00, 0x00}, //0162(Ţ) latin capital letter t with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x06, 0x60, 0x80, 0x03, 0x10, 0x00, 0x00}, //0163(ţ) latin small letter t with cedilla
            new byte[] { 0xB8, 0x03, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0164(Ť) latin capital letter t with caron
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0165(ť) latin small letter t with caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x3F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0166(Ŧ) latin capital letter t with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x80, 0x3F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0167(ŧ) latin small letter t with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x26, 0xCC, 0x06, 0x3C, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0168(Ũ) latin capital letter u with tilde
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x26, 0xC4, 0x06, 0x3C, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0169(ũ) latin small letter u with tilde
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016A(Ū) latin capital letter u with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016B(ū) latin small letter u with macron
            new byte[] { 0x1C, 0x83, 0x19, 0xF0, 0x01, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016C(Ŭ) latin capital letter u with breve
            new byte[] { 0x00, 0x00, 0x00, 0x8C, 0xC1, 0x1D, 0xF8, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016D(ŭ) latin small letter u with breve
            new byte[] { 0x00, 0x00, 0x0F, 0xB0, 0x81, 0x19, 0xBE, 0x67, 0x6F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016E(Ů) latin capital letter u with ring above
            new byte[] { 0x00, 0x00, 0x07, 0xD8, 0x80, 0x09, 0xD8, 0x00, 0x07, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016F(ů) latin small letter u with ring above
            new byte[] { 0x70, 0x83, 0x1B, 0xD8, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0170(Ű) latin capital letter u with double acute
            new byte[] { 0x00, 0x00, 0x76, 0xF0, 0x83, 0x1F, 0xD8, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0171(ű) latin small letter u with double acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x06, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00}, //0172(Ų) latin capital letter u with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //0173(ų) latin small letter u with ogonek
            new byte[] { 0xF0, 0x80, 0x1B, 0x1C, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7F, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0174(Ŵ) latin capital letter w with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0175(ŵ) latin small letter w with circumflex
            new byte[] { 0xF0, 0x80, 0x1B, 0x1C, 0x63, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0176(Ŷ) latin capital letter y with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //0177(ŷ) latin small letter y with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0178(Ÿ) latin capital letter y with diaeresis
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0179(Ź) latin capital letter z with acute
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017A(ź) latin small letter z with acute
            new byte[] { 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017B(Ż) latin capital letter z with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017C(ż) latin small letter z with dot above
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017D(Ž) latin capital letter z with caron
            new byte[] { 0x00, 0x80, 0x19, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017E(ž) latin small letter z with caron
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017F(ſ) latin small letter long s
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x7F, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //018E(Ǝ) latin capital letter reversed e
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x07, 0x0E, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00}, //0192(ƒ) latin small letter f with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x18, 0x86, 0x67, 0x78, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0xE1, 0x1C, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01A0(Ơ) latin capital letter o with horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE6, 0x6C, 0xC6, 0x67, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x0C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01A1(ơ) latin small letter o with horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x18, 0x86, 0x61, 0x18, 0x86, 0x67, 0x78, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0xE1, 0x1C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01AF(Ư) latin capital letter u with horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x66, 0x6C, 0xC6, 0x67, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0xE0, 0x0C, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01B0(ư) latin small letter u with horn
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x01, 0x0E, 0x70, 0x00, 0x03, 0xF0, 0x81, 0x31, 0x0C, 0x63, 0x30, 0x06, 0xC3, 0x38, 0x98, 0x03, 0x3F, 0x00, 0x83, 0x31, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //01F5(ǵ) latin small letter g with acute
            new byte[] { 0x98, 0x81, 0x19, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x9C, 0xE3, 0x70, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FA(Ǻ) latin capital letter a with ring above and acute
            new byte[] { 0xD8, 0x80, 0x09, 0xD8, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FB(ǻ) latin small letter a with ring above and acute
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xE0, 0x07, 0x0F, 0xD8, 0xC0, 0x0C, 0xC6, 0x60, 0x7C, 0xFE, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FC(Ǽ) latin capital letter ae with acute
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x03, 0x7E, 0x60, 0x06, 0x67, 0xF8, 0xE7, 0x06, 0x66, 0xE0, 0x0E, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FD(ǽ) latin small letter ae with acute
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFC, 0xE3, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x66, 0x66, 0x36, 0xE6, 0x61, 0x0E, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FE(Ǿ) latin capital letter o with stroke and acute
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xF0, 0x87, 0x39, 0x9C, 0xC3, 0x3D, 0xFC, 0xC3, 0x33, 0x3C, 0xC3, 0x39, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FF(ǿ) latin small letter o with stroke and acute
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC7, 0x39, 0xCC, 0xC3, 0x3C, 0xFC, 0xC3, 0x03, 0x1C, 0xC0, 0x01, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0247(ɇ) latin small letter e with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02BC(ʼ) modifier letter apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C6(ˆ) modifier letter circumflex accent
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C7(ˇ) caron
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C9(ˉ) modifier letter macron
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02CA(ˊ) modifier letter acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02CB(ˋ) modifier letter grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //02CC(ˌ) modifier letter low vertical line
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02CD(ˍ) modifier letter low macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02CE(ˎ) modifier letter low grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02CF(ˏ) modifier letter low acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D0(ː) modifier letter triangular colon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D1(ˑ) modifier letter half triangular colon
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D8(˘) breve
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D9(˙) dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0D, 0x98, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DA(˚) ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DB(˛) ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x06, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DC(˜) small tilde
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x03, 0x3B, 0xD8, 0xC1, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DD(˝) double acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x08, 0x88, 0x80, 0x0D, 0xD8, 0x00, 0x07, 0x60, 0x00, 0x02, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02E0(ˠ) modifier letter small gamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02E1(ˡ) modifier letter small l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xD8, 0x80, 0x01, 0x60, 0x00, 0x0C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02E2(ˢ) modifier letter small s
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x30, 0x98, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02E3(ˣ) modifier letter small x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x98, 0xC3, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02E4(ˤ) modifier letter small reversed glottal stop
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x9C, 0x03, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02EC(ˬ) modifier letter voicing
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02EE(ˮ) modifier letter double apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0300(̀) combining grave accent
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0301(́) combining acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0302(̂) combining circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x06, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0303(̃) combining tilde
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0304(̄) combining macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0305(̅) combining overline
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0306(̆) combining breve
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0307(̇) combining dot above
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0308(̈) combining diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0D, 0x98, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030A(̊) combining ring above
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x03, 0x3B, 0xD8, 0xC1, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030B(̋) combining double acute accent
            new byte[] { 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030C(̌) combining caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0370(Ͱ) greek capital letter heta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0371(ͱ) greek small letter heta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0372(Ͳ) greek capital letter archaic sampi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x37, 0x76, 0x63, 0x37, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0373(ͳ) greek small letter archaic sampi
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0374(ʹ) greek numeral sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x76, 0xE6, 0x63, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0376(Ͷ) greek capital letter pamphylian digamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0377(ͷ) greek small letter pamphylian digamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x03, 0x30, 0x80, 0x01, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //037B(ͻ) greek small reversed lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //037C(ͼ) greek small dotted lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x0C, 0x80, 0x81, 0x33, 0x38, 0x83, 0x33, 0x80, 0x01, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //037D(ͽ) greek small reversed dotted lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //037F(Ϳ) greek capital letter yot
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0384(΄) greek tonos
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0385(΅) greek dialytika tonos
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0386(Ά) greek capital letter alpha with tonos
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0387(·) greek ano teleia
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0388(Έ) greek capital letter epsilon with tonos
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0389(Ή) greek capital letter eta with tonos
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //038A(Ί) greek capital letter iota with tonos
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //038C(Ό) greek capital letter omicron with tonos
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //038E(Ύ) greek capital letter upsilon with tonos
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //038F(Ώ) greek capital letter omega with tonos
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x98, 0x01, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0390(ΐ) greek small letter iota with dialytika and tonos
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0391(Α) greek capital letter alpha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x71, 0x98, 0x83, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x87, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0392(Β) greek capital letter beta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0393(Γ) greek capital letter gamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0F, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x39, 0x1C, 0xC3, 0x30, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0394(Δ) greek capital letter delta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0395(Ε) greek capital letter epsilon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0396(Ζ) greek capital letter zeta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0397(Η) greek capital letter eta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0xF8, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0398(Θ) greek capital letter theta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0399(Ι) greek capital letter iota
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039A(Κ) greek capital letter kappa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xF0, 0x80, 0x1F, 0x9C, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039B(Λ) greek capital letter lamda
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039C(Μ) greek capital letter mu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039D(Ν) greek capital letter nu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039E(Ξ) greek capital letter xi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //039F(Ο) greek capital letter omicron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A0(Π) greek capital letter pi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A1(Ρ) greek capital letter rho
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC7, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A3(Σ) greek capital letter sigma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A4(Τ) greek capital letter tau
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A5(Υ) greek capital letter upsilon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xFC, 0xE3, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x66, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A6(Φ) greek capital letter phi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A7(Χ) greek capital letter chi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x66, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A8(Ψ) greek capital letter psi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A9(Ω) greek capital letter omega
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03AA(Ϊ) greek capital letter iota with dialytika
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x60, 0x0C, 0x87, 0x39, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03AB(Ϋ) greek capital letter upsilon with dialytika
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0x78, 0xE3, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03AC(ά) greek small letter alpha with tonos
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xF8, 0xC3, 0x00, 0x06, 0xC0, 0x00, 0x78, 0xC0, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03AD(έ) greek small letter epsilon with tonos
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //03AE(ή) greek small letter eta with tonos
            new byte[] { 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03AF(ί) greek small letter iota with tonos
            new byte[] { 0xC0, 0x00, 0x06, 0x30, 0x00, 0x00, 0x98, 0x01, 0x00, 0x1E, 0xC3, 0x71, 0x18, 0x87, 0x71, 0x30, 0x03, 0x3B, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B0(ΰ) greek small letter upsilon with dialytika and tonos
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE3, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B1(α) greek small letter alpha
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x18, 0x86, 0x61, 0x18, 0x86, 0xE1, 0x0F, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xE3, 0x18, 0xFE, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B2(β) greek small letter beta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0D, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00}, //03B3(γ) greek small letter gamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x06, 0xE0, 0x00, 0xFC, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B4(δ) greek small letter delta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x00, 0x06, 0xC0, 0x00, 0x78, 0xC0, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B5(ε) greek small letter epsilon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0xC0, 0x01, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03B6(ζ) greek small letter zeta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //03B7(η) greek small letter eta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x3F, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B8(θ) greek small letter theta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03B9(ι) greek small letter iota
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03BA(κ) greek small letter kappa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x80, 0x03, 0x30, 0x00, 0x06, 0x60, 0x00, 0x0E, 0xF0, 0x81, 0x1B, 0x98, 0xC3, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03BB(λ) greek small letter lamda
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //03BC(μ) greek small letter mu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x60, 0x0C, 0xC6, 0x60, 0x18, 0x87, 0x3B, 0xB0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03BD(ν) greek small letter nu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x78, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x0E, 0xC0, 0x0F, 0x0E, 0x60, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03BE(ξ) greek small letter xi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03BF(ο) greek small letter omicron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x83, 0x0D, 0xD8, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0xD8, 0x80, 0x1D, 0x98, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C0(π) greek small letter pi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE0, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0xE1, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //03C1(ρ) greek small letter rho
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03C2(ς) greek small letter final sigma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x1C, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0xE1, 0x1C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C3(σ) greek small letter sigma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C4(τ) greek small letter tau
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xC3, 0x71, 0x18, 0x87, 0x71, 0x30, 0x03, 0x3B, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C5(υ) greek small letter upsilon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE1, 0x3F, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xFC, 0x01, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00}, //03C6(φ) greek small letter phi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0xC3, 0x18, 0xD8, 0x81, 0x0D, 0x70, 0x00, 0x07, 0x70, 0x80, 0x0F, 0xD8, 0xC0, 0x19, 0x8C, 0x21, 0x20, 0x00, 0x00, 0x00}, //03C7(χ) greek small letter chi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xFC, 0x01, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C8(ψ) greek small letter psi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xDC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C9(ω) greek small letter omega
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03CA(ϊ) greek small letter iota with dialytika
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x1E, 0xC3, 0x71, 0x18, 0x87, 0x71, 0x30, 0x03, 0x3B, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03CB(ϋ) greek small letter upsilon with dialytika
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03CC(ό) greek small letter omicron with tonos
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0x1E, 0xC3, 0x71, 0x18, 0x87, 0x71, 0x30, 0x03, 0x3B, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03CD(ύ) greek small letter upsilon with tonos
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x60, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xDC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03CE(ώ) greek small letter omega with tonos
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x0E, 0x76, 0xE0, 0x03, 0x7E, 0xE0, 0x0C, 0x86, 0x63, 0x70, 0x06, 0x06, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03CF(Ϗ) greek capital kai symbol
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x80, 0x0D, 0xCE, 0x60, 0x0C, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x73, 0xE6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D0(ϐ) greek beta symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x0C, 0x67, 0x60, 0x06, 0xE6, 0x60, 0xF8, 0x07, 0x60, 0x00, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D1(ϑ) greek theta symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0xE0, 0x0C, 0x8F, 0xF9, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D2(ϒ) greek upsilon with hook symbol
            new byte[] { 0x18, 0xC0, 0x00, 0x06, 0x60, 0xE0, 0x0C, 0x8F, 0xF9, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D3(ϓ) greek upsilon with acute and hook symbol
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x61, 0xE0, 0x0C, 0x8F, 0xF9, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D4(ϔ) greek upsilon with diaeresis and hook symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xFC, 0xE3, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x66, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D5(ϕ) greek phi symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0xFF, 0x67, 0x37, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xDC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D6(ϖ) greek pi symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x86, 0x33, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0F, 0xD8, 0xC1, 0x38, 0x06, 0x07, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03D7(ϗ) greek kai symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //03D8(Ϙ) greek letter archaic koppa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //03D9(ϙ) greek small letter archaic koppa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x07, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //03DA(Ϛ) greek letter stigma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //03DB(ϛ) greek small letter stigma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03DC(Ϝ) greek letter digamma
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x03, 0x30, 0x00, 0x03, 0xFE, 0x01, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00}, //03DD(ϝ) greek small letter digamma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC0, 0x00, 0x0C, 0xC6, 0x70, 0xCC, 0xC7, 0x3E, 0x3C, 0xE3, 0x31, 0x06, 0x03, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03DE(Ϟ) greek letter koppa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x86, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x61, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03F7(Ϸ) greek capital letter sho
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x1C, 0x86, 0x63, 0x30, 0x86, 0x63, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //03F8(ϸ) greek small letter sho
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03F9(Ϲ) greek capital lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03FA(Ϻ) greek capital letter san
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xE3, 0x38, 0xDE, 0x63, 0x3F, 0x66, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03FB(ϻ) greek small letter san
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE0, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0xE1, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //03FC(ϼ) greek rho with stroke symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xFC, 0xC0, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x30, 0x80, 0xE1, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03FD(Ͻ) greek capital reversed lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0xC6, 0x61, 0x1C, 0xC6, 0xC1, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03FE(Ͼ) greek capital dotted lunate sigma symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xFE, 0x40, 0x1C, 0x80, 0x03, 0x70, 0x78, 0x86, 0x67, 0x00, 0x06, 0x30, 0x80, 0xE1, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03FF(Ͽ) greek capital reversed dotted lunate sigma symbol
            new byte[] { 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0400(Ѐ) cyrillic capital letter ie with grave
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0401(Ё) cyrillic capital letter io
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x03, 0xB0, 0x03, 0x7F, 0x70, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //0402(Ђ) cyrillic capital letter dje
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0403(Ѓ) cyrillic capital letter gje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF0, 0x87, 0x23, 0x1C, 0xE0, 0x00, 0x06, 0xE0, 0x3F, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x77, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0404(Є) cyrillic capital letter ukrainian ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0405(Ѕ) cyrillic capital letter dze
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0406(І) cyrillic capital letter byelorussian-ukrainian i
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0407(Ї) cyrillic capital letter yi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x60, 0x0C, 0xC6, 0xE0, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0408(Ј) cyrillic capital letter je
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x3F, 0xF0, 0x6F, 0xDF, 0xF6, 0xED, 0x7F, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0409(Љ) cyrillic capital letter lje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x61, 0x1F, 0xF6, 0x61, 0x1F, 0xF6, 0xE1, 0x3F, 0xF6, 0x6F, 0xDF, 0xF6, 0x6D, 0x7F, 0xF6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040A(Њ) cyrillic capital letter nje
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xC3, 0x01, 0x1C, 0xC0, 0x01, 0xFC, 0xC3, 0x73, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040B(Ћ) cyrillic capital letter tshe
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040C(Ќ) cyrillic capital letter kje
            new byte[] { 0x30, 0x00, 0x07, 0xE0, 0x00, 0x0C, 0x06, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x76, 0xE6, 0x63, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040D(Ѝ) cyrillic capital letter i with grave
            new byte[] { 0x98, 0x83, 0x19, 0xF0, 0x60, 0x60, 0x0C, 0xC7, 0x31, 0x98, 0x01, 0x1F, 0xF0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040E(Ў) cyrillic capital letter short u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //040F(Џ) cyrillic capital letter dzhe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0410(А) cyrillic capital letter a
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0411(Б) cyrillic capital letter be
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x71, 0x98, 0x83, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x87, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0412(В) cyrillic capital letter ve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0413(Г) cyrillic capital letter ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x83, 0x33, 0x38, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0xC3, 0x31, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00}, //0414(Д) cyrillic capital letter de
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0415(Е) cyrillic capital letter ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x66, 0x66, 0xE6, 0x66, 0x7C, 0x83, 0x1F, 0xF0, 0x00, 0x0E, 0xF0, 0x81, 0x3F, 0x6C, 0x67, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0416(Ж) cyrillic capital letter zhe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x07, 0x3F, 0x00, 0x07, 0x60, 0x00, 0x06, 0x70, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0417(З) cyrillic capital letter ze
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x76, 0xE6, 0x63, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0418(И) cyrillic capital letter i
            new byte[] { 0x9C, 0x83, 0x19, 0xF0, 0x60, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x66, 0x66, 0x36, 0xE6, 0x61, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0419(Й) cyrillic capital letter short i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041A(К) cyrillic capital letter ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x67, 0x70, 0x06, 0x67, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xC6, 0x61, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041B(Л) cyrillic capital letter el
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041C(М) cyrillic capital letter em
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041D(Н) cyrillic capital letter en
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041E(О) cyrillic capital letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041F(П) cyrillic capital letter pe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0420(Р) cyrillic capital letter er
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0421(С) cyrillic capital letter es
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0422(Т) cyrillic capital letter te
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0423(У) cyrillic capital letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xFC, 0xE3, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x66, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0424(Ф) cyrillic capital letter ef
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0425(Х) cyrillic capital letter ha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //0426(Ц) cyrillic capital letter tse
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x78, 0xFC, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0427(Ч) cyrillic capital letter che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0428(Ш) cyrillic capital letter sha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //0429(Щ) cyrillic capital letter shcha
            new byte[] { 0x00, 0x00, 0x00, 0x1E, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042A(Ъ) cyrillic capital letter hard sign
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x67, 0xE6, 0x66, 0x7C, 0x86, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x3E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042B(Ы) cyrillic capital letter yeru
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x86, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042C(Ь) cyrillic capital letter soft sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xE0, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x86, 0x7F, 0x00, 0x06, 0x30, 0x80, 0xE1, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042D(Э) cyrillic capital letter e
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x63, 0x63, 0x36, 0x66, 0x63, 0x36, 0xE6, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x73, 0xE6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042E(Ю) cyrillic capital letter yu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE7, 0x60, 0x06, 0x66, 0x60, 0x0E, 0xC6, 0x7F, 0xE0, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042F(Я) cyrillic capital letter ya
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0430(а) cyrillic small letter a
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xFC, 0xE3, 0x00, 0x06, 0xE0, 0x1F, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0431(б) cyrillic small letter be
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x80, 0x19, 0x18, 0x83, 0x39, 0xF8, 0x80, 0x39, 0x18, 0x83, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0432(в) cyrillic small letter ve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0433(г) cyrillic small letter ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x83, 0x33, 0x38, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0xC3, 0x31, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00}, //0434(д) cyrillic small letter de
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0435(е) cyrillic small letter ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xC6, 0x76, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0xF8, 0xC1, 0x36, 0x6E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0436(ж) cyrillic small letter zhe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x38, 0x00, 0x03, 0x18, 0xF0, 0x00, 0x18, 0x00, 0x03, 0x18, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0437(з) cyrillic small letter ze
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0438(и) cyrillic small letter i
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0439(й) cyrillic small letter short i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043A(к) cyrillic small letter ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x33, 0x30, 0x03, 0x33, 0x30, 0x03, 0x33, 0x18, 0xC3, 0x31, 0x0C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043B(л) cyrillic small letter el
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xE3, 0x38, 0xDE, 0x63, 0x3F, 0x66, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043C(м) cyrillic small letter em
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043D(н) cyrillic small letter en
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043E(о) cyrillic small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043F(п) cyrillic small letter pe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //0440(р) cyrillic small letter er
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0441(с) cyrillic small letter es
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0442(т) cyrillic small letter te
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //0443(у) cyrillic small letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xC0, 0x1F, 0xFE, 0x63, 0x37, 0x76, 0x63, 0x37, 0xFE, 0xC3, 0x1F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0444(ф) cyrillic small letter ef
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x70, 0x98, 0x03, 0x0F, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0445(х) cyrillic small letter ha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0xFE, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //0446(ц) cyrillic small letter tse
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xCE, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0447(ч) cyrillic small letter che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0448(ш) cyrillic small letter sha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0xFE, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0449(щ) cyrillic small letter shcha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x80, 0x01, 0x18, 0x80, 0x0F, 0xD8, 0x81, 0x39, 0x98, 0x83, 0x1D, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044A(ъ) cyrillic small letter hard sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0xE3, 0x33, 0x66, 0x63, 0x3C, 0xE6, 0x63, 0x37, 0x3E, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044B(ы) cyrillic small letter yeru
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0xC6, 0x61, 0x38, 0x86, 0x63, 0x1C, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044C(ь) cyrillic small letter soft sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x0C, 0x80, 0x01, 0x30, 0xFC, 0x03, 0x30, 0x80, 0x01, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044D(э) cyrillic small letter e
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x61, 0x3B, 0x36, 0x63, 0x33, 0x3E, 0x63, 0x33, 0x36, 0x63, 0x3B, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044E(ю) cyrillic small letter yu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xFC, 0x03, 0x33, 0x18, 0xC3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044F(я) cyrillic small letter ya
            new byte[] { 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0451(ё) cyrillic small letter io
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x7E, 0xC0, 0x01, 0xFC, 0xC0, 0x3B, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0x03, 0x30, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00}, //0452(ђ) cyrillic small letter dje
            new byte[] { 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0453(ѓ) cyrillic small letter gje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x61, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0454(є) cyrillic small letter ukrainian ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0455(ѕ) cyrillic small letter dze
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0456(і) cyrillic small letter byelorussian-ukrainian i
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0457(ї) cyrillic small letter yi
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //0458(ј) cyrillic small letter je
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x1F, 0xF0, 0x01, 0x3F, 0xF0, 0x6F, 0xDF, 0xF6, 0xED, 0x7F, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0459(љ) cyrillic small letter lje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x61, 0x1F, 0xF6, 0xE1, 0x3F, 0xF6, 0x6F, 0xDF, 0xF6, 0x6D, 0x7F, 0xF6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045A(њ) cyrillic small letter nje
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0xE0, 0x3F, 0x1C, 0xC0, 0x01, 0xFC, 0xC0, 0x3B, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045B(ћ) cyrillic small letter tshe
            new byte[] { 0x00, 0x00, 0x1C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045C(ќ) cyrillic small letter kje
            new byte[] { 0x00, 0x00, 0x00, 0x18, 0x80, 0x03, 0x70, 0x00, 0x06, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045D(ѝ) cyrillic small letter i with grave
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //045E(ў) cyrillic small letter short u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, //045F(џ) cyrillic small letter dzhe
            new byte[] { 0x9C, 0x83, 0x19, 0xF0, 0x60, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x66, 0x66, 0x36, 0xE6, 0x61, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //048A(Ҋ) cyrillic capital letter short i with tail
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //048B(ҋ) cyrillic small letter short i with tail
            new byte[] { 0x00, 0x00, 0x00, 0x1E, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //048C(Ҍ) cyrillic capital letter semisoft sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x80, 0x01, 0x18, 0x80, 0x0F, 0xD8, 0x81, 0x39, 0x98, 0x83, 0x1D, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //048D(ҍ) cyrillic small letter semisoft sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x66, 0x78, 0xC6, 0x63, 0x78, 0xFE, 0x62, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //048E(Ҏ) cyrillic capital letter er with tick
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x3C, 0xE6, 0x61, 0x3C, 0x7E, 0x61, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //048F(ҏ) cyrillic small letter er with tick
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0490(Ґ) cyrillic capital letter ghe with upturn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x30, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0491(ґ) cyrillic small letter ghe with upturn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0492(Ғ) cyrillic capital letter ghe with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0493(ғ) cyrillic small letter ghe with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x30, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00}, //0494(Ҕ) cyrillic capital letter ghe with middle hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x30, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00}, //0495(ҕ) cyrillic small letter ghe with middle hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x66, 0x66, 0xE6, 0x66, 0x7C, 0x83, 0x1F, 0xF0, 0x00, 0x0E, 0xF0, 0x81, 0x3F, 0x6C, 0x67, 0x66, 0x66, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00}, //0496(Җ) cyrillic capital letter zhe with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xC6, 0x36, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x1F, 0xF8, 0xC3, 0x76, 0x66, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //0497(җ) cyrillic small letter zhe with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x07, 0x3F, 0x00, 0x07, 0x60, 0x00, 0x06, 0x70, 0xFE, 0x03, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //0498(Ҙ) cyrillic capital letter ze with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x38, 0x00, 0x03, 0x18, 0xF0, 0x00, 0x38, 0x00, 0x03, 0x38, 0xFE, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00}, //0499(ҙ) cyrillic small letter ze with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE3, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0xFE, 0xE0, 0x1C, 0x8E, 0xE3, 0x70, 0x0E, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //049A(Қ) cyrillic capital letter ka with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x03, 0x7E, 0xE0, 0x0E, 0xC6, 0x61, 0x18, 0x06, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //049B(қ) cyrillic small letter ka with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x3B, 0xFE, 0xE1, 0x0F, 0x7E, 0xE0, 0x03, 0x7E, 0xE0, 0x0F, 0xBE, 0xE1, 0x33, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049C(Ҝ) cyrillic capital letter ka with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1B, 0xF6, 0x60, 0x07, 0x7E, 0xE0, 0x07, 0xF6, 0x60, 0x1B, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049D(ҝ) cyrillic small letter ka with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE7, 0x3B, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0xFE, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049E(Ҟ) cyrillic capital letter ka with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xE0, 0x03, 0x86, 0x63, 0x1C, 0xE6, 0xE0, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x61, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049F(ҟ) cyrillic small letter ka with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE6, 0x30, 0x8E, 0xE1, 0x0C, 0x6E, 0xE0, 0x03, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A0(Ҡ) cyrillic capital letter bashkir ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x63, 0x1C, 0xE6, 0xE0, 0x03, 0x7E, 0xE0, 0x0E, 0xC6, 0x61, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A1(ҡ) cyrillic small letter bashkir ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x00}, //04A2(Ң) cyrillic capital letter en with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00}, //04A3(ң) cyrillic small letter en with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x6E, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A4(Ҥ) cyrillic capital ligature en ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x67, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A5(ҥ) cyrillic small ligature en ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x7C, 0xC6, 0x67, 0x7C, 0xC6, 0x67, 0x7C, 0xC6, 0x07, 0x60, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00}, //04A6(Ҧ) cyrillic capital letter pe with middle hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x1C, 0xC6, 0x61, 0x7C, 0xC6, 0x67, 0x7C, 0xC6, 0x67, 0x7C, 0xC6, 0x07, 0x60, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00}, //04A7(ҧ) cyrillic small letter pe with middle hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x76, 0xF8, 0x03, 0x06, 0xE0, 0x00, 0x0C, 0x80, 0x03, 0x00}, //04A8(Ҩ) cyrillic capital letter abkhasian ha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xC0, 0x00, 0xCE, 0xE0, 0x1E, 0x6E, 0xE3, 0x36, 0x6E, 0xE3, 0x3E, 0xF8, 0x01, 0x06, 0x60, 0x00, 0x0E, 0xC0, 0x01, 0x00}, //04A9(ҩ) cyrillic small letter abkhasian ha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x63, 0xE0, 0x03, 0x1C, 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00}, //04AA(Ҫ) cyrillic capital letter es with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00}, //04AB(ҫ) cyrillic small letter es with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00}, //04AC(Ҭ) cyrillic capital letter te with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0xF0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00}, //04AD(ҭ) cyrillic small letter te with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04AE(Ү) cyrillic capital letter straight u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xE3, 0x38, 0x8C, 0x81, 0x0D, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04AF(ү) cyrillic small letter straight u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0C, 0x87, 0x39, 0xF0, 0x01, 0x0E, 0x60, 0x00, 0x06, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B0(Ұ) cyrillic capital letter straight u with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x8C, 0xC1, 0x1D, 0xD8, 0x00, 0x07, 0x70, 0xC0, 0x1F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B1(ұ) cyrillic small letter straight u with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0xC1, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //04B2(Ҳ) cyrillic capital letter ha with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x30, 0xB8, 0x01, 0x0F, 0xE0, 0x00, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //04B3(ҳ) cyrillic small letter ha with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //04B4(Ҵ) cyrillic capital ligature te tse
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBE, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0xFE, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //04B5(ҵ) cyrillic small ligature te tse
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x78, 0xFC, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00}, //04B6(Ҷ) cyrillic capital letter che with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xCE, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //04B7(ҷ) cyrillic small letter che with descender
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE7, 0x7E, 0xFC, 0x07, 0x66, 0x60, 0x06, 0x66, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B8(Ҹ) cyrillic capital letter che with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x33, 0x36, 0x63, 0x3B, 0xFE, 0xC3, 0x3F, 0x30, 0x03, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B9(ҹ) cyrillic small letter che with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xF6, 0xE3, 0x71, 0x0E, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BA(Һ) cyrillic capital letter shha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0xFE, 0xE1, 0x39, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BB(һ) cyrillic small letter shha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x18, 0xC7, 0x61, 0x1C, 0xF6, 0x61, 0x1F, 0xE6, 0x7F, 0x1C, 0xC0, 0x01, 0x1C, 0x80, 0x01, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BC(Ҽ) cyrillic capital letter abkhasian che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x39, 0x1F, 0xF3, 0x31, 0xFE, 0xC3, 0x01, 0x1C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BD(ҽ) cyrillic small letter abkhasian che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x18, 0xC7, 0x61, 0x1C, 0xF6, 0x61, 0x1F, 0xE6, 0x7F, 0x1C, 0xC0, 0x01, 0x1C, 0x80, 0x01, 0xF0, 0x07, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BE(Ҿ) cyrillic capital letter abkhasian che with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x39, 0x1F, 0xF3, 0x31, 0xFE, 0xC3, 0x01, 0x1C, 0x80, 0x01, 0xF0, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BF(ҿ) cyrillic small letter abkhasian che with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C0(Ӏ) cyrillic letter palochka
            new byte[] { 0x98, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x66, 0xE6, 0x66, 0x7C, 0x83, 0x1F, 0xF0, 0x00, 0x0E, 0xF0, 0x81, 0x3F, 0x6C, 0x67, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C1(Ӂ) cyrillic capital letter zhe with breve
            new byte[] { 0x00, 0x00, 0x00, 0x18, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x66, 0xC6, 0x76, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0xF8, 0xC1, 0x36, 0x6E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C2(ӂ) cyrillic small letter zhe with breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //04C3(Ӄ) cyrillic capital letter ka with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x1C, 0xE6, 0x60, 0x07, 0x7E, 0xE0, 0x0E, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x30, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00}, //04C4(ӄ) cyrillic small letter ka with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x67, 0x70, 0x06, 0x67, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xC6, 0x61, 0x0C, 0x06, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //04C5(Ӆ) cyrillic capital letter el with tail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x33, 0x30, 0x03, 0x33, 0x30, 0x03, 0x33, 0x18, 0xC3, 0x31, 0x0C, 0x03, 0x18, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00}, //04C6(ӆ) cyrillic small letter el with tail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //04C7(Ӈ) cyrillic capital letter en with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x30, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00}, //04C8(ӈ) cyrillic small letter en with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //04C9(Ӊ) cyrillic capital letter en with tail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x03, 0x18, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00}, //04CA(ӊ) cyrillic small letter en with tail
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x78, 0xFC, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00}, //04CB(Ӌ) cyrillic capital letter khakassian che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xCE, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x80, 0x03, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00}, //04CC(ӌ) cyrillic small letter khakassian che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x66, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x30, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00}, //04CD(Ӎ) cyrillic capital letter em with tail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0xE3, 0x39, 0xFE, 0x63, 0x3F, 0x66, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x18, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00}, //04CE(ӎ) cyrillic small letter em with tail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04CF(ӏ) cyrillic small letter palochka
            new byte[] { 0x18, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D0(Ӑ) cyrillic capital letter a with breve
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D1(ӑ) cyrillic small letter a with breve
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D2(Ӓ) cyrillic capital letter a with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D3(ӓ) cyrillic small letter a with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0x0F, 0xD8, 0xC0, 0x0C, 0xC6, 0x60, 0x7C, 0xFE, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D4(Ӕ) cyrillic capital ligature a ie
            new byte[] { 0x18, 0x83, 0x19, 0xF0, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D6(Ӗ) cyrillic capital letter ie with breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D7(ӗ) cyrillic small letter ie with breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0xFE, 0x03, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0xC6, 0x70, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D8(Ә) cyrillic capital letter schwa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFE, 0x63, 0x30, 0x06, 0xC3, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D9(ә) cyrillic small letter schwa
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0xE0, 0x1F, 0xFE, 0x03, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0xC6, 0x70, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DA(Ӛ) cyrillic capital letter schwa with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFE, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DB(ӛ) cyrillic small letter schwa with diaeresis
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x66, 0x66, 0xE6, 0x76, 0xFC, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x81, 0x3F, 0x6C, 0x67, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DC(Ӝ) cyrillic capital letter zhe with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xC6, 0x76, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0xF8, 0xC1, 0x36, 0x6E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DD(ӝ) cyrillic small letter zhe with diaeresis
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x07, 0x3F, 0x00, 0x07, 0x60, 0x00, 0x06, 0x70, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DE(Ӟ) cyrillic capital letter ze with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x38, 0x00, 0x03, 0x18, 0xF0, 0x00, 0x18, 0x00, 0x03, 0x18, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DF(ӟ) cyrillic small letter ze with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x03, 0x38, 0xC0, 0x01, 0x0C, 0xE0, 0x03, 0x70, 0x00, 0x06, 0x60, 0x04, 0xC6, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E0(Ӡ) cyrillic capital letter abkhasian dze
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x38, 0xC0, 0x01, 0x0C, 0x60, 0x00, 0x1F, 0x00, 0x03, 0x30, 0x00, 0xE3, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00}, //04E1(ӡ) cyrillic small letter abkhasian dze
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x06, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x76, 0xE6, 0x63, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E2(Ӣ) cyrillic capital letter i with macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E3(ӣ) cyrillic small letter i with macron
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x60, 0x06, 0x67, 0x78, 0xC6, 0x66, 0x66, 0x76, 0xE6, 0x63, 0x1E, 0xE6, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E4(Ӥ) cyrillic capital letter i with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E5(ӥ) cyrillic small letter i with diaeresis
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E6(Ӧ) cyrillic capital letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E7(ӧ) cyrillic small letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E8(Ө) cyrillic capital letter barred o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E9(ө) cyrillic small letter barred o
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04EA(Ӫ) cyrillic capital letter barred o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04EB(ӫ) cyrillic small letter barred o with diaeresis
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x00, 0x00, 0x7C, 0xE0, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x86, 0x7F, 0x00, 0x06, 0x30, 0x80, 0xE1, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04EC(Ӭ) cyrillic capital letter e with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x0C, 0x80, 0x01, 0x30, 0xFC, 0x03, 0x30, 0x80, 0x01, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04ED(ӭ) cyrillic small letter e with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04EE(Ӯ) cyrillic capital letter u with macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //04EF(ӯ) cyrillic small letter u with macron
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x60, 0x0E, 0xC6, 0x31, 0x98, 0x03, 0x1F, 0xF0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F0(Ӱ) cyrillic capital letter u with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //04F1(ӱ) cyrillic small letter u with diaeresis
            new byte[] { 0x60, 0x07, 0x3B, 0xD8, 0x61, 0x60, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F2(Ӳ) cyrillic capital letter u with double acute
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x03, 0x3B, 0xD8, 0xC1, 0x0C, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //04F3(ӳ) cyrillic small letter u with double acute
            new byte[] { 0x00, 0x80, 0x19, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x78, 0xFC, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F4(Ӵ) cyrillic capital letter che with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x38, 0xCE, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F5(ӵ) cyrillic small letter che with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x1E, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00}, //04F6(Ӷ) cyrillic capital letter ghe with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x1E, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00}, //04F7(ӷ) cyrillic small letter ghe with descender
            new byte[] { 0x00, 0x80, 0x19, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x67, 0xE6, 0x66, 0x7C, 0x86, 0x67, 0x78, 0xC6, 0x67, 0x6E, 0x3E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F8(Ӹ) cyrillic capital letter yeru with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0xE3, 0x33, 0x66, 0x63, 0x3C, 0xE6, 0x63, 0x37, 0x3E, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F9(ӹ) cyrillic small letter yeru with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x1E, 0xC0, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00}, //04FA(Ӻ) cyrillic capital letter ghe with stroke and hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x1E, 0xC0, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00}, //04FB(ӻ) cyrillic small letter ghe with stroke and hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00}, //04FC(Ӽ) cyrillic capital letter ha with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x30, 0x98, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0x98, 0xC3, 0x70, 0x06, 0x06, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //04FD(ӽ) cyrillic small letter ha with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x0C, 0x87, 0x39, 0xF8, 0xE1, 0x7F, 0xF0, 0x80, 0x19, 0x0C, 0x63, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04FE(Ӿ) cyrillic capital letter ha with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x70, 0x98, 0x03, 0x1F, 0xFE, 0x07, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04FF(ӿ) cyrillic small letter ha with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0xF0, 0x87, 0x61, 0x0C, 0x66, 0x60, 0x06, 0x66, 0x60, 0x0C, 0x86, 0x61, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0500(Ԁ) cyrillic capital letter komi de
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x3F, 0x18, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0501(ԁ) cyrillic small letter komi de
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x6F, 0xD8, 0xE6, 0x6C, 0xC6, 0x66, 0x6C, 0xCC, 0x86, 0x6D, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0502(Ԃ) cyrillic capital letter komi dje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x80, 0x6F, 0xDC, 0xE6, 0x6C, 0xCE, 0xC6, 0x6D, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0503(ԃ) cyrillic small letter komi dje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xCC, 0xE0, 0x1C, 0xC0, 0x01, 0x1C, 0xE0, 0x00, 0x1C, 0xC0, 0x07, 0x7C, 0xC0, 0x07, 0x7C, 0xC0, 0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0504(Ԅ) cyrillic capital letter komi zje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0xCE, 0xE1, 0x1C, 0xC0, 0x01, 0x0E, 0xC0, 0x01, 0x7C, 0xC0, 0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0505(ԅ) cyrillic small letter komi zje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xCE, 0x00, 0x1C, 0xC0, 0x01, 0x1C, 0xE0, 0x00, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00}, //0506(Ԇ) cyrillic capital letter komi dzje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xC0, 0x0C, 0xCE, 0x01, 0x1C, 0xC0, 0x01, 0x0E, 0xC0, 0x01, 0x1C, 0xC0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00}, //0507(ԇ) cyrillic small letter komi dzje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x7D, 0xD8, 0x87, 0x7D, 0xDC, 0xC7, 0x7C, 0xCC, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0508(Ԉ) cyrillic capital letter komi lje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xDC, 0xC7, 0x7C, 0xCC, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0509(ԉ) cyrillic small letter komi lje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x6C, 0xC6, 0xE6, 0x6F, 0xC6, 0x66, 0x6C, 0xC6, 0x66, 0x6C, 0xC6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050A(Ԋ) cyrillic capital letter komi nje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x6C, 0xFE, 0x66, 0x6C, 0xC6, 0x66, 0x6C, 0xC6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050B(ԋ) cyrillic small letter komi nje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050C(Ԍ) cyrillic capital letter komi sje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x0C, 0xE1, 0x00, 0x06, 0x60, 0x7E, 0x0E, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050D(ԍ) cyrillic small letter komi sje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050E(Ԏ) cyrillic capital letter komi tje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //050F(ԏ) cyrillic small letter komi tje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1680( ) ogham space mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1681(ᚁ) ogham letter beith
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1682(ᚂ) ogham letter luis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1683(ᚃ) ogham letter fearn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFC, 0xC3, 0x3F, 0xFC, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1684(ᚄ) ogham letter sail
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFE, 0xE7, 0x7F, 0xFE, 0xE7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1685(ᚅ) ogham letter nion
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1686(ᚆ) ogham letter uath
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1687(ᚇ) ogham letter dair
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1688(ᚈ) ogham letter tinne
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xFC, 0xC3, 0x3F, 0xFC, 0xF3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1689(ᚉ) ogham letter coll
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFE, 0xE7, 0x7F, 0xFE, 0xF7, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168A(ᚊ) ogham letter ceirt
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x0C, 0xC0, 0x00, 0x0C, 0x60, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x30, 0x00, 0x03, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168B(ᚋ) ogham letter muin
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x1E, 0xE0, 0x01, 0x1E, 0xF0, 0xF0, 0xFF, 0xF0, 0x80, 0x0F, 0x78, 0x80, 0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168C(ᚌ) ogham letter gort
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x3F, 0xF0, 0x03, 0x3F, 0xF8, 0xF1, 0xFF, 0xF8, 0x81, 0x0F, 0xFC, 0xC0, 0x0F, 0xEC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168D(ᚍ) ogham letter ngeadal
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x87, 0x7F, 0xF8, 0x87, 0x7F, 0xFC, 0xF3, 0xFF, 0xFC, 0xC3, 0x1F, 0xFE, 0xE1, 0x1F, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168E(ᚎ) ogham letter straif
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xCF, 0xFF, 0xFC, 0xCF, 0x7F, 0xFC, 0xF7, 0xFF, 0xFE, 0xE7, 0x3F, 0xFE, 0xF3, 0x3F, 0xEE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //168F(ᚏ) ogham letter ruis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1690(ᚐ) ogham letter ailm
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0xF0, 0xFF, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1691(ᚑ) ogham letter onn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0xF1, 0xFF, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1692(ᚒ) ogham letter ur
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xFC, 0xC3, 0x3F, 0xFC, 0xF3, 0xFF, 0xFC, 0xC3, 0x3F, 0xFC, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1693(ᚓ) ogham letter eadhadh
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFE, 0xE7, 0x7F, 0xFE, 0xF7, 0xFF, 0xFE, 0xE7, 0x7F, 0xFE, 0xE7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1694(ᚔ) ogham letter iodhadh
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0xF0, 0xFF, 0xE0, 0x00, 0x0E, 0xF0, 0x00, 0x0F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1695(ᚕ) ogham letter eabhadh
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xF8, 0x81, 0x39, 0x0C, 0xF3, 0xFF, 0x0C, 0x83, 0x39, 0xF0, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1696(ᚖ) ogham letter or
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x0C, 0xC0, 0x3E, 0x6C, 0xC3, 0x30, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1697(ᚗ) ogham letter uilleann
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFE, 0xC6, 0x3E, 0xF8, 0x81, 0x1F, 0xFC, 0xE3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1698(ᚘ) ogham letter ifin
            new byte[] { 0x00, 0xC0, 0x3F, 0xFE, 0xC7, 0x3F, 0xFE, 0xC7, 0x3F, 0xFC, 0xE3, 0x7F, 0xFC, 0xF3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1699(ᚙ) ogham letter eamhancholl
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //169A(ᚚ) ogham letter peith
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0xFE, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //169B(᚛) ogham feather mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x03, 0x18, 0xC0, 0xF0, 0x0F, 0xC0, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //169C(᚜) ogham reversed feather mark
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x71, 0x98, 0x83, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x87, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E02(Ḃ) latin capital letter b with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x76, 0x60, 0x07, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E03(ḃ) latin small letter b with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E0A(Ḋ) latin capital letter d with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x03, 0x37, 0x00, 0x03, 0x30, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E0B(ḋ) latin small letter d with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E1E(Ḟ) latin capital letter f with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xE0, 0x03, 0x03, 0x30, 0xE0, 0x1F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E1F(ḟ) latin small letter f with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x06, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x06, 0x3E, 0x60, 0x06, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E31(ḱ) latin small letter k with acute
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0xFE, 0xE3, 0x6E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E3F(ḿ) latin small letter m with acute
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E40(Ṁ) latin capital letter m with dot above
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x6E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E41(ṁ) latin small letter m with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x0E, 0xE6, 0x61, 0x3E, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0x86, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E44(Ṅ) latin capital letter n with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E45(ṅ) latin small letter n with dot above
            new byte[] { 0x60, 0x00, 0x03, 0x18, 0x00, 0x00, 0xFE, 0x60, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E54(Ṕ) latin capital letter p with acute
            new byte[] { 0x00, 0x00, 0x18, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //1E55(ṕ) latin small letter p with acute
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0xFE, 0x60, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x18, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E56(Ṗ) latin capital letter p with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0x80, 0x03, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //1E57(ṗ) latin small letter p with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E58(Ṙ) latin capital letter r with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xEE, 0xC0, 0x3B, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E59(ṙ) latin small letter r with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E60(Ṡ) latin capital letter s with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E61(ṡ) latin small letter s with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E6A(Ṫ) latin capital letter t with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E6B(ṫ) latin small letter t with dot above
            new byte[] { 0x38, 0x00, 0x07, 0xE0, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7F, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E80(Ẁ) latin capital letter w with grave
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E81(ẁ) latin small letter w with grave
            new byte[] { 0xC0, 0x01, 0x0E, 0x60, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7F, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E82(Ẃ) latin capital letter w with acute
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E83(ẃ) latin small letter w with acute
            new byte[] { 0x00, 0x80, 0x19, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xC6, 0x7B, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E84(Ẅ) latin capital letter w with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E85(ẅ) latin small letter w with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x26, 0xCC, 0x06, 0x3C, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x61, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBC(Ẽ) latin capital letter e with tilde
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x07, 0x3C, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBD(ẽ) latin small letter e with tilde
            new byte[] { 0x1C, 0x80, 0x03, 0x30, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EF2(Ỳ) latin capital letter y with grave
            new byte[] { 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //1EF3(ỳ) latin small letter y with grave
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2013(–) en dash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2014(—) em dash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2015(―) horizontal bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00}, //2017(‗) double low line
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2018(‘) left single quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x02, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2019(’) right single quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201A(‚) single low-9 quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201B(‛) single high-reversed-9 quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x81, 0x19, 0x98, 0x81, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201C(“) left double quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0xD8, 0x81, 0x0C, 0xC8, 0x80, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201D(”) right double quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0D, 0xDC, 0xC0, 0x0D, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201E(„) double low-9 quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFC, 0x01, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2020(†) dagger
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFC, 0x01, 0x06, 0x60, 0x00, 0x06, 0xFC, 0x01, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2021(‡) double dagger
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2022(•) bullet
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0x61, 0x1B, 0xB6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2026(…) horizontal ellipsis
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0x66, 0x73, 0xBE, 0xC3, 0x1D, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0x00, 0x00, 0xB8, 0xC3, 0x6E, 0xEC, 0x87, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2030(‰) per mille sign
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2032(′) prime
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x03, 0x3B, 0xD8, 0xC1, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2033(″) double prime
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2039(‹) single left-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203A(›) single right-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x83, 0x19, 0xF0, 0xC0, 0x3E, 0xF0, 0x80, 0x19, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203B(※) reference mark
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203C(‼) double exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203E(‾) overline
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2044(⁄) fraction slash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x3E, 0xE6, 0x63, 0x3E, 0xE6, 0xE1, 0x1F, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //204B(⁋) reversed pilcrow sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x6E, 0x87, 0x3F, 0xF0, 0x81, 0x3F, 0x6E, 0x07, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //204E(⁎) low asterisk
            new byte[] { 0x60, 0xE0, 0x76, 0xFC, 0x83, 0x1F, 0xF8, 0xE3, 0x76, 0x64, 0x02, 0x06, 0x6E, 0x87, 0x3F, 0xF0, 0x81, 0x3F, 0x6E, 0x07, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2051(⁑) two asterisks aligned vertically
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x01, 0x1E, 0xE0, 0x01, 0x1F, 0xD8, 0x81, 0x1F, 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2074(⁴) superscript four
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x80, 0x1B, 0x98, 0x81, 0x19, 0x98, 0x81, 0x19, 0x98, 0x81, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //207F(ⁿ) superscript latin small letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x87, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x18, 0x80, 0x01, 0x3E, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A3(₣) french franc sign
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x01, 0x3F, 0x30, 0x00, 0x03, 0x30, 0x80, 0x3F, 0x30, 0x00, 0x03, 0xF8, 0x03, 0x03, 0x30, 0xE0, 0x63, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A4(₤) lira sign
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x6E, 0xE0, 0x07, 0xF6, 0x67, 0x3F, 0xFE, 0xE3, 0x37, 0x6E, 0x67, 0x66, 0x66, 0x66, 0xE6, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A7(₧) peseta sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x66, 0x7C, 0xC6, 0x67, 0x7F, 0xF6, 0x67, 0x7F, 0xF6, 0x67, 0x7F, 0x36, 0x66, 0x63, 0xE6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AA(₪) new sheqel sign
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x73, 0x38, 0xC0, 0x01, 0x1C, 0xE0, 0x7F, 0x1C, 0xE0, 0x3F, 0x1C, 0xC0, 0x01, 0x38, 0x02, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AC(€) euro sign
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x06, 0xC0, 0x63, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x8E, 0x03, 0x6C, 0xC0, 0x07, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2105(℅) care of
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x06, 0xC0, 0x63, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0xE0, 0x7C, 0xC0, 0x07, 0x7C, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00}, //2106(℆) cada una
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x01, 0x3E, 0xE0, 0x03, 0x3E, 0xE0, 0x03, 0x3E, 0xE0, 0x01, 0x1E, 0xE0, 0x00, 0x07, 0x78, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2113(ℓ) script small l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xE0, 0x0E, 0xFE, 0xE7, 0x7F, 0xFE, 0x67, 0x0F, 0xE6, 0x60, 0x7E, 0xE6, 0x60, 0x0E, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2116(№) numero sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x70, 0xF6, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0x36, 0x66, 0x63, 0x3E, 0xC6, 0x30, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2117(℗) sound recording copyright
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xC3, 0x3C, 0xCC, 0xC3, 0x2C, 0xCC, 0xC2, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2122(™) trade mark sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2126(Ω) ohm sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFE, 0xC7, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2127(℧) inverted ohm sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x8E, 0xE3, 0x38, 0xFE, 0xE3, 0x00, 0x0E, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //212E(℮) estimated symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC0, 0x3F, 0x38, 0xC6, 0x67, 0xCE, 0x06, 0x7C, 0xC0, 0x03, 0x66, 0x60, 0x06, 0x66, 0xE0, 0x07, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //214B(⅋) turned ampersand
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x70, 0x80, 0xFB, 0x1C, 0xE6, 0x70, 0x04, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2150(⅐) vulgar fraction one seventh
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x31, 0x98, 0x01, 0x0C, 0x60, 0x00, 0xFB, 0xB8, 0xCD, 0xD9, 0x8E, 0x0F, 0xC0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2151(⅑) vulgar fraction one ninth
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x71, 0x98, 0x83, 0x1D, 0xF8, 0x00, 0x07, 0x38, 0xC0, 0xFF, 0xFE, 0x0D, 0xFE, 0xE0, 0x0D, 0xDE, 0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2152(⅒) vulgar fraction one tenth
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x60, 0x00, 0xFB, 0x18, 0xC6, 0x70, 0x0E, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2153(⅓) vulgar fraction one third
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x00, 0x03, 0x38, 0xC6, 0x71, 0xBC, 0x03, 0x1C, 0xE0, 0x00, 0xFF, 0x38, 0xC6, 0x71, 0x0E, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2154(⅔) vulgar fraction two thirds
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x70, 0x00, 0xFB, 0x98, 0xC1, 0x78, 0x06, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2155(⅕) vulgar fraction one fifth
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x00, 0x03, 0x38, 0xC6, 0x71, 0xBC, 0x03, 0x1C, 0xE0, 0x00, 0xFF, 0x98, 0xC1, 0x78, 0x06, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2156(⅖) vulgar fraction two fifths
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x80, 0x03, 0x38, 0x06, 0x33, 0xB0, 0xE1, 0x0F, 0x60, 0x00, 0xFB, 0x98, 0xC1, 0x78, 0x06, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2157(⅗) vulgar fraction three fifths
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x03, 0x3E, 0xE0, 0x73, 0xB0, 0x03, 0x1C, 0xE0, 0x00, 0xFF, 0xB8, 0xC1, 0x78, 0x06, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2158(⅘) vulgar fraction four fifths
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x70, 0x80, 0x3B, 0x9C, 0xE1, 0x78, 0x84, 0x0D, 0xD8, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2159(⅙) vulgar fraction one sixth
            new byte[] { 0x00, 0x00, 0x00, 0x3E, 0x60, 0x00, 0x3E, 0x06, 0x33, 0xB0, 0xE1, 0x0F, 0x70, 0x80, 0x33, 0x9C, 0xE1, 0x78, 0x84, 0x0D, 0xD8, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215A(⅚) vulgar fraction five sixths
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x60, 0x00, 0x7B, 0x98, 0xCD, 0xF8, 0x86, 0x0D, 0xD8, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215B(⅛) vulgar fraction one eighth
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x80, 0x03, 0x38, 0x06, 0x33, 0xB0, 0xE1, 0x0F, 0x60, 0x00, 0x7B, 0x98, 0xCD, 0xF8, 0x86, 0x0D, 0xD8, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215C(⅜) vulgar fraction three eighths
            new byte[] { 0x00, 0x00, 0x00, 0x3E, 0x60, 0x00, 0x3E, 0x06, 0x33, 0xB0, 0xE1, 0x0F, 0x60, 0x00, 0x7B, 0x98, 0xCD, 0xF8, 0x86, 0x0D, 0xD8, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215D(⅝) vulgar fraction five eighths
            new byte[] { 0x00, 0x00, 0x00, 0x3E, 0x80, 0x03, 0x18, 0xC7, 0x39, 0x8C, 0xC1, 0x0C, 0x60, 0x00, 0x7B, 0x98, 0xCD, 0xF8, 0x86, 0x0D, 0xD8, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215E(⅞) vulgar fraction seven eighths
            new byte[] { 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x87, 0x39, 0xD8, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215F(⅟) fraction numerator one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2160(Ⅰ) roman numeral one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x60, 0x0C, 0xC3, 0x30, 0x9C, 0x83, 0x19, 0xB8, 0x01, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2164(Ⅴ) roman numeral five
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2169(Ⅹ) roman numeral ten
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //216C(Ⅼ) roman numeral fifty
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //216D(Ⅽ) roman numeral one hundred
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //216E(Ⅾ) roman numeral five hundred
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //216F(Ⅿ) roman numeral one thousand
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2170(ⅰ) small roman numeral one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2174(ⅴ) small roman numeral five
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x70, 0x98, 0x03, 0x0F, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2179(ⅹ) small roman numeral ten
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //217C(ⅼ) small roman numeral fifty
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //217D(ⅽ) small roman numeral one hundred
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //217E(ⅾ) small roman numeral five hundred
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x6E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //217F(ⅿ) small roman numeral one thousand
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0x60, 0x03, 0x36, 0xE6, 0x73, 0xB6, 0xC3, 0x1F, 0xE0, 0x00, 0xFF, 0x38, 0xC6, 0x71, 0x0E, 0x0C, 0xC0, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2189(↉) vulgar fraction zero thirds
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x60, 0x60, 0x06, 0xE7, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //218A(↊) turned digit two
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x61, 0x0E, 0x60, 0x00, 0x0E, 0xC0, 0x01, 0x78, 0x00, 0x07, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //218B(↋) turned digit three
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x3C, 0xE0, 0xFF, 0x3C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2190(←) leftwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xFC, 0x41, 0x17, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2191(↑) upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x18, 0x80, 0xF3, 0x7F, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2192(→) rightwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xC0, 0x16, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2193(↓) downwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x80, 0x1B, 0xBC, 0xE3, 0x7F, 0xBC, 0x03, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2194(↔) left right arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xFC, 0x41, 0x17, 0x70, 0xC0, 0x1F, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2195(↕) up down arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xC0, 0x03, 0x7C, 0xC0, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2196(↖) north west arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE0, 0x03, 0x3C, 0xC0, 0x03, 0x36, 0x30, 0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2197(↗) north east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x3E, 0xC0, 0x03, 0x3C, 0xE0, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2198(↘) south east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0xC4, 0xC0, 0x07, 0x3C, 0xC0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2199(↙) south west arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x86, 0x73, 0x3C, 0xE3, 0xFF, 0xBC, 0x01, 0x1B, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //219A(↚) leftwards arrow with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x00, 0x1B, 0x98, 0xF3, 0x7F, 0x9C, 0xC3, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //219B(↛) rightwards arrow with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x80, 0x1F, 0xF8, 0xE3, 0x7F, 0xF8, 0x83, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //219E(↞) leftwards two headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0xF8, 0x03, 0x0F, 0xF8, 0x81, 0x36, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //219F(↟) upwards two headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x80, 0x1F, 0xF8, 0xE3, 0x7F, 0xF8, 0x83, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21A0(↠) rightwards two headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x80, 0x3F, 0xF0, 0x80, 0x2E, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21A1(↡) downwards two headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xFC, 0x41, 0x17, 0x70, 0xC0, 0x1F, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21A8(↨) up down arrow with base
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x10, 0x8C, 0xC1, 0x1C, 0xEC, 0xC1, 0x1B, 0x9C, 0xC1, 0x18, 0x84, 0x01, 0x18, 0xE0, 0x07, 0x3C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21AF(↯) downwards zigzag arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x3C, 0xE0, 0xFF, 0x3C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E0(⇠) leftwards dashed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x07, 0xF8, 0xC0, 0x1F, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E1(⇡) upwards dashed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x1C, 0xC0, 0xF3, 0x7F, 0xC0, 0x03, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E2(⇢) rightwards dashed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0xFC, 0x81, 0x0F, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E3(⇣) downwards dashed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x60, 0x06, 0x76, 0xE0, 0xFF, 0x76, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E4(⇤) leftwards arrow to bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x6E, 0xE0, 0xF7, 0x7F, 0xE0, 0x06, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E5(⇥) rightwards arrow to bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0C, 0xE0, 0x80, 0xFF, 0xDC, 0xEF, 0xC0, 0xDC, 0x0F, 0x0F, 0xE0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E6(⇦) leftwards white arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x9C, 0xC3, 0x30, 0xFF, 0x0F, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E7(⇧) upwards white arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0x00, 0x1F, 0xBE, 0x63, 0xE0, 0xBE, 0x03, 0x1F, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E8(⇨) rightwards white arrow
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0xFF, 0x0C, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21E9(⇩) downwards white arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x76, 0xE3, 0x33, 0x1E, 0xE3, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21F5(⇵) downwards arrow leftwards of upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x0E, 0xC6, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2200(∀) for all
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2201(∁) complement
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x00, 0x18, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2202(∂) partial differential
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x7F, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2203(∃) there exists
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE7, 0x7F, 0x80, 0x07, 0x78, 0xC0, 0x07, 0x6C, 0xE0, 0x06, 0x7F, 0x30, 0x06, 0x63, 0x18, 0x86, 0x61, 0xFE, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2204(∄) there does not exist
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x06, 0x70, 0x00, 0x03, 0x1F, 0xD8, 0xC3, 0x3C, 0xEC, 0xC3, 0x36, 0xF8, 0x03, 0x0F, 0x18, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2205(∅) empty set
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0F, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x39, 0x1C, 0xC3, 0x30, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2206(∆) increment
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFC, 0xC7, 0x30, 0x1C, 0x83, 0x19, 0x98, 0x01, 0x1F, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2207(∇) nabla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF0, 0x87, 0x23, 0x1C, 0xE0, 0x00, 0x06, 0xE0, 0x3F, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x77, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2208(∈) element of
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x03, 0x7B, 0x98, 0xC1, 0x0C, 0xC6, 0xE0, 0x3F, 0x7E, 0xC0, 0x03, 0x38, 0x80, 0x63, 0xEC, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2209(∉) not an element of
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x61, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220A(∊) small element of
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xE0, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x86, 0x7F, 0x00, 0x06, 0x30, 0x80, 0xE1, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220B(∋) contains as member
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x7C, 0xE3, 0x1C, 0x80, 0x03, 0x7C, 0xC0, 0x86, 0x7F, 0x70, 0x06, 0x33, 0xB8, 0xE1, 0x0D, 0x7C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220C(∌) does not contain as member
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x0C, 0x80, 0x01, 0x30, 0xFC, 0x03, 0x30, 0x80, 0x01, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220D(∍) small contains as member
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0xF8, 0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220E(∎) end of proof
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220F(∏) n-ary product
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2210(∐) n-ary coproduct
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC7, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2211(∑) n-ary summation
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2212(−) minus sign
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2213(∓) minus-or-plus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2215(∕) division slash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xE0, 0x76, 0xF8, 0x03, 0x1F, 0xF8, 0xE3, 0x76, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2217(∗) asterisk operator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xD8, 0x80, 0x0D, 0xD8, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2218(∘) ring operator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2219(∙) bullet operator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x06, 0x7C, 0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221A(√) square root
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3B, 0xD8, 0xC0, 0x0F, 0xF0, 0xE0, 0x0F, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x06, 0x7C, 0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221B(∛) cube root
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3B, 0xFE, 0x60, 0x0F, 0xFE, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x7E, 0x80, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221C(∜) fourth root
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE3, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221D(∝) proportional to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xE6, 0x66, 0x66, 0xE6, 0xE6, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221E(∞) infinity
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221F(∟) right angle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0xFC, 0xE3, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2229(∩) intersection
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //222A(∪) union
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x07}, //222B(∫) integral
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x6C, 0x40, 0x6C, 0xC0, 0xC3, 0x03, 0x6C, 0x40, 0x6C, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2248(≈) almost equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0xE3, 0x7F, 0xE0, 0x00, 0x06, 0xFE, 0xC7, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2260(≠) not equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2261(≡) identical to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x03, 0x18, 0x80, 0x01, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x03, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00}, //2264(≤) less-than or equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00}, //2265(≥) greater-than or equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0xE0, 0x07, 0x3F, 0xF0, 0x81, 0x0F, 0x7C, 0xE0, 0x03, 0x7C, 0x80, 0x0F, 0xF0, 0x01, 0x3E, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //226A(≪) much less-than
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x40, 0x03, 0x7E, 0x80, 0x0F, 0xF0, 0x01, 0x3E, 0xC0, 0x07, 0x7C, 0xE0, 0x03, 0x1F, 0xF8, 0xC0, 0x07, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //226B(≫) much greater-than
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xE2, 0x70, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //22CE(⋎) curly logical or
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //22EE(⋮) vertical ellipsis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x07, 0xD8, 0xC0, 0x18, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2302(⌂) house
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2310(⌐) reversed not sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9E, 0xE7, 0x79, 0xFE, 0x87, 0x19, 0x98, 0x81, 0x19, 0xFE, 0xE7, 0x79, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2318(⌘) place of interest sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2319(⌙) turned not sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x80, 0x11, 0x04, 0x00, 0x78, 0xC0, 0x60, 0x46, 0x60, 0x40, 0x66, 0x18, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //231A(⌚) watch
            new byte[] { 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //231C(⌜) top left corner
            new byte[] { 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //231D(⌝) top right corner
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0xF0, 0x07}, //231E(⌞) bottom left corner
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0xFC}, //231F(⌟) bottom right corner
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2320(⌠) top half integral
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x07}, //2321(⌡) bottom half integral
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2324(⌤) up arrowhead between two horizontal bars
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2325(⌥) option key
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x3B, 0x7E, 0xE7, 0x77, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2326(⌦) erase to the right
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x60, 0xF6, 0x66, 0x6F, 0x46, 0xE6, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2327(⌧) x in a rectangle box
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x87, 0x61, 0xEE, 0xC7, 0x7E, 0xD8, 0x06, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //232B(⌫) erase to the left
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2336(⌶) apl functional symbol i-beam
            new byte[] { 0x00, 0xF0, 0x0F, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00}, //2337(⌷) apl functional symbol squish quad
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0xEE, 0xFF, 0x06, 0x6E, 0xE0, 0xFE, 0x6F, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2338(⌸) apl functional symbol quad equal
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0xF6, 0x6E, 0xEF, 0xF6, 0x6E, 0xE0, 0x06, 0xEE, 0xFF, 0x06, 0x6E, 0xE0, 0xF6, 0x6E, 0xEF, 0xF6, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2339(⌹) apl functional symbol quad divide
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x66, 0x6E, 0xEE, 0xF6, 0xEF, 0xFB, 0x1E, 0xEF, 0xF9, 0xBE, 0x6F, 0xEF, 0xE6, 0x6E, 0xE4, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //233A(⌺) apl functional symbol quad diamond
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xEF, 0xB6, 0xEF, 0xF9, 0xB6, 0x6F, 0xEF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //233B(⌻) apl functional symbol quad jot
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xFF, 0x1E, 0xEF, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0xEE, 0xE0, 0x1E, 0x6F, 0xFF, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //233C(⌼) apl functional symbol quad circle
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x1F, 0x7C, 0xC3, 0x66, 0x66, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0x03, 0x1F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //233D(⌽) apl functional symbol circle stile
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x6F, 0xBE, 0xE7, 0x79, 0xBE, 0xC7, 0x6F, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //233E(⌾) apl functional symbol circle jot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0x38, 0xC0, 0xF1, 0xFF, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //233F(⌿) apl functional symbol slash bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0C, 0x80, 0x01, 0x30, 0xF0, 0xFF, 0xC0, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2340(⍀) apl functional symbol backslash bar
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xF0, 0x86, 0x6F, 0xFC, 0xE6, 0x6E, 0xE6, 0x36, 0xEE, 0xE1, 0x0E, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2341(⍁) apl functional symbol quad slash
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0xEE, 0xE0, 0x1E, 0xEE, 0xE3, 0x76, 0x6E, 0xEE, 0xC6, 0x6F, 0xF8, 0x06, 0x6F, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2342(⍂) apl functional symbol quad backslash
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xF0, 0x86, 0x6F, 0xEC, 0x66, 0x6E, 0xE3, 0x1E, 0xEE, 0xE1, 0x36, 0x6E, 0xE6, 0xC6, 0x6E, 0xF8, 0x06, 0x6F, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2343(⍃) apl functional symbol quad less-than
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0xEE, 0xE1, 0x3E, 0x6E, 0xE7, 0xE6, 0x6E, 0xFC, 0x86, 0x6F, 0xF8, 0xC6, 0x6F, 0xEE, 0x76, 0xEE, 0xE3, 0x1E, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2344(⍄) apl functional symbol quad greater-than
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x78, 0xC0, 0x07, 0x7E, 0xF0, 0x7F, 0x7E, 0x80, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2345(⍅) apl functional symbol leftwards vane
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x01, 0x3E, 0xE0, 0xE7, 0xFF, 0xE0, 0x07, 0x3E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2346(⍆) apl functional symbol rightwards vane
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x36, 0xEE, 0xE3, 0x3E, 0xEE, 0xFF, 0x3E, 0x6E, 0xE3, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2347(⍇) apl functional symbol quad leftwards arrow
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x86, 0x6E, 0xF8, 0x86, 0xFF, 0xFF, 0x86, 0x6F, 0xF8, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2348(⍈) apl functional symbol quad rightwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xE1, 0x31, 0x1C, 0xE6, 0x63, 0x76, 0x66, 0x6E, 0xC6, 0xC6, 0x78, 0x1C, 0x03, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2349(⍉) apl functional symbol circle backslash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //234A(⍊) apl functional symbol down tack underbar
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0F, 0xF0, 0x80, 0x1F, 0xF8, 0x81, 0x3F, 0x7C, 0xC3, 0x36, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //234B(⍋) apl functional symbol delta stile
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x0E, 0xEF, 0xF0, 0x1E, 0xEF, 0xF9, 0x9E, 0x6F, 0xFF, 0xF6, 0x6E, 0xEF, 0x66, 0x6E, 0xE6, 0x46, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //234C(⍌) apl functional symbol quad down caret
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x66, 0x6E, 0xE6, 0xE6, 0x6E, 0xEF, 0xF6, 0xEE, 0xFB, 0x9E, 0xEF, 0xF9, 0x1E, 0xEF, 0xF0, 0xFE, 0x6F, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //234D(⍍) apl functional symbol quad delta
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0F, 0xF8, 0x81, 0x1F, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //234E(⍎) apl functional symbol down tack jot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xF0, 0x81, 0x3F, 0x60, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //234F(⍏) apl functional symbol upwards vane
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE4, 0xE6, 0x6E, 0xEF, 0xFE, 0x6F, 0xE6, 0x66, 0x6E, 0xE6, 0x66, 0x6E, 0xE6, 0x66, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2350(⍐) apl functional symbol quad upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //2351(⍑) apl functional symbol up tack overbar
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0xC7, 0x36, 0x7C, 0x83, 0x3F, 0xF8, 0x01, 0x1F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2352(⍒) apl functional symbol del stile
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x66, 0x6E, 0xE6, 0xF6, 0x6E, 0xEF, 0xF6, 0xEF, 0xFB, 0x9E, 0xEF, 0xF9, 0x0E, 0xEF, 0xF0, 0x0E, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2353(⍓) apl functional symbol quad up caret
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0xFE, 0xEF, 0xF0, 0x1E, 0xEF, 0xF9, 0x9E, 0x6F, 0xFF, 0xF6, 0x6E, 0xEF, 0x66, 0x6E, 0xE6, 0x46, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2354(⍔) apl functional symbol quad del
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x0E, 0xF0, 0x81, 0x1F, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //2355(⍕) apl functional symbol up tack jot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0xF0, 0xFF, 0x70, 0xC0, 0x1F, 0xF8, 0x00, 0x07, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2356(⍖) apl functional symbol downwards vane
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE7, 0x76, 0x6E, 0xE7, 0x76, 0x6E, 0xE7, 0x76, 0xEE, 0xFF, 0xFE, 0x6E, 0xE7, 0x26, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2357(⍗) apl functional symbol quad downwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2358(⍘) apl functional symbol quote underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0F, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x39, 0x1C, 0xC3, 0x30, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2359(⍙) apl functional symbol delta underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xF0, 0x81, 0x19, 0x0C, 0x83, 0x19, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //235A(⍚) apl functional symbol diamond underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xB8, 0x81, 0x19, 0xB8, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //235B(⍛) apl functional symbol jot underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x66, 0x60, 0x06, 0xC6, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //235C(⍜) apl functional symbol circle underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x0C, 0xC7, 0x6F, 0x9C, 0xC7, 0x79, 0xFC, 0xC7, 0x6F, 0x0C, 0xC6, 0x60, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //235D(⍝) apl functional symbol up shoe jot
            new byte[] { 0x00, 0xE0, 0xFF, 0x66, 0x6E, 0xE6, 0x66, 0x6E, 0xE6, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //235E(⍞) apl functional symbol quote quad
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x7C, 0xE3, 0x66, 0xFE, 0x67, 0x6E, 0xF6, 0xC7, 0x7B, 0x18, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //235F(⍟) apl functional symbol circle star
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xF6, 0x6E, 0xEF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xEF, 0xF6, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2360(⍠) apl functional symbol quad colon
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //2361(⍡) apl functional symbol up tack diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0xE1, 0x7F, 0xFC, 0xC7, 0x30, 0x1C, 0x83, 0x19, 0x98, 0x01, 0x1F, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2362(⍢) apl functional symbol del diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x0E, 0xF0, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2363(⍣) apl functional symbol star diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xD8, 0x80, 0x0D, 0xD8, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2364(⍤) apl functional symbol jot diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x66, 0x60, 0x06, 0xC6, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2365(⍥) apl functional symbol circle diaeresis
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x76, 0xFC, 0x83, 0x1F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2366(⍦) apl functional symbol down shoe stile
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x83, 0x07, 0x6C, 0x60, 0x06, 0x66, 0x60, 0x06, 0x6C, 0x80, 0x07, 0xF0, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2367(⍧) apl functional symbol left shoe stile
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x07, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2368(⍨) apl functional symbol tilde diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x98, 0x81, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2369(⍩) apl functional symbol greater-than diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00}, //236A(⍪) apl functional symbol comma bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC7, 0x30, 0x3C, 0xC3, 0x3F, 0xFC, 0x07, 0x3F, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //236B(⍫) apl functional symbol del tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x60, 0xC6, 0x67, 0x76, 0x46, 0x66, 0xE0, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //236C(⍬) apl functional symbol zilde
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x78, 0xC0, 0x06, 0xEC, 0x06, 0x3E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //236D(⍭) apl functional symbol stile tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0xFE, 0x07, 0x03, 0x00, 0x00, 0x00}, //236E(⍮) apl functional symbol semicolon underbar
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xF0, 0x86, 0xEF, 0xFF, 0xE6, 0x6E, 0xE6, 0xFE, 0xEF, 0xE1, 0x0E, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //236F(⍯) apl functional symbol quad not equal
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xFF, 0x9E, 0xEF, 0xF1, 0x1E, 0x6F, 0xF0, 0x86, 0x6F, 0xEC, 0x66, 0x6E, 0xE6, 0x06, 0x6E, 0xE0, 0x66, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2370(⍰) apl functional symbol quad question
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x0C, 0xC7, 0x30, 0x3C, 0xC3, 0x3F, 0xFC, 0x07, 0x3F, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2371(⍱) apl functional symbol down caret tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xFC, 0xC0, 0x0F, 0xFC, 0x87, 0x3F, 0x98, 0x81, 0x39, 0x0C, 0xC3, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2372(⍲) apl functional symbol up caret tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2373(⍳) apl functional symbol iota
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE0, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0xE1, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //2374(⍴) apl functional symbol rho
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xDC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2375(⍵) apl functional symbol omega
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE3, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0xF8, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2376(⍶) apl functional symbol alpha underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x00, 0x06, 0xC0, 0x00, 0x78, 0xC0, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2377(⍷) apl functional symbol epsilon underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2378(⍸) apl functional symbol iota underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0xE3, 0x3F, 0xDC, 0x01, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00}, //2379(⍹) apl functional symbol omega underbar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE3, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0x61, 0x1C, 0xC6, 0xE1, 0x1C, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //237A(⍺) apl functional symbol alpha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xF8, 0xC0, 0x02, 0x06, 0xBE, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2387(⎇) alternative key symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x80, 0x3F, 0xFC, 0xC3, 0x3F, 0xFE, 0xC7, 0x3F, 0xFC, 0x83, 0x3F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2388(⎈) helm symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xFC, 0xC3, 0x63, 0x3C, 0xC6, 0x66, 0xC0, 0xE6, 0x78, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //238B(⎋) broken circle with northwest arrow
            new byte[] { 0x00, 0xE0, 0xFF, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0x6E, 0xE0, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00}, //2395(⎕) apl functional symbol quad
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0x78, 0xB0, 0x87, 0x7B, 0xFC, 0x67, 0x60, 0xFC, 0x87, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23CE(⏎) return symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xE0, 0x00, 0x0F, 0xF0, 0x81, 0x1F, 0xFC, 0xE3, 0x7F, 0x00, 0xE0, 0x7F, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23CF(⏏) eject symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x7E, 0xC3, 0x3F, 0xF8, 0x83, 0x37, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23E8(⏨) decimal exponent symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x6C, 0xE7, 0x66, 0x66, 0x6E, 0xE6, 0x66, 0xEE, 0x66, 0x1C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23FB(⏻) power symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x31, 0x6E, 0x66, 0xE6, 0x66, 0x6E, 0xE6, 0x6E, 0xE6, 0x70, 0x9C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23FC(⏼) power on-off symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23FD(⏽) power on symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0C, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x1E, 0xC0, 0x03, 0x78, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //23FE(⏾) power sleep symbol
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2400(␀) symbol for null
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x03, 0x30, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2401(␁) symbol for start of heading
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x03, 0x30, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0x80, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2402(␂) symbol for start of text
            new byte[] { 0x00, 0xC0, 0x03, 0x0C, 0xC0, 0x01, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0x80, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2403(␃) symbol for end of text
            new byte[] { 0x00, 0xC0, 0x03, 0x0C, 0xC0, 0x01, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2404(␄) symbol for end of transmission
            new byte[] { 0x00, 0xC0, 0x03, 0x0C, 0xC0, 0x01, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00}, //2405(␅) symbol for enquiry
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0x0E, 0x30, 0x00, 0x03, 0xE0, 0x00, 0x00, 0xC0, 0x03, 0x1C, 0xC0, 0x01, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2406(␆) symbol for acknowledge
            new byte[] { 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x03, 0xF0, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2407(␇) symbol for bell
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0x3C, 0xC0, 0x06, 0x6C, 0xC0, 0x03, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x30, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2408(␈) symbol for backspace
            new byte[] { 0x00, 0x00, 0x00, 0x6C, 0xC0, 0x06, 0x7C, 0xC0, 0x06, 0x6C, 0xC0, 0x06, 0x00, 0x00, 0x3E, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2409(␉) symbol for horizontal tabulation
            new byte[] { 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x07, 0x00, 0x00, 0x3E, 0x60, 0x00, 0x06, 0xE0, 0x01, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240A(␊) symbol for line feed
            new byte[] { 0x00, 0xC0, 0x07, 0x7C, 0xC0, 0x03, 0x3C, 0x80, 0x03, 0x38, 0x80, 0x01, 0x00, 0x00, 0x3E, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240B(␋) symbol for vertical tabulation
            new byte[] { 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x00, 0x3C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x3E, 0x60, 0x00, 0x06, 0xE0, 0x01, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240C(␌) symbol for form feed
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0x0C, 0xC0, 0x00, 0x7C, 0xC0, 0x01, 0x00, 0x00, 0x3E, 0xE0, 0x03, 0x1E, 0xE0, 0x01, 0x3E, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240D(␍) symbol for carriage return
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x00, 0x3C, 0x00, 0x07, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x3E, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240E(␎) symbol for shift out
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x00, 0x3C, 0x00, 0x07, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //240F(␏) symbol for shift in
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x1C, 0xC0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2410(␐) symbol for data link escape
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x0E, 0x30, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x80, 0x01, 0x1C, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2411(␑) symbol for device control one
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x0E, 0x30, 0x00, 0x03, 0xE0, 0x00, 0x00, 0xC0, 0x03, 0x30, 0x80, 0x01, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2412(␒) symbol for device control two
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x0E, 0x30, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x80, 0x03, 0x38, 0x00, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2413(␓) symbol for device control three
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x0E, 0x30, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x03, 0x38, 0xC0, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2414(␔) symbol for device control four
            new byte[] { 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x06, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x1C, 0xC0, 0x01, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2415(␕) symbol for negative acknowledge
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x01, 0x38, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2416(␖) symbol for synchronous idle
            new byte[] { 0x00, 0xC0, 0x03, 0x0C, 0xC0, 0x01, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2417(␗) symbol for end of transmission block
            new byte[] { 0x00, 0x80, 0x03, 0x0C, 0xC0, 0x00, 0x38, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2418(␘) symbol for cancel
            new byte[] { 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x00, 0x3C, 0xC0, 0x00, 0x0C, 0xC0, 0x07, 0x00, 0x00, 0x76, 0xE0, 0x07, 0x7E, 0xE0, 0x07, 0x7E, 0x60, 0x07, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2419(␙) symbol for end of medium
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x01, 0x38, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241A(␚) symbol for substitute
            new byte[] { 0x00, 0xC0, 0x03, 0x0C, 0xC0, 0x01, 0x0C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x80, 0x03, 0x0C, 0xC0, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241B(␛) symbol for escape
            new byte[] { 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x00, 0x3C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x30, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241C(␜) symbol for file separator
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0x0C, 0xC0, 0x07, 0x6C, 0xC0, 0x03, 0x00, 0x00, 0x3C, 0xE0, 0x00, 0x0E, 0xC0, 0x03, 0x30, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241D(␝) symbol for group separator
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x07, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x06, 0x00, 0x00, 0x3C, 0xE0, 0x00, 0x0E, 0xC0, 0x03, 0x30, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241E(␞) symbol for record separator
            new byte[] { 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x07, 0x7C, 0xC0, 0x07, 0x7C, 0xC0, 0x03, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x30, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //241F(␟) symbol for unit separator
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x00, 0x3C, 0x00, 0x07, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x1E, 0x60, 0x03, 0x36, 0xE0, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2420(␠) symbol for space
            new byte[] { 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x01, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x03, 0xF0, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2421(␡) symbol for delete
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x61, 0x7C, 0xC3, 0x1D, 0xDC, 0xC1, 0x37, 0x3C, 0xC3, 0x31, 0x9C, 0xE1, 0x0D, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2422(␢) blank symbol
            new byte[] { 0x00, 0xC0, 0x06, 0x7C, 0xC0, 0x07, 0x7C, 0xC0, 0x07, 0x6C, 0xC0, 0x06, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2424(␤) symbol for newline
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2500(─) box drawings light horizontal
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2502(│) box drawings light vertical
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //250C(┌) box drawings light down and right
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2510(┐) box drawings light down and left
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2514(└) box drawings light up and right
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2518(┘) box drawings light up and left
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //251C(├) box drawings light vertical and right
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2524(┤) box drawings light vertical and left
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //252C(┬) box drawings light down and horizontal
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2534(┴) box drawings light up and horizontal
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //253C(┼) box drawings light vertical and horizontal
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2550(═) box drawings double horizontal
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2551(║) box drawings double vertical
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2552(╒) box drawings down single and right double
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2553(╓) box drawings down double and right single
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0x00, 0x03, 0xF0, 0x0F, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2554(╔) box drawings double down and right
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x7F, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2555(╕) box drawings down single and left double
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2556(╖) box drawings down double and left single
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0xC0, 0x01, 0x1C, 0xFF, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2557(╗) box drawings double down and left
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2558(╘) box drawings up single and right double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2559(╙) box drawings up double and right single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0xFF, 0x30, 0x00, 0x03, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //255A(╚) box drawings double up and right
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //255B(╛) box drawings up single and left double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //255C(╜) box drawings up double and left single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0x1F, 0xC0, 0x01, 0x1C, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //255D(╝) box drawings double up and left
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //255E(╞) box drawings vertical single and right double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0xFF, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //255F(╟) box drawings vertical double and right single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0xFF, 0x30, 0x00, 0x03, 0xF0, 0x0F, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2560(╠) box drawings double vertical and right
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x7F, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2561(╡) box drawings vertical single and left double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2562(╢) box drawings vertical double and left single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0x1F, 0xC0, 0x01, 0x1C, 0xFF, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2563(╣) box drawings double vertical and left
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2564(╤) box drawings down single and horizontal double
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2565(╥) box drawings down double and horizontal single
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //2566(╦) box drawings double down and horizontal
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2567(╧) box drawings up single and horizontal double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2568(╨) box drawings up double and horizontal single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2569(╩) box drawings double up and horizontal
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0xFF, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //256A(╪) box drawings vertical single and horizontal double
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0xFF, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //256B(╫) box drawings vertical double and horizontal single
            new byte[] { 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F}, //256C(╬) box drawings double vertical and horizontal
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2580(▀) upper half block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF}, //2581(▁) lower one eighth block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2582(▂) lower one quarter block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2583(▃) lower three eighths block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2584(▄) lower half block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2585(▅) lower five eighths block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2586(▆) lower three quarters block
            new byte[] { 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2587(▇) lower seven eighths block
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2588(█) full block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2589(▉) left seven eighths block
            new byte[] { 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F, 0xFF, 0xF1, 0x1F}, //258A(▊) left three quarters block
            new byte[] { 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07}, //258C(▌) left half block
            new byte[] { 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01}, //258D(▍) left three eighths block
            new byte[] { 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00}, //258E(▎) left one quarter block
            new byte[] { 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00}, //258F(▏) left one eighth block
            new byte[] { 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC}, //2590(▐) right half block
            new byte[] { 0x30, 0x86, 0x31, 0x8C, 0x61, 0x0C, 0x61, 0x08, 0xC3, 0x18, 0xC6, 0x30, 0x86, 0x31, 0x8C, 0x70, 0x8C, 0x61, 0x0C, 0x63, 0x18, 0xC3, 0x00, 0xC7, 0x18, 0xC6, 0x30, 0x86, 0x31, 0x0C}, //2591(░) light shade
            new byte[] { 0x78, 0xCE, 0x7B, 0xCE, 0x73, 0x1E, 0xF3, 0x9C, 0xE7, 0x3C, 0xEF, 0x79, 0xC7, 0x31, 0xCE, 0x71, 0x8E, 0xF3, 0x9E, 0xF7, 0x3C, 0xE7, 0x38, 0xE7, 0x38, 0xCF, 0x79, 0xCF, 0x73, 0xDE}, //2592(▒) medium shade
            new byte[] { 0x7F, 0xEF, 0xFB, 0xDF, 0xF7, 0xFE, 0xFF, 0xFF, 0xFF, 0xBE, 0xFF, 0x7D, 0xEF, 0x7B, 0xFF, 0xFB, 0xCF, 0xFF, 0xFE, 0xF7, 0xBF, 0xFF, 0xFD, 0xEF, 0x7F, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF}, //2593(▓) dark shade
            new byte[] { 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2594(▔) upper one eighth block
            new byte[] { 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0}, //2595(▕) right one eighth block
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07}, //2596(▖) quadrant lower left
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC}, //2597(▗) quadrant lower right
            new byte[] { 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2598(▘) quadrant upper left
            new byte[] { 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //2599(▙) quadrant upper left and lower left and lower right
            new byte[] { 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC}, //259A(▚) quadrant upper left and lower right
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07}, //259B(▛) quadrant upper left and upper right and lower left
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC}, //259C(▜) quadrant upper left and upper right and lower right
            new byte[] { 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //259D(▝) quadrant upper right
            new byte[] { 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07, 0x7F, 0xF0, 0x07}, //259E(▞) quadrant upper right and lower left
            new byte[] { 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xC0, 0x0F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //259F(▟) quadrant upper right and lower left and lower right
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25A0(■) black square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25A1(□) white square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x3F, 0xFE, 0xE3, 0x3F, 0xFE, 0xE3, 0x3F, 0xFE, 0xE3, 0x3F, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25AA(▪) black small square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F, 0x8C, 0xC1, 0x18, 0x8C, 0xC1, 0x18, 0x8C, 0xC1, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25AB(▫) white small square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0xFE, 0xE3, 0x3F, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25AC(▬) black rectangle
            new byte[] { 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF, 0xFE, 0xEF, 0xFF}, //25AE(▮) black vertical rectangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xE0, 0x00, 0x0F, 0xF0, 0x81, 0x1F, 0xFC, 0xE3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25B2(▲) black up-pointing triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xE0, 0x00, 0x0F, 0xF0, 0x81, 0x1F, 0xFC, 0xE3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25B4(▴) black up-pointing small triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x0F, 0xFC, 0xC1, 0x3F, 0xFC, 0xC0, 0x03, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25B6(▶) black right-pointing triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x3C, 0xC0, 0x0F, 0xFC, 0xC1, 0x3F, 0xFC, 0xC0, 0x03, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25BA(►) black right-pointing pointer
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFC, 0x83, 0x1F, 0xF0, 0x01, 0x0F, 0xE0, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25BC(▼) black down-pointing triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0xFC, 0x83, 0x1F, 0xF0, 0x01, 0x0F, 0xE0, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25BE(▾) black down-pointing small triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC0, 0x03, 0x3F, 0xFC, 0x83, 0x3F, 0xE0, 0x03, 0x3C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25C4(◄) black left-pointing pointer
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0xF8, 0xC0, 0x1F, 0xFC, 0xC3, 0x1F, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25C6(◆) black diamond
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0xD8, 0xC0, 0x19, 0x8C, 0xC3, 0x1D, 0xD8, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25CA(◊) lozenge
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x98, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x98, 0x03, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25CB(○) white circle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x3F, 0xFC, 0xC3, 0x7F, 0xFE, 0xC7, 0x7F, 0xFC, 0x83, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25CF(●) black circle
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //25D8(◘) inverse bullet
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xF7, 0xFE, 0xFF, 0xFF, 0xFD, 0xFF, 0xF7, 0xFE, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //25D9(◙) inverse white circle
            new byte[] { 0x00, 0x08, 0xC0, 0x00, 0x0C, 0xE0, 0x00, 0x0E, 0xF0, 0x00, 0x0F, 0xF8, 0x80, 0x0F, 0xFC, 0xE0, 0x0F, 0xFE, 0xF0, 0x0F, 0xFF, 0xF8, 0x8F, 0xFF, 0xFC, 0xCF, 0xFF, 0xFE, 0xFF, 0xFF}, //25E2(◢) black lower right triangle
            new byte[] { 0x03, 0x30, 0x00, 0x07, 0x70, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0x7F, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF1, 0x3F, 0xFF, 0xF3, 0x7F, 0xFF, 0xFF, 0xFF}, //25E3(◣) black lower left triangle
            new byte[] { 0xFF, 0xFF, 0x7F, 0xFF, 0xF7, 0x3F, 0xFF, 0xF3, 0x1F, 0xFF, 0xF0, 0x0F, 0x7F, 0xF0, 0x07, 0x3F, 0xF0, 0x03, 0x1F, 0xF0, 0x01, 0x0F, 0x70, 0x00, 0x07, 0x30, 0x00, 0x03, 0x10, 0x00}, //25E4(◤) black upper left triangle
            new byte[] { 0xFE, 0xEF, 0xFF, 0xFC, 0xCF, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFE, 0xE0, 0x0F, 0xFC, 0xC0, 0x0F, 0xF8, 0x80, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x0C, 0xC0, 0x00, 0x08, 0x80}, //25E5(◥) black upper right triangle
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x1B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25E6(◦) white bullet
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0xC7, 0x7F, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25FC(◼) black medium square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xF6, 0xC6, 0x3F, 0xF8, 0x81, 0x0F, 0xF8, 0x81, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2605(★) black star
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x7C, 0xC3, 0x76, 0x66, 0x66, 0x6F, 0xFE, 0xC7, 0x37, 0xF8, 0x03, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //262E(☮) peace symbol
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x9C, 0xC3, 0x70, 0x0E, 0x66, 0x60, 0x0E, 0xC6, 0x70, 0x9C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //262F(☯) yin yang
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC0, 0x39, 0x0C, 0xE7, 0x6F, 0xE6, 0xE6, 0x6B, 0x9C, 0xC7, 0x39, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2639(☹) white frowning face
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x39, 0x0C, 0xE3, 0x6F, 0x06, 0x66, 0x6B, 0xEC, 0xC7, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //263A(☺) white smiling face
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC0, 0x3F, 0x6C, 0xE7, 0x7F, 0xFE, 0xE7, 0x7F, 0x7C, 0xC7, 0x39, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //263B(☻) black smiling face
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xC0, 0x76, 0xF8, 0x83, 0x1B, 0x9F, 0x8F, 0x1B, 0xFC, 0xC3, 0x76, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //263C(☼) white sun with rays
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x1B, 0xF0, 0x00, 0x06, 0xF8, 0x01, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2640(♀) female sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x01, 0x06, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x1B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2641(♁) earth
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x0F, 0xF0, 0xF0, 0x8D, 0x1B, 0x98, 0x81, 0x1B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2642(♂) male sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xF8, 0xC1, 0x3F, 0xFC, 0xC3, 0x7F, 0xFC, 0x03, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2660(♠) black spade suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x63, 0x66, 0x06, 0x66, 0x60, 0x0C, 0xC3, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2661(♡) white heart suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0xD8, 0xC0, 0x19, 0x8C, 0xC3, 0x1D, 0xD8, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2662(♢) white diamond suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xF0, 0x00, 0x0F, 0xFC, 0xC3, 0x7F, 0xFC, 0x03, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2663(♣) black club suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0x9C, 0xC3, 0x30, 0x06, 0x66, 0x60, 0x66, 0xC6, 0x3F, 0xF0, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2664(♤) white spade suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x3F, 0xFC, 0xC7, 0x3F, 0xF8, 0x83, 0x1F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2665(♥) black heart suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xFC, 0x81, 0x0F, 0xF8, 0x00, 0x07, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2666(♦) black diamond suit
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xB8, 0xC1, 0x7F, 0xF6, 0x66, 0x66, 0xF6, 0xC6, 0x3F, 0xF0, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2667(♧) white club suit
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x3E, 0xE0, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x78, 0xC0, 0x07, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //266A(♪) eighth note
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x3E, 0x60, 0x03, 0x26, 0x60, 0x02, 0x26, 0x60, 0x02, 0x26, 0x60, 0x02, 0x26, 0x78, 0xC2, 0x27, 0xF8, 0x03, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00}, //266B(♫) beamed eighth notes
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0xFE, 0xE7, 0x7F, 0xFE, 0xE7, 0x7F, 0xFE, 0xE7, 0x7F, 0x8E, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2691(⚑) black flag
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x60, 0xE6, 0xFC, 0x07, 0x1F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2693(⚓) anchor
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xFC, 0xE0, 0x1F, 0x9E, 0xE3, 0x38, 0xCC, 0x83, 0x6F, 0xF0, 0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //270E(✎) lower right pencil
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x30, 0x80, 0x41, 0x1C, 0xCE, 0xC0, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2713(✓) check mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0x78, 0x80, 0xE3, 0x1C, 0xFE, 0xC1, 0x0F, 0x78, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2714(✔) heavy check mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x1C, 0x83, 0x1B, 0xF0, 0x00, 0x0F, 0xF8, 0xC1, 0x39, 0x0E, 0x47, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2715(✕) multiplication x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x11, 0xBC, 0xC3, 0x7F, 0xF8, 0x01, 0x1F, 0xF8, 0xC3, 0x7F, 0x98, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2716(✖) heavy multiplication x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x06, 0x70, 0x80, 0x03, 0x18, 0xCE, 0xC0, 0x07, 0x78, 0x80, 0x07, 0xF8, 0xC0, 0x1C, 0x86, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2717(✗) ballot x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x06, 0x70, 0x84, 0xC3, 0x1D, 0xFC, 0x00, 0x0F, 0xF8, 0xC3, 0x39, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2718(✘) heavy ballot x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xFE, 0xE7, 0x7F, 0xFE, 0x07, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //271A(✚) heavy greek cross
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xEC, 0xE2, 0xFF, 0xFE, 0xC7, 0x3F, 0xFC, 0xE3, 0x7F, 0xEE, 0x4F, 0x2E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2731(✱) heavy asterisk
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xC0, 0x76, 0xF8, 0x01, 0x00, 0xF8, 0xC1, 0x74, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //273C(✼) open centre teardrop-spoked asterisk
            new byte[] { 0x03, 0x70, 0xC0, 0x0F, 0xFE, 0xF1, 0xBF, 0xFF, 0xFF, 0xFE, 0xCF, 0x7F, 0xF8, 0xC3, 0x7F, 0xFE, 0xFF, 0xFF, 0xBF, 0xFF, 0xF1, 0x0F, 0x7E, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, //274C(❌) cross mark
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x70, 0x06, 0x66, 0x70, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2753(❓) black question mark ornament
            new byte[] { 0x00, 0x0F, 0x78, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x0F, 0x78, 0xC0, 0x03, 0x1E, 0xE0, 0x00, 0x1E, 0xC0, 0x01, 0x38, 0x00, 0x07, 0xF0, 0x00, 0x1E, 0xC0, 0x03, 0x78, 0x00, 0x0F, 0x60}, //276E(❮) heavy left-pointing angle quotation mark ornament
            new byte[] { 0x0E, 0xE0, 0x01, 0x3C, 0x80, 0x07, 0x70, 0x00, 0x0E, 0xC0, 0x01, 0x3C, 0x80, 0x07, 0xF0, 0x00, 0x07, 0x38, 0xC0, 0x03, 0x1E, 0xF0, 0x80, 0x07, 0x3C, 0xC0, 0x01, 0x0E, 0x60, 0x00}, //276F(❯) heavy right-pointing angle quotation mark ornament
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x80, 0xE3, 0x7F, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //279C(➜) heavy round-tipped rightwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02, 0x77, 0xB8, 0xC1, 0x1D, 0xEE, 0x60, 0x06, 0xCC, 0x80, 0x19, 0x30, 0x03, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //27EA(⟪) mathematical left double angle bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0xE0, 0x0E, 0x98, 0x01, 0x33, 0x60, 0x06, 0xEE, 0x70, 0x83, 0x1B, 0xDC, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //27EB(⟫) mathematical right double angle bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xF6, 0xE1, 0x31, 0x0E, 0xE6, 0x6F, 0x00, 0xC6, 0x60, 0x0C, 0x86, 0x31, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //27F2(⟲) anticlockwise gapped circle arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xF0, 0xC7, 0x79, 0x0E, 0x67, 0x7E, 0x06, 0x60, 0x60, 0x0C, 0xC3, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //27F3(⟳) clockwise gapped circle arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x70, 0x80, 0x0F, 0xFC, 0x01, 0x07, 0x70, 0x00, 0x07, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2934(⤴) arrow pointing rightwards then curving upwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0xFC, 0x81, 0x0F, 0x70, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2935(⤵) arrow pointing rightwards then curving downwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0x27, 0x78, 0xC3, 0x3F, 0x78, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2936(⤶) arrow pointing downwards then curving leftwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0xC0, 0x0C, 0xCC, 0x81, 0x3F, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2937(⤷) arrow pointing downwards then curving rightwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xB0, 0x83, 0x1D, 0xEC, 0xC0, 0x06, 0x6C, 0xC0, 0x06, 0x6C, 0xC0, 0x0E, 0xD8, 0x01, 0x1B, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2985(⦅) left white parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x80, 0x1B, 0x70, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x70, 0x83, 0x1B, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2986(⦆) right white parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xFC, 0xC3, 0x3F, 0xFC, 0xE3, 0x7F, 0xFC, 0xC3, 0x3F, 0xFC, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //29FB(⧻) triple plus
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xFC, 0x41, 0x17, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B06(⬆) upwards black arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xC0, 0x16, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B07(⬇) downwards black arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x39, 0x0E, 0x67, 0xE0, 0x06, 0x6E, 0xE0, 0x06, 0xEE, 0x60, 0x1C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B58(⭘) heavy circle
            new byte[] { 0x18, 0x80, 0x09, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xE0, 0x00, 0x07, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B60(⭠) leftwards triangle-headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x07, 0x00, 0x00, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x07, 0x7E, 0x60, 0x07, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B61(⭡) upwards triangle-headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x01, 0xD8, 0x81, 0x19, 0xD8, 0x81, 0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B62(⭢) rightwards triangle-headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x01, 0x18, 0xD8, 0x81, 0x05, 0x58, 0x80, 0x05, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B63(⭣) downwards triangle-headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x0B, 0xB0, 0x80, 0x1F, 0xF8, 0x81, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B64(⭤) left right triangle-headed arrow
            new byte[] { 0x03, 0x70, 0x00, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0xF0, 0x1F, 0xFF, 0xF3, 0x7F, 0xFF, 0xF3, 0x1F, 0xFF, 0xF0, 0x0F, 0x7F, 0xF0, 0x03, 0x1F, 0xF0, 0x00, 0x07, 0x30, 0x00}, //2B80(⮀) leftwards triangle-headed arrow over rightwards triangle-headed arrow
            new byte[] { 0x06, 0xE0, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x80, 0x03, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00}, //2B81(⮁) upwards triangle-headed arrow leftwards of downwards triangle-headed arrow
            new byte[] { 0x00, 0x0C, 0xE0, 0x00, 0x0F, 0xF8, 0x80, 0x0F, 0xFC, 0xE0, 0x0F, 0xFF, 0xF8, 0xCF, 0xFF, 0xFC, 0x8F, 0xFF, 0xF0, 0x0F, 0xFE, 0xC0, 0x0F, 0xF8, 0x00, 0x0F, 0xE0, 0x00, 0x0C, 0x80}, //2B82(⮂) rightwards triangle-headed arrow over leftwards triangle-headed arrow
            new byte[] { 0x00, 0x0C, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x03, 0x18, 0xC0, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x1C, 0x80, 0x03, 0x30, 0x00, 0x06, 0xC0}, //2B83(⮃) downwards triangle-headed arrow leftwards of upwards triangle-headed arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2BD2(⯒) group mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xB0, 0x83, 0x1D, 0xEC, 0xC0, 0x06, 0x6C, 0xC0, 0x06, 0x6C, 0xC0, 0x0E, 0xD8, 0x01, 0x1B, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2E28(⸨) left double parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x80, 0x1B, 0x70, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x70, 0x83, 0x1B, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2E29(⸩) right double parenthesis
            new byte[] { 0x18, 0x80, 0x09, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xD8, 0x81, 0x1D, 0xE0, 0x00, 0x07, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //E0A0() private use-e0a0
            new byte[] { 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x07, 0x00, 0x00, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x07, 0x7E, 0x60, 0x07, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //E0A1() private use-e0a1
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x80, 0x1B, 0x98, 0x81, 0x19, 0x98, 0xE1, 0x7F, 0xFE, 0xE7, 0x7B, 0xFC, 0xC7, 0x3F, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //E0A2() private use-e0a2
            new byte[] { 0x03, 0x70, 0x00, 0x0F, 0xF0, 0x01, 0x3F, 0xF0, 0x07, 0xFF, 0xF0, 0x1F, 0xFF, 0xF3, 0x7F, 0xFF, 0xF3, 0x1F, 0xFF, 0xF0, 0x07, 0x3F, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x07, 0x30, 0x00}, //E0B0() private use-e0b0
            new byte[] { 0x06, 0xE0, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x80, 0x03, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00}, //E0B1() private use-e0b1
            new byte[] { 0x00, 0x0C, 0xE0, 0x00, 0x0F, 0xF8, 0x80, 0x0F, 0xFC, 0xE0, 0x0F, 0xFF, 0xF8, 0xCF, 0xFF, 0xFC, 0x8F, 0xFF, 0xF0, 0x0F, 0xFE, 0xC0, 0x0F, 0xF8, 0x00, 0x0F, 0xE0, 0x00, 0x0C, 0x80}, //E0B2() private use-e0b2
            new byte[] { 0x00, 0x0C, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x03, 0x18, 0xC0, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x1C, 0x80, 0x03, 0x30, 0x00, 0x06, 0xC0}, //E0B3() private use-e0b3
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //E0FB() private use-e0fb
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //E0FC() private use-e0fc
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //E0FD() private use-e0fd
            new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, //E0FE() private use-e0fe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x1F, 0x0C, 0x43, 0x2E, 0x24, 0x42, 0x3E, 0xE4, 0xC1, 0x00, 0x08, 0x80, 0x03, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //F100() private use-f100
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x07, 0x07, 0x30, 0x00, 0x03, 0xFE, 0x07, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FB01(ﬁ) latin small ligature fi
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x37, 0x30, 0x03, 0x33, 0xFE, 0x03, 0x33, 0x30, 0x03, 0x33, 0x30, 0x03, 0x33, 0x30, 0x03, 0x73, 0x30, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FB02(ﬂ) latin small ligature fl
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF00(＀) 
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF01(！) fullwidth exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0xC0, 0x0D, 0xDC, 0xC0, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF02(＂) fullwidth quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x0D, 0xD8, 0xE0, 0x3F, 0xD8, 0x80, 0x0D, 0xD8, 0xE0, 0x3F, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF03(＃) fullwidth number sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xC0, 0x7F, 0x6E, 0x60, 0x06, 0x6E, 0xC0, 0x3F, 0x60, 0x07, 0x66, 0x60, 0xE6, 0x3F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF04(＄) fullwidth dollar sign
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0x60, 0x03, 0x3E, 0xC0, 0x61, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x38, 0xC0, 0x01, 0x8E, 0x03, 0x6C, 0xC0, 0x07, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF05(％) fullwidth percent sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xE0, 0x06, 0x66, 0x60, 0x06, 0x6E, 0xC0, 0x03, 0x3E, 0x62, 0x77, 0xE6, 0xE1, 0x1C, 0xFC, 0x03, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF06(＆) fullwidth ampersand
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF07(＇) fullwidth apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x60, 0x00, 0x0C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF08(（) fullwidth left parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF09(）) fullwidth right parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0xE0, 0x76, 0xF8, 0x03, 0x1F, 0xF8, 0xE3, 0x76, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF0A(＊) fullwidth asterisk
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF0B(＋) fullwidth plus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00}, //FF0C(，) fullwidth comma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF0D(－) fullwidth hyphen-minus
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF0E(．) fullwidth full stop
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF0F(／) fullwidth solidus
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x0C, 0x63, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF10(０) fullwidth digit zero
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0x78, 0xC0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF11(１) fullwidth digit one
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x60, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF12(２) fullwidth digit two
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x0E, 0x80, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0xE7, 0x38, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF13(３) fullwidth digit three
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xE0, 0x03, 0x33, 0x18, 0xC3, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF14(４) fullwidth digit four
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x00, 0x18, 0x00, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x18, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF15(５) fullwidth digit five
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x0F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x0C, 0x87, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF16(６) fullwidth digit six
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF17(７) fullwidth digit seven
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x18, 0x83, 0x31, 0x98, 0x03, 0x1F, 0x98, 0xC3, 0x70, 0x06, 0x66, 0x60, 0x0C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF18(８) fullwidth digit eight
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x0C, 0x66, 0x70, 0x06, 0x67, 0x78, 0xCE, 0xC6, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF19(９) fullwidth digit nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF1A(：) fullwidth colon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0F, 0x78, 0x00, 0x03, 0x00, 0x00, 0x00}, //FF1B(；) fullwidth semicolon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x07, 0x38, 0x80, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF1C(＜) fullwidth less-than sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF1D(＝) fullwidth equals sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF1E(＞) fullwidth greater-than sign
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x83, 0x71, 0x18, 0x86, 0x71, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF1F(？) fullwidth question mark
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0xE6, 0x66, 0x6F, 0xF6, 0x67, 0x3F, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF20(＠) fullwidth commercial at
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF21(Ａ) fullwidth latin capital letter a
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x71, 0x98, 0x83, 0x1F, 0x98, 0x83, 0x71, 0x18, 0x87, 0x19, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF22(Ｂ) fullwidth latin capital letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x73, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF23(Ｃ) fullwidth latin capital letter c
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x87, 0x39, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF24(Ｄ) fullwidth latin capital letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF25(Ｅ) fullwidth latin capital letter e
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF26(Ｆ) fullwidth latin capital letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xC1, 0x39, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x67, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF27(Ｇ) fullwidth latin capital letter g
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x7F, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF28(Ｈ) fullwidth latin capital letter h
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF29(Ｉ) fullwidth latin capital letter i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x60, 0x0C, 0xC6, 0xE0, 0x0C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2A(Ｊ) fullwidth latin capital letter j
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x0E, 0xE7, 0x38, 0xCE, 0xE1, 0x0E, 0x7E, 0xE0, 0x07, 0x7E, 0xE0, 0x0C, 0x8E, 0xE1, 0x30, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2B(Ｋ) fullwidth latin capital letter k
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2C(Ｌ) fullwidth latin capital letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE7, 0x79, 0xF6, 0x67, 0x6E, 0x66, 0x66, 0x66, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2D(Ｍ) fullwidth latin capital letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xE6, 0x61, 0x36, 0x66, 0x66, 0xC6, 0x66, 0x78, 0x06, 0x67, 0x70, 0x06, 0x66, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2E(Ｎ) fullwidth latin capital letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF2F(Ｏ) fullwidth latin capital letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x60, 0x06, 0x67, 0x38, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF30(Ｐ) fullwidth latin capital letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x39, 0x0E, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x6E, 0x87, 0x3F, 0xF0, 0x01, 0x38, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //FF31(Ｑ) fullwidth latin capital letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x3F, 0x66, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF32(Ｒ) fullwidth latin capital letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x60, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF33(Ｓ) fullwidth latin capital letter s
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF34(Ｔ) fullwidth latin capital letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF35(Ｕ) fullwidth latin capital letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x60, 0x0C, 0xC3, 0x30, 0x9C, 0x83, 0x19, 0xB8, 0x01, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF36(Ｖ) fullwidth latin capital letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x66, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7F, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF37(Ｗ) fullwidth latin capital letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE6, 0x70, 0x9C, 0x83, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x81, 0x39, 0x0C, 0x67, 0x60, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF38(Ｘ) fullwidth latin capital letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x0E, 0xC7, 0x39, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF39(Ｙ) fullwidth latin capital letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3A(Ｚ) fullwidth latin capital letter z
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3B(［) fullwidth left square bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3C(＼) fullwidth reverse solidus
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3D(］) fullwidth right square bracket
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3E(＾) fullwidth circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF3F(＿) fullwidth low line
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF40(｀) fullwidth grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF41(ａ) fullwidth latin small letter a
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x61, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF42(ｂ) fullwidth latin small letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x01, 0x0C, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x80, 0x01, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF43(ｃ) fullwidth latin small letter c
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF44(ｄ) fullwidth latin small letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x00, 0x06, 0xE0, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF45(ｅ) fullwidth latin small letter e
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x07, 0x30, 0x00, 0x03, 0xFE, 0x01, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF46(ｆ) fullwidth latin small letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x81, 0x31, 0x0C, 0x63, 0x30, 0x06, 0xC3, 0x38, 0x98, 0x03, 0x3F, 0x00, 0x83, 0x31, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00}, //FF47(ｇ) fullwidth latin small letter g
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xF6, 0xE0, 0x39, 0x0E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF48(ｈ) fullwidth latin small letter h
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF49(ｉ) fullwidth latin small letter i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x39, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00}, //FF4A(ｊ) fullwidth latin small letter j
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x06, 0x3E, 0x60, 0x06, 0xC6, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF4B(ｋ) fullwidth latin small letter k
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF4C(ｌ) fullwidth latin small letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x6E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF4D(ｍ) fullwidth latin small letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x81, 0x39, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF4E(ｎ) fullwidth latin small letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF4F(ｏ) fullwidth latin small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x60, 0x0C, 0x86, 0x63, 0x30, 0x06, 0x63, 0x30, 0x86, 0x61, 0x0C, 0x7E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00}, //FF50(ｐ) fullwidth latin small letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x83, 0x31, 0x0C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0C, 0x83, 0x31, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x07, 0x00}, //FF51(ｑ) fullwidth latin small letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xC0, 0x3B, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF52(ｒ) fullwidth latin small letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0xC0, 0xE1, 0x38, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF53(ｓ) fullwidth latin small letter s
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF54(ｔ) fullwidth latin small letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x38, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF55(ｕ) fullwidth latin small letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x0E, 0xC6, 0x30, 0x98, 0x83, 0x1B, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF56(ｖ) fullwidth latin small letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x66, 0xF6, 0xE6, 0x7B, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF57(ｗ) fullwidth latin small letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xC6, 0x70, 0x98, 0x03, 0x0F, 0x60, 0x00, 0x0F, 0xB8, 0xC1, 0x31, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF58(ｘ) fullwidth latin small letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x0E, 0xC3, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0x00, 0x03, 0x18, 0xE0, 0x00, 0x04, 0x00, 0x00}, //FF59(ｙ) fullwidth latin small letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x38, 0xC0, 0x01, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF5A(ｚ) fullwidth latin small letter z
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x80, 0x03, 0x1C, 0x80, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF5B(｛) fullwidth left curly bracket
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //FF5C(｜) fullwidth vertical line
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF5D(｝) fullwidth right curly bracket
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x06, 0xC4, 0x06, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF5E(～) fullwidth tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0xB0, 0x83, 0x1D, 0xEC, 0xC0, 0x06, 0x6C, 0xC0, 0x06, 0x6C, 0xC0, 0x0E, 0xD8, 0x01, 0x1B, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF5F(｟) fullwidth left white parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x80, 0x1B, 0x70, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x70, 0x83, 0x1B, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF60(｠) fullwidth right white parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x80, 0x0D, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF61(｡) halfwidth ideographic full stop
            new byte[] { 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF62(｢) halfwidth left corner bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0xFC}, //FF63(｣) halfwidth right corner bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF64(､) halfwidth ideographic comma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FF65(･) halfwidth katakana middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0xC0, 0x3F, 0x66, 0x60, 0x06, 0x66, 0xE0, 0x06, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE0(￠) fullwidth cent sign
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x01, 0x3F, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x1F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x63, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE1(￡) fullwidth pound sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE2(￢) fullwidth not sign
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE3(￣) fullwidth macron
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //FFE4(￤) fullwidth broken bar
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC6, 0x31, 0xB8, 0x01, 0x0F, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE5(￥) fullwidth yen sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x0C, 0xC3, 0x30, 0xFE, 0xC7, 0x30, 0x0C, 0xC3, 0x36, 0xFE, 0xC7, 0x36, 0xEC, 0xC3, 0x3F, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE6(￦) fullwidth won sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE7(￧) 
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE8(￨) halfwidth forms light vertical
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x3C, 0xE0, 0x3F, 0x3C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFE9(￩) halfwidth leftwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x70, 0x80, 0x0F, 0xFC, 0x01, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFEA(￪) halfwidth upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x30, 0x00, 0x87, 0xFF, 0x00, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFEB(￫) halfwidth rightwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xC0, 0x1F, 0xF8, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFEC(￬) halfwidth downwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x01, 0x1F, 0xF0, 0x01, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFED(￭) halfwidth black square
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x18, 0x83, 0x30, 0x18, 0x83, 0x39, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFEE(￮) halfwidth white circle
            new byte[] { 0x00, 0x00, 0x00, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x03, 0x30, 0xC0, 0x03, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFFC(￼) object replacement character
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x90, 0xC1, 0x3E, 0xFE, 0xE7, 0xFF, 0xFE, 0x87, 0x3F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFFD(�) replacement character
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FFFE(￾) 
 
        };

        private static readonly Dictionary<int, ushort> characterMap = new Dictionary<int, ushort>
        {
            { 0x0020, 0 }, { 0x0021, 1 }, { 0x0022, 2 }, { 0x0023, 3 }, { 0x0024, 4 }, { 0x0025, 5 }, { 0x0026, 6 }, { 0x0027, 7 }, { 0x0028, 8 }, { 0x0029, 9 }, { 0x002A, 10 }, { 0x002B, 11 }, { 0x002C, 12 }, { 0x002D, 13 }, { 0x002E, 14 }, { 0x002F, 15 }, { 0x0030, 16 }, { 0x0031, 17 }, { 0x0032, 18 }, { 0x0033, 19 }, { 0x0034, 20 }, { 0x0035, 21 }, { 0x0036, 22 }, { 0x0037, 23 }, { 0x0038, 24 }, { 0x0039, 25 }, { 0x003A, 26 }, { 0x003B, 27 }, { 0x003C, 28 }, { 0x003D, 29 }, { 0x003E, 30 }, { 0x003F, 31 }, { 0x0040, 32 }, { 0x0041, 33 }, { 0x0042, 34 }, { 0x0043, 35 }, { 0x0044, 36 }, { 0x0045, 37 }, { 0x0046, 38 }, { 0x0047, 39 }, { 0x0048, 40 }, { 0x0049, 41 }, { 0x004A, 42 }, { 0x004B, 43 }, { 0x004C, 44 }, { 0x004D, 45 }, { 0x004E, 46 }, { 0x004F, 47 }, { 0x0050, 48 }, { 0x0051, 49 }, { 0x0052, 50 }, { 0x0053, 51 }, { 0x0054, 52 }, { 0x0055, 53 }, { 0x0056, 54 }, { 0x0057, 55 }, { 0x0058, 56 }, { 0x0059, 57 }, { 0x005A, 58 }, { 0x005B, 59 }, { 0x005C, 60 }, { 0x005D, 61 }, { 0x005E, 62 }, { 0x005F, 63 }, { 0x0060, 64 }, { 0x0061, 65 }, { 0x0062, 66 }, { 0x0063, 67 }, { 0x0064, 68 }, { 0x0065, 69 }, { 0x0066, 70 }, { 0x0067, 71 }, { 0x0068, 72 }, { 0x0069, 73 }, { 0x006A, 74 }, { 0x006B, 75 }, { 0x006C, 76 }, { 0x006D, 77 }, { 0x006E, 78 }, { 0x006F, 79 }, { 0x0070, 80 }, { 0x0071, 81 }, { 0x0072, 82 }, { 0x0073, 83 }, { 0x0074, 84 }, { 0x0075, 85 }, { 0x0076, 86 }, { 0x0077, 87 }, { 0x0078, 88 }, { 0x0079, 89 }, { 0x007A, 90 }, { 0x007B, 91 }, { 0x007C, 92 }, { 0x007D, 93 }, { 0x007E, 94 }, { 0x007F, 95 }, { 0x0080, 96 }, { 0x0081, 97 }, { 0x0082, 98 }, { 0x0083, 99 }, { 0x0084, 100 }, { 0x0085, 101 }, { 0x0086, 102 }, { 0x0087, 103 }, { 0x0088, 104 }, { 0x0089, 105 }, { 0x008A, 106 }, { 0x008B, 107 }, { 0x008C, 108 }, { 0x008D, 109 }, { 0x008E, 110 }, { 0x008F, 111 }, { 0x0090, 112 }, { 0x0091, 113 }, { 0x0092, 114 }, { 0x0093, 115 }, { 0x0094, 116 }, { 0x0095, 117 }, { 0x0096, 118 }, { 0x0097, 119 }, { 0x0098, 120 }, { 0x0099, 121 }, { 0x009A, 122 }, { 0x009B, 123 }, { 0x009C, 124 }, { 0x009D, 125 }, { 0x009E, 126 }, { 0x009F, 127 }, { 0x00A0, 128 }, { 0x00A1, 129 }, { 0x00A2, 130 }, { 0x00A3, 131 }, { 0x00A4, 132 }, { 0x00A5, 133 }, { 0x00A6, 134 }, { 0x00A7, 135 }, { 0x00A8, 136 }, { 0x00A9, 137 }, { 0x00AA, 138 }, { 0x00AB, 139 }, { 0x00AC, 140 }, { 0x00AD, 141 }, { 0x00AE, 142 }, { 0x00AF, 143 }, { 0x00B0, 144 }, { 0x00B1, 145 }, { 0x00B2, 146 }, { 0x00B3, 147 }, { 0x00B4, 148 }, { 0x00B5, 149 }, { 0x00B6, 150 }, { 0x00B7, 151 }, { 0x00B8, 152 }, { 0x00B9, 153 }, { 0x00BA, 154 }, { 0x00BB, 155 }, { 0x00BC, 156 }, { 0x00BD, 157 }, { 0x00BE, 158 }, { 0x00BF, 159 }, { 0x00C0, 160 }, { 0x00C1, 161 }, { 0x00C2, 162 }, { 0x00C3, 163 }, { 0x00C4, 164 }, { 0x00C5, 165 }, { 0x00C6, 166 }, { 0x00C7, 167 }, { 0x00C8, 168 }, { 0x00C9, 169 }, { 0x00CA, 170 }, { 0x00CB, 171 }, { 0x00CC, 172 }, { 0x00CD, 173 }, { 0x00CE, 174 }, { 0x00CF, 175 }, { 0x00D0, 176 }, { 0x00D1, 177 }, { 0x00D2, 178 }, { 0x00D3, 179 }, { 0x00D4, 180 }, { 0x00D5, 181 }, { 0x00D6, 182 }, { 0x00D7, 183 }, { 0x00D8, 184 }, { 0x00D9, 185 }, { 0x00DA, 186 }, { 0x00DB, 187 }, { 0x00DC, 188 }, { 0x00DD, 189 }, { 0x00DE, 190 }, { 0x00DF, 191 }, { 0x00E0, 192 }, { 0x00E1, 193 }, { 0x00E2, 194 }, { 0x00E3, 195 }, { 0x00E4, 196 }, { 0x00E5, 197 }, { 0x00E6, 198 }, { 0x00E7, 199 }, { 0x00E8, 200 }, { 0x00E9, 201 }, { 0x00EA, 202 }, { 0x00EB, 203 }, { 0x00EC, 204 }, { 0x00ED, 205 }, { 0x00EE, 206 }, { 0x00EF, 207 }, { 0x00F0, 208 }, { 0x00F1, 209 }, { 0x00F2, 210 }, { 0x00F3, 211 }, { 0x00F4, 212 }, { 0x00F5, 213 }, { 0x00F6, 214 }, { 0x00F7, 215 }, { 0x00F8, 216 }, { 0x00F9, 217 }, { 0x00FA, 218 }, { 0x00FB, 219 }, { 0x00FC, 220 }, { 0x00FD, 221 }, { 0x00FE, 222 }, { 0x00FF, 223 }, { 0x0100, 224 }, { 0x0101, 225 }, { 0x0102, 226 }, { 0x0103, 227 }, { 0x0104, 228 }, { 0x0105, 229 }, { 0x0106, 230 }, { 0x0107, 231 }, { 0x0108, 232 }, { 0x0109, 233 }, { 0x010A, 234 }, { 0x010B, 235 }, { 0x010C, 236 }, { 0x010D, 237 }, { 0x010E, 238 }, { 0x010F, 239 }, { 0x0110, 240 }, { 0x0111, 241 }, { 0x0112, 242 }, { 0x0113, 243 }, { 0x0114, 244 }, { 0x0115, 245 }, { 0x0116, 246 }, { 0x0117, 247 }, { 0x0118, 248 }, { 0x0119, 249 }, { 0x011A, 250 }, { 0x011B, 251 }, { 0x011C, 252 }, { 0x011D, 253 }, { 0x011E, 254 }, { 0x011F, 255 }, { 0x0120, 256 }, { 0x0121, 257 }, { 0x0122, 258 }, { 0x0123, 259 }, { 0x0124, 260 }, { 0x0125, 261 }, { 0x0126, 262 }, { 0x0127, 263 }, { 0x0128, 264 }, { 0x0129, 265 }, { 0x012A, 266 }, { 0x012B, 267 }, { 0x012C, 268 }, { 0x012D, 269 }, { 0x012E, 270 }, { 0x012F, 271 }, { 0x0130, 272 }, { 0x0131, 273 }, { 0x0132, 274 }, { 0x0133, 275 }, { 0x0134, 276 }, { 0x0135, 277 }, { 0x0136, 278 }, { 0x0137, 279 }, { 0x0138, 280 }, { 0x0139, 281 }, { 0x013A, 282 }, { 0x013B, 283 }, { 0x013C, 284 }, { 0x013D, 285 }, { 0x013E, 286 }, { 0x013F, 287 }, { 0x0140, 288 }, { 0x0141, 289 }, { 0x0142, 290 }, { 0x0143, 291 }, { 0x0144, 292 }, { 0x0145, 293 }, { 0x0146, 294 }, { 0x0147, 295 }, { 0x0148, 296 }, { 0x0149, 297 }, { 0x014A, 298 }, { 0x014B, 299 }, { 0x014C, 300 }, { 0x014D, 301 }, { 0x014E, 302 }, { 0x014F, 303 }, { 0x0150, 304 }, { 0x0151, 305 }, { 0x0152, 306 }, { 0x0153, 307 }, { 0x0154, 308 }, { 0x0156, 309 }, { 0x0157, 310 }, { 0x0158, 311 }, { 0x0159, 312 }, { 0x015A, 313 }, { 0x015B, 314 }, { 0x015C, 315 }, { 0x015D, 316 }, { 0x015E, 317 }, { 0x015F, 318 }, { 0x0160, 319 }, { 0x0161, 320 }, { 0x0162, 321 }, { 0x0163, 322 }, { 0x0164, 323 }, { 0x0165, 324 }, { 0x0166, 325 }, { 0x0167, 326 }, { 0x0168, 327 }, { 0x0169, 328 }, { 0x016A, 329 }, { 0x016B, 330 }, { 0x016C, 331 }, { 0x016D, 332 }, { 0x016E, 333 }, { 0x016F, 334 }, { 0x0170, 335 }, { 0x0171, 336 }, { 0x0172, 337 }, { 0x0173, 338 }, { 0x0174, 339 }, { 0x0175, 340 }, { 0x0176, 341 }, { 0x0177, 342 }, { 0x0178, 343 }, { 0x0179, 344 }, { 0x017A, 345 }, { 0x017B, 346 }, { 0x017C, 347 }, { 0x017D, 348 }, { 0x017E, 349 }, { 0x017F, 350 }, { 0x018E, 351 }, { 0x0192, 352 }, { 0x01A0, 353 }, { 0x01A1, 354 }, { 0x01AF, 355 }, { 0x01B0, 356 }, { 0x01F5, 357 }, { 0x01FA, 358 }, { 0x01FB, 359 }, { 0x01FC, 360 }, { 0x01FD, 361 }, { 0x01FE, 362 }, { 0x01FF, 363 }, { 0x0247, 364 }, { 0x02BC, 365 }, { 0x02C6, 366 }, { 0x02C7, 367 }, { 0x02C9, 368 }, { 0x02CA, 369 }, { 0x02CB, 370 }, { 0x02CC, 371 }, { 0x02CD, 372 }, { 0x02CE, 373 }, { 0x02CF, 374 }, { 0x02D0, 375 }, { 0x02D1, 376 }, { 0x02D8, 377 }, { 0x02D9, 378 }, { 0x02DA, 379 }, { 0x02DB, 380 }, { 0x02DC, 381 }, { 0x02DD, 382 }, { 0x02E0, 383 }, { 0x02E1, 384 }, { 0x02E2, 385 }, { 0x02E3, 386 }, { 0x02E4, 387 }, { 0x02EC, 388 }, { 0x02EE, 389 }, { 0x0300, 390 }, { 0x0301, 391 }, { 0x0302, 392 }, { 0x0303, 393 }, { 0x0304, 394 }, { 0x0305, 395 }, { 0x0306, 396 }, { 0x0307, 397 }, { 0x0308, 398 }, { 0x030A, 399 }, { 0x030B, 400 }, { 0x030C, 401 }, { 0x0370, 402 }, { 0x0371, 403 }, { 0x0372, 404 }, { 0x0373, 405 }, { 0x0374, 406 }, { 0x0376, 407 }, { 0x0377, 408 }, { 0x037B, 409 }, { 0x037C, 410 }, { 0x037D, 411 }, { 0x037F, 412 }, { 0x0384, 413 }, { 0x0385, 414 }, { 0x0386, 415 }, { 0x0387, 416 }, { 0x0388, 417 }, { 0x0389, 418 }, { 0x038A, 419 }, { 0x038C, 420 }, { 0x038E, 421 }, { 0x038F, 422 }, { 0x0390, 423 }, { 0x0391, 424 }, { 0x0392, 425 }, { 0x0393, 426 }, { 0x0394, 427 }, { 0x0395, 428 }, { 0x0396, 429 }, { 0x0397, 430 }, { 0x0398, 431 }, { 0x0399, 432 }, { 0x039A, 433 }, { 0x039B, 434 }, { 0x039C, 435 }, { 0x039D, 436 }, { 0x039E, 437 }, { 0x039F, 438 }, { 0x03A0, 439 }, { 0x03A1, 440 }, { 0x03A3, 441 }, { 0x03A4, 442 }, { 0x03A5, 443 }, { 0x03A6, 444 }, { 0x03A7, 445 }, { 0x03A8, 446 }, { 0x03A9, 447 }, { 0x03AA, 448 }, { 0x03AB, 449 }, { 0x03AC, 450 }, { 0x03AD, 451 }, { 0x03AE, 452 }, { 0x03AF, 453 }, { 0x03B0, 454 }, { 0x03B1, 455 }, { 0x03B2, 456 }, { 0x03B3, 457 }, { 0x03B4, 458 }, { 0x03B5, 459 }, { 0x03B6, 460 }, { 0x03B7, 461 }, { 0x03B8, 462 }, { 0x03B9, 463 }, { 0x03BA, 464 }, { 0x03BB, 465 }, { 0x03BC, 466 }, { 0x03BD, 467 }, { 0x03BE, 468 }, { 0x03BF, 469 }, { 0x03C0, 470 }, { 0x03C1, 471 }, { 0x03C2, 472 }, { 0x03C3, 473 }, { 0x03C4, 474 }, { 0x03C5, 475 }, { 0x03C6, 476 }, { 0x03C7, 477 }, { 0x03C8, 478 }, { 0x03C9, 479 }, { 0x03CA, 480 }, { 0x03CB, 481 }, { 0x03CC, 482 }, { 0x03CD, 483 }, { 0x03CE, 484 }, { 0x03CF, 485 }, { 0x03D0, 486 }, { 0x03D1, 487 }, { 0x03D2, 488 }, { 0x03D3, 489 }, { 0x03D4, 490 }, { 0x03D5, 491 }, { 0x03D6, 492 }, { 0x03D7, 493 }, { 0x03D8, 494 }, { 0x03D9, 495 }, { 0x03DA, 496 }, { 0x03DB, 497 }, { 0x03DC, 498 }, { 0x03DD, 499 }, { 0x03DE, 500 }, { 0x03F7, 501 }, { 0x03F8, 502 }, { 0x03F9, 503 }, { 0x03FA, 504 }, { 0x03FB, 505 }, { 0x03FC, 506 }, { 0x03FD, 507 }, { 0x03FE, 508 }, { 0x03FF, 509 }, { 0x0400, 510 }, { 0x0401, 511 }, { 0x0402, 512 }, { 0x0403, 513 }, { 0x0404, 514 }, { 0x0405, 515 }, { 0x0406, 516 }, { 0x0407, 517 }, { 0x0408, 518 }, { 0x0409, 519 }, { 0x040A, 520 }, { 0x040B, 521 }, { 0x040C, 522 }, { 0x040D, 523 }, { 0x040E, 524 }, { 0x040F, 525 }, { 0x0410, 526 }, { 0x0411, 527 }, { 0x0412, 528 }, { 0x0413, 529 }, { 0x0414, 530 }, { 0x0415, 531 }, { 0x0416, 532 }, { 0x0417, 533 }, { 0x0418, 534 }, { 0x0419, 535 }, { 0x041A, 536 }, { 0x041B, 537 }, { 0x041C, 538 }, { 0x041D, 539 }, { 0x041E, 540 }, { 0x041F, 541 }, { 0x0420, 542 }, { 0x0421, 543 }, { 0x0422, 544 }, { 0x0423, 545 }, { 0x0424, 546 }, { 0x0425, 547 }, { 0x0426, 548 }, { 0x0427, 549 }, { 0x0428, 550 }, { 0x0429, 551 }, { 0x042A, 552 }, { 0x042B, 553 }, { 0x042C, 554 }, { 0x042D, 555 }, { 0x042E, 556 }, { 0x042F, 557 }, { 0x0430, 558 }, { 0x0431, 559 }, { 0x0432, 560 }, { 0x0433, 561 }, { 0x0434, 562 }, { 0x0435, 563 }, { 0x0436, 564 }, { 0x0437, 565 }, { 0x0438, 566 }, { 0x0439, 567 }, { 0x043A, 568 }, { 0x043B, 569 }, { 0x043C, 570 }, { 0x043D, 571 }, { 0x043E, 572 }, { 0x043F, 573 }, { 0x0440, 574 }, { 0x0441, 575 }, { 0x0442, 576 }, { 0x0443, 577 }, { 0x0444, 578 }, { 0x0445, 579 }, { 0x0446, 580 }, { 0x0447, 581 }, { 0x0448, 582 }, { 0x0449, 583 }, { 0x044A, 584 }, { 0x044B, 585 }, { 0x044C, 586 }, { 0x044D, 587 }, { 0x044E, 588 }, { 0x044F, 589 }, { 0x0451, 590 }, { 0x0452, 591 }, { 0x0453, 592 }, { 0x0454, 593 }, { 0x0455, 594 }, { 0x0456, 595 }, { 0x0457, 596 }, { 0x0458, 597 }, { 0x0459, 598 }, { 0x045A, 599 }, { 0x045B, 600 }, { 0x045C, 601 }, { 0x045D, 602 }, { 0x045E, 603 }, { 0x045F, 604 }, { 0x048A, 605 }, { 0x048B, 606 }, { 0x048C, 607 }, { 0x048D, 608 }, { 0x048E, 609 }, { 0x048F, 610 }, { 0x0490, 611 }, { 0x0491, 612 }, { 0x0492, 613 }, { 0x0493, 614 }, { 0x0494, 615 }, { 0x0495, 616 }, { 0x0496, 617 }, { 0x0497, 618 }, { 0x0498, 619 }, { 0x0499, 620 }, { 0x049A, 621 }, { 0x049B, 622 }, { 0x049C, 623 }, { 0x049D, 624 }, { 0x049E, 625 }, { 0x049F, 626 }, { 0x04A0, 627 }, { 0x04A1, 628 }, { 0x04A2, 629 }, { 0x04A3, 630 }, { 0x04A4, 631 }, { 0x04A5, 632 }, { 0x04A6, 633 }, { 0x04A7, 634 }, { 0x04A8, 635 }, { 0x04A9, 636 }, { 0x04AA, 637 }, { 0x04AB, 638 }, { 0x04AC, 639 }, { 0x04AD, 640 }, { 0x04AE, 641 }, { 0x04AF, 642 }, { 0x04B0, 643 }, { 0x04B1, 644 }, { 0x04B2, 645 }, { 0x04B3, 646 }, { 0x04B4, 647 }, { 0x04B5, 648 }, { 0x04B6, 649 }, { 0x04B7, 650 }, { 0x04B8, 651 }, { 0x04B9, 652 }, { 0x04BA, 653 }, { 0x04BB, 654 }, { 0x04BC, 655 }, { 0x04BD, 656 }, { 0x04BE, 657 }, { 0x04BF, 658 }, { 0x04C0, 659 }, { 0x04C1, 660 }, { 0x04C2, 661 }, { 0x04C3, 662 }, { 0x04C4, 663 }, { 0x04C5, 664 }, { 0x04C6, 665 }, { 0x04C7, 666 }, { 0x04C8, 667 }, { 0x04C9, 668 }, { 0x04CA, 669 }, { 0x04CB, 670 }, { 0x04CC, 671 }, { 0x04CD, 672 }, { 0x04CE, 673 }, { 0x04CF, 674 }, { 0x04D0, 675 }, { 0x04D1, 676 }, { 0x04D2, 677 }, { 0x04D3, 678 }, { 0x04D4, 679 }, { 0x04D6, 680 }, { 0x04D7, 681 }, { 0x04D8, 682 }, { 0x04D9, 683 }, { 0x04DA, 684 }, { 0x04DB, 685 }, { 0x04DC, 686 }, { 0x04DD, 687 }, { 0x04DE, 688 }, { 0x04DF, 689 }, { 0x04E0, 690 }, { 0x04E1, 691 }, { 0x04E2, 692 }, { 0x04E3, 693 }, { 0x04E4, 694 }, { 0x04E5, 695 }, { 0x04E6, 696 }, { 0x04E7, 697 }, { 0x04E8, 698 }, { 0x04E9, 699 }, { 0x04EA, 700 }, { 0x04EB, 701 }, { 0x04EC, 702 }, { 0x04ED, 703 }, { 0x04EE, 704 }, { 0x04EF, 705 }, { 0x04F0, 706 }, { 0x04F1, 707 }, { 0x04F2, 708 }, { 0x04F3, 709 }, { 0x04F4, 710 }, { 0x04F5, 711 }, { 0x04F6, 712 }, { 0x04F7, 713 }, { 0x04F8, 714 }, { 0x04F9, 715 }, { 0x04FA, 716 }, { 0x04FB, 717 }, { 0x04FC, 718 }, { 0x04FD, 719 }, { 0x04FE, 720 }, { 0x04FF, 721 }, { 0x0500, 722 }, { 0x0501, 723 }, { 0x0502, 724 }, { 0x0503, 725 }, { 0x0504, 726 }, { 0x0505, 727 }, { 0x0506, 728 }, { 0x0507, 729 }, { 0x0508, 730 }, { 0x0509, 731 }, { 0x050A, 732 }, { 0x050B, 733 }, { 0x050C, 734 }, { 0x050D, 735 }, { 0x050E, 736 }, { 0x050F, 737 }, { 0x1680, 738 }, { 0x1681, 739 }, { 0x1682, 740 }, { 0x1683, 741 }, { 0x1684, 742 }, { 0x1685, 743 }, { 0x1686, 744 }, { 0x1687, 745 }, { 0x1688, 746 }, { 0x1689, 747 }, { 0x168A, 748 }, { 0x168B, 749 }, { 0x168C, 750 }, { 0x168D, 751 }, { 0x168E, 752 }, { 0x168F, 753 }, { 0x1690, 754 }, { 0x1691, 755 }, { 0x1692, 756 }, { 0x1693, 757 }, { 0x1694, 758 }, { 0x1695, 759 }, { 0x1696, 760 }, { 0x1697, 761 }, { 0x1698, 762 }, { 0x1699, 763 }, { 0x169A, 764 }, { 0x169B, 765 }, { 0x169C, 766 }, { 0x1E02, 767 }, { 0x1E03, 768 }, { 0x1E0A, 769 }, { 0x1E0B, 770 }, { 0x1E1E, 771 }, { 0x1E1F, 772 }, { 0x1E31, 773 }, { 0x1E3F, 774 }, { 0x1E40, 775 }, { 0x1E41, 776 }, { 0x1E44, 777 }, { 0x1E45, 778 }, { 0x1E54, 779 }, { 0x1E55, 780 }, { 0x1E56, 781 }, { 0x1E57, 782 }, { 0x1E58, 783 }, { 0x1E59, 784 }, { 0x1E60, 785 }, { 0x1E61, 786 }, { 0x1E6A, 787 }, { 0x1E6B, 788 }, { 0x1E80, 789 }, { 0x1E81, 790 }, { 0x1E82, 791 }, { 0x1E83, 792 }, { 0x1E84, 793 }, { 0x1E85, 794 }, { 0x1EBC, 795 }, { 0x1EBD, 796 }, { 0x1EF2, 797 }, { 0x1EF3, 798 }, { 0x2013, 799 }, { 0x2014, 800 }, { 0x2015, 801 }, { 0x2017, 802 }, { 0x2018, 803 }, { 0x2019, 804 }, { 0x201A, 805 }, { 0x201B, 806 }, { 0x201C, 807 }, { 0x201D, 808 }, { 0x201E, 809 }, { 0x2020, 810 }, { 0x2021, 811 }, { 0x2022, 812 }, { 0x2026, 813 }, { 0x2030, 814 }, { 0x2032, 815 }, { 0x2033, 816 }, { 0x2039, 817 }, { 0x203A, 818 }, { 0x203B, 819 }, { 0x203C, 820 }, { 0x203E, 821 }, { 0x2044, 822 }, { 0x204B, 823 }, { 0x204E, 824 }, { 0x2051, 825 }, { 0x2074, 826 }, { 0x207F, 827 }, { 0x20A3, 828 }, { 0x20A4, 829 }, { 0x20A7, 830 }, { 0x20AA, 831 }, { 0x20AC, 832 }, { 0x2105, 833 }, { 0x2106, 834 }, { 0x2113, 835 }, { 0x2116, 836 }, { 0x2117, 837 }, { 0x2122, 838 }, { 0x2126, 839 }, { 0x2127, 840 }, { 0x212E, 841 }, { 0x214B, 842 }, { 0x2150, 843 }, { 0x2151, 844 }, { 0x2152, 845 }, { 0x2153, 846 }, { 0x2154, 847 }, { 0x2155, 848 }, { 0x2156, 849 }, { 0x2157, 850 }, { 0x2158, 851 }, { 0x2159, 852 }, { 0x215A, 853 }, { 0x215B, 854 }, { 0x215C, 855 }, { 0x215D, 856 }, { 0x215E, 857 }, { 0x215F, 858 }, { 0x2160, 859 }, { 0x2164, 860 }, { 0x2169, 861 }, { 0x216C, 862 }, { 0x216D, 863 }, { 0x216E, 864 }, { 0x216F, 865 }, { 0x2170, 866 }, { 0x2174, 867 }, { 0x2179, 868 }, { 0x217C, 869 }, { 0x217D, 870 }, { 0x217E, 871 }, { 0x217F, 872 }, { 0x2189, 873 }, { 0x218A, 874 }, { 0x218B, 875 }, { 0x2190, 876 }, { 0x2191, 877 }, { 0x2192, 878 }, { 0x2193, 879 }, { 0x2194, 880 }, { 0x2195, 881 }, { 0x2196, 882 }, { 0x2197, 883 }, { 0x2198, 884 }, { 0x2199, 885 }, { 0x219A, 886 }, { 0x219B, 887 }, { 0x219E, 888 }, { 0x219F, 889 }, { 0x21A0, 890 }, { 0x21A1, 891 }, { 0x21A8, 892 }, { 0x21AF, 893 }, { 0x21E0, 894 }, { 0x21E1, 895 }, { 0x21E2, 896 }, { 0x21E3, 897 }, { 0x21E4, 898 }, { 0x21E5, 899 }, { 0x21E6, 900 }, { 0x21E7, 901 }, { 0x21E8, 902 }, { 0x21E9, 903 }, { 0x21F5, 904 }, { 0x2200, 905 }, { 0x2201, 906 }, { 0x2202, 907 }, { 0x2203, 908 }, { 0x2204, 909 }, { 0x2205, 910 }, { 0x2206, 911 }, { 0x2207, 912 }, { 0x2208, 913 }, { 0x2209, 914 }, { 0x220A, 915 }, { 0x220B, 916 }, { 0x220C, 917 }, { 0x220D, 918 }, { 0x220E, 919 }, { 0x220F, 920 }, { 0x2210, 921 }, { 0x2211, 922 }, { 0x2212, 923 }, { 0x2213, 924 }, { 0x2215, 925 }, { 0x2217, 926 }, { 0x2218, 927 }, { 0x2219, 928 }, { 0x221A, 929 }, { 0x221B, 930 }, { 0x221C, 931 }, { 0x221D, 932 }, { 0x221E, 933 }, { 0x221F, 934 }, { 0x2229, 935 }, { 0x222A, 936 }, { 0x222B, 937 }, { 0x2248, 938 }, { 0x2260, 939 }, { 0x2261, 940 }, { 0x2264, 941 }, { 0x2265, 942 }, { 0x226A, 943 }, { 0x226B, 944 }, { 0x22CE, 945 }, { 0x22EE, 946 }, { 0x2302, 947 }, { 0x2310, 948 }, { 0x2318, 949 }, { 0x2319, 950 }, { 0x231A, 951 }, { 0x231C, 952 }, { 0x231D, 953 }, { 0x231E, 954 }, { 0x231F, 955 }, { 0x2320, 956 }, { 0x2321, 957 }, { 0x2324, 958 }, { 0x2325, 959 }, { 0x2326, 960 }, { 0x2327, 961 }, { 0x232B, 962 }, { 0x2336, 963 }, { 0x2337, 964 }, { 0x2338, 965 }, { 0x2339, 966 }, { 0x233A, 967 }, { 0x233B, 968 }, { 0x233C, 969 }, { 0x233D, 970 }, { 0x233E, 971 }, { 0x233F, 972 }, { 0x2340, 973 }, { 0x2341, 974 }, { 0x2342, 975 }, { 0x2343, 976 }, { 0x2344, 977 }, { 0x2345, 978 }, { 0x2346, 979 }, { 0x2347, 980 }, { 0x2348, 981 }, { 0x2349, 982 }, { 0x234A, 983 }, { 0x234B, 984 }, { 0x234C, 985 }, { 0x234D, 986 }, { 0x234E, 987 }, { 0x234F, 988 }, { 0x2350, 989 }, { 0x2351, 990 }, { 0x2352, 991 }, { 0x2353, 992 }, { 0x2354, 993 }, { 0x2355, 994 }, { 0x2356, 995 }, { 0x2357, 996 }, { 0x2358, 997 }, { 0x2359, 998 }, { 0x235A, 999 }, { 0x235B, 1000 }, { 0x235C, 1001 }, { 0x235D, 1002 }, { 0x235E, 1003 }, { 0x235F, 1004 }, { 0x2360, 1005 }, { 0x2361, 1006 }, { 0x2362, 1007 }, { 0x2363, 1008 }, { 0x2364, 1009 }, { 0x2365, 1010 }, { 0x2366, 1011 }, { 0x2367, 1012 }, { 0x2368, 1013 }, { 0x2369, 1014 }, { 0x236A, 1015 }, { 0x236B, 1016 }, { 0x236C, 1017 }, { 0x236D, 1018 }, { 0x236E, 1019 }, { 0x236F, 1020 }, { 0x2370, 1021 }, { 0x2371, 1022 }, { 0x2372, 1023 }, { 0x2373, 1024 }, { 0x2374, 1025 }, { 0x2375, 1026 }, { 0x2376, 1027 }, { 0x2377, 1028 }, { 0x2378, 1029 }, { 0x2379, 1030 }, { 0x237A, 1031 }, { 0x2387, 1032 }, { 0x2388, 1033 }, { 0x238B, 1034 }, { 0x2395, 1035 }, { 0x23CE, 1036 }, { 0x23CF, 1037 }, { 0x23E8, 1038 }, { 0x23FB, 1039 }, { 0x23FC, 1040 }, { 0x23FD, 1041 }, { 0x23FE, 1042 }, { 0x2400, 1043 }, { 0x2401, 1044 }, { 0x2402, 1045 }, { 0x2403, 1046 }, { 0x2404, 1047 }, { 0x2405, 1048 }, { 0x2406, 1049 }, { 0x2407, 1050 }, { 0x2408, 1051 }, { 0x2409, 1052 }, { 0x240A, 1053 }, { 0x240B, 1054 }, { 0x240C, 1055 }, { 0x240D, 1056 }, { 0x240E, 1057 }, { 0x240F, 1058 }, { 0x2410, 1059 }, { 0x2411, 1060 }, { 0x2412, 1061 }, { 0x2413, 1062 }, { 0x2414, 1063 }, { 0x2415, 1064 }, { 0x2416, 1065 }, { 0x2417, 1066 }, { 0x2418, 1067 }, { 0x2419, 1068 }, { 0x241A, 1069 }, { 0x241B, 1070 }, { 0x241C, 1071 }, { 0x241D, 1072 }, { 0x241E, 1073 }, { 0x241F, 1074 }, { 0x2420, 1075 }, { 0x2421, 1076 }, { 0x2422, 1077 }, { 0x2424, 1078 }, { 0x2500, 1079 }, { 0x2502, 1080 }, { 0x250C, 1081 }, { 0x2510, 1082 }, { 0x2514, 1083 }, { 0x2518, 1084 }, { 0x251C, 1085 }, { 0x2524, 1086 }, { 0x252C, 1087 }, { 0x2534, 1088 }, { 0x253C, 1089 }, { 0x2550, 1090 }, { 0x2551, 1091 }, { 0x2552, 1092 }, { 0x2553, 1093 }, { 0x2554, 1094 }, { 0x2555, 1095 }, { 0x2556, 1096 }, { 0x2557, 1097 }, { 0x2558, 1098 }, { 0x2559, 1099 }, { 0x255A, 1100 }, { 0x255B, 1101 }, { 0x255C, 1102 }, { 0x255D, 1103 }, { 0x255E, 1104 }, { 0x255F, 1105 }, { 0x2560, 1106 }, { 0x2561, 1107 }, { 0x2562, 1108 }, { 0x2563, 1109 }, { 0x2564, 1110 }, { 0x2565, 1111 }, { 0x2566, 1112 }, { 0x2567, 1113 }, { 0x2568, 1114 }, { 0x2569, 1115 }, { 0x256A, 1116 }, { 0x256B, 1117 }, { 0x256C, 1118 }, { 0x2580, 1119 }, { 0x2581, 1120 }, { 0x2582, 1121 }, { 0x2583, 1122 }, { 0x2584, 1123 }, { 0x2585, 1124 }, { 0x2586, 1125 }, { 0x2587, 1126 }, { 0x2588, 1127 }, { 0x2589, 1128 }, { 0x258A, 1129 }, { 0x258C, 1130 }, { 0x258D, 1131 }, { 0x258E, 1132 }, { 0x258F, 1133 }, { 0x2590, 1134 }, { 0x2591, 1135 }, { 0x2592, 1136 }, { 0x2593, 1137 }, { 0x2594, 1138 }, { 0x2595, 1139 }, { 0x2596, 1140 }, { 0x2597, 1141 }, { 0x2598, 1142 }, { 0x2599, 1143 }, { 0x259A, 1144 }, { 0x259B, 1145 }, { 0x259C, 1146 }, { 0x259D, 1147 }, { 0x259E, 1148 }, { 0x259F, 1149 }, { 0x25A0, 1150 }, { 0x25A1, 1151 }, { 0x25AA, 1152 }, { 0x25AB, 1153 }, { 0x25AC, 1154 }, { 0x25AE, 1155 }, { 0x25B2, 1156 }, { 0x25B4, 1157 }, { 0x25B6, 1158 }, { 0x25BA, 1159 }, { 0x25BC, 1160 }, { 0x25BE, 1161 }, { 0x25C4, 1162 }, { 0x25C6, 1163 }, { 0x25CA, 1164 }, { 0x25CB, 1165 }, { 0x25CF, 1166 }, { 0x25D8, 1167 }, { 0x25D9, 1168 }, { 0x25E2, 1169 }, { 0x25E3, 1170 }, { 0x25E4, 1171 }, { 0x25E5, 1172 }, { 0x25E6, 1173 }, { 0x25FC, 1174 }, { 0x2605, 1175 }, { 0x262E, 1176 }, { 0x262F, 1177 }, { 0x2639, 1178 }, { 0x263A, 1179 }, { 0x263B, 1180 }, { 0x263C, 1181 }, { 0x2640, 1182 }, { 0x2641, 1183 }, { 0x2642, 1184 }, { 0x2660, 1185 }, { 0x2661, 1186 }, { 0x2662, 1187 }, { 0x2663, 1188 }, { 0x2664, 1189 }, { 0x2665, 1190 }, { 0x2666, 1191 }, { 0x2667, 1192 }, { 0x266A, 1193 }, { 0x266B, 1194 }, { 0x2691, 1195 }, { 0x2693, 1196 }, { 0x270E, 1197 }, { 0x2713, 1198 }, { 0x2714, 1199 }, { 0x2715, 1200 }, { 0x2716, 1201 }, { 0x2717, 1202 }, { 0x2718, 1203 }, { 0x271A, 1204 }, { 0x2731, 1205 }, { 0x273C, 1206 }, { 0x274C, 1207 }, { 0x2753, 1208 }, { 0x276E, 1209 }, { 0x276F, 1210 }, { 0x279C, 1211 }, { 0x27EA, 1212 }, { 0x27EB, 1213 }, { 0x27F2, 1214 }, { 0x27F3, 1215 }, { 0x2934, 1216 }, { 0x2935, 1217 }, { 0x2936, 1218 }, { 0x2937, 1219 }, { 0x2985, 1220 }, { 0x2986, 1221 }, { 0x29FB, 1222 }, { 0x2B06, 1223 }, { 0x2B07, 1224 }, { 0x2B58, 1225 }, { 0x2B60, 1226 }, { 0x2B61, 1227 }, { 0x2B62, 1228 }, { 0x2B63, 1229 }, { 0x2B64, 1230 }, { 0x2B80, 1231 }, { 0x2B81, 1232 }, { 0x2B82, 1233 }, { 0x2B83, 1234 }, { 0x2BD2, 1235 }, { 0x2E28, 1236 }, { 0x2E29, 1237 }, { 0xE0A0, 1238 }, { 0xE0A1, 1239 }, { 0xE0A2, 1240 }, { 0xE0B0, 1241 }, { 0xE0B1, 1242 }, { 0xE0B2, 1243 }, { 0xE0B3, 1244 }, { 0xE0FB, 1245 }, { 0xE0FC, 1246 }, { 0xE0FD, 1247 }, { 0xE0FE, 1248 }, { 0xF100, 1249 }, { 0xFB01, 1250 }, { 0xFB02, 1251 }, { 0xFF00, 1252 }, { 0xFF01, 1253 }, { 0xFF02, 1254 }, { 0xFF03, 1255 }, { 0xFF04, 1256 }, { 0xFF05, 1257 }, { 0xFF06, 1258 }, { 0xFF07, 1259 }, { 0xFF08, 1260 }, { 0xFF09, 1261 }, { 0xFF0A, 1262 }, { 0xFF0B, 1263 }, { 0xFF0C, 1264 }, { 0xFF0D, 1265 }, { 0xFF0E, 1266 }, { 0xFF0F, 1267 }, { 0xFF10, 1268 }, { 0xFF11, 1269 }, { 0xFF12, 1270 }, { 0xFF13, 1271 }, { 0xFF14, 1272 }, { 0xFF15, 1273 }, { 0xFF16, 1274 }, { 0xFF17, 1275 }, { 0xFF18, 1276 }, { 0xFF19, 1277 }, { 0xFF1A, 1278 }, { 0xFF1B, 1279 }, { 0xFF1C, 1280 }, { 0xFF1D, 1281 }, { 0xFF1E, 1282 }, { 0xFF1F, 1283 }, { 0xFF20, 1284 }, { 0xFF21, 1285 }, { 0xFF22, 1286 }, { 0xFF23, 1287 }, { 0xFF24, 1288 }, { 0xFF25, 1289 }, { 0xFF26, 1290 }, { 0xFF27, 1291 }, { 0xFF28, 1292 }, { 0xFF29, 1293 }, { 0xFF2A, 1294 }, { 0xFF2B, 1295 }, { 0xFF2C, 1296 }, { 0xFF2D, 1297 }, { 0xFF2E, 1298 }, { 0xFF2F, 1299 }, { 0xFF30, 1300 }, { 0xFF31, 1301 }, { 0xFF32, 1302 }, { 0xFF33, 1303 }, { 0xFF34, 1304 }, { 0xFF35, 1305 }, { 0xFF36, 1306 }, { 0xFF37, 1307 }, { 0xFF38, 1308 }, { 0xFF39, 1309 }, { 0xFF3A, 1310 }, { 0xFF3B, 1311 }, { 0xFF3C, 1312 }, { 0xFF3D, 1313 }, { 0xFF3E, 1314 }, { 0xFF3F, 1315 }, { 0xFF40, 1316 }, { 0xFF41, 1317 }, { 0xFF42, 1318 }, { 0xFF43, 1319 }, { 0xFF44, 1320 }, { 0xFF45, 1321 }, { 0xFF46, 1322 }, { 0xFF47, 1323 }, { 0xFF48, 1324 }, { 0xFF49, 1325 }, { 0xFF4A, 1326 }, { 0xFF4B, 1327 }, { 0xFF4C, 1328 }, { 0xFF4D, 1329 }, { 0xFF4E, 1330 }, { 0xFF4F, 1331 }, { 0xFF50, 1332 }, { 0xFF51, 1333 }, { 0xFF52, 1334 }, { 0xFF53, 1335 }, { 0xFF54, 1336 }, { 0xFF55, 1337 }, { 0xFF56, 1338 }, { 0xFF57, 1339 }, { 0xFF58, 1340 }, { 0xFF59, 1341 }, { 0xFF5A, 1342 }, { 0xFF5B, 1343 }, { 0xFF5C, 1344 }, { 0xFF5D, 1345 }, { 0xFF5E, 1346 }, { 0xFF5F, 1347 }, { 0xFF60, 1348 }, { 0xFF61, 1349 }, { 0xFF62, 1350 }, { 0xFF63, 1351 }, { 0xFF64, 1352 }, { 0xFF65, 1353 }, { 0xFFE0, 1354 }, { 0xFFE1, 1355 }, { 0xFFE2, 1356 }, { 0xFFE3, 1357 }, { 0xFFE4, 1358 }, { 0xFFE5, 1359 }, { 0xFFE6, 1360 }, { 0xFFE7, 1361 }, { 0xFFE8, 1362 }, { 0xFFE9, 1363 }, { 0xFFEA, 1364 }, { 0xFFEB, 1365 }, { 0xFFEC, 1366 }, { 0xFFED, 1367 }, { 0xFFEE, 1368 }, { 0xFFFC, 1369 }, { 0xFFFD, 1370 }, { 0xFFFE, 1371 }
        };

        /// <summary>
        ///     Get the binary representation of an ASCII character from the
        ///     font table.
        /// </summary>
        /// <param name="character">Character to look up.</param>
        /// <returns>
        ///     Byte array containing the rows of pixels in the character.  Unknown byte codes will result in a space being
        ///     returned.
        /// </returns>
        public override byte[] this[char character]
        {
            get
            {
                var c = (int)character;
                if (characterMap.ContainsKey(c))
                    return _fontTable[characterMap[c]];
                else
                    return _fontTable[0];
            }
        }
    }
}
