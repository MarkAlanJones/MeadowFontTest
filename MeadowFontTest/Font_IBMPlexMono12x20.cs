using System.Collections.Generic;

namespace Meadow.Foundation.Graphics
{
    // !!! This code is generated by a tool (FontConverter) !!!
    // Based on IBM Plex Mono Copyright 2017 IBM Corp. All rights reserved.
    // Using threshold of 50 at 2020-06-24T17:15:40.4187100-04:00
    public class IBMPlexMono12x20 : IFont
    {
        private const int WIDTH = 12;
        private const int HEIGHT = 20;

        public int Width { get { return WIDTH; } }
        public int Height { get { return HEIGHT; } }

        /// <summary>
        ///   Font table containing the binary representation of ASCII characters.
        /// </summary>
        private static readonly byte[][] _fontTable =
        {
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0020( ) space
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0021(!) exclamation mark
            new byte[] { 0x98, 0x81, 0x19, 0x98, 0x81, 0x19, 0x98, 0x81, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0022(") quotation mark
            new byte[] { 0x00, 0x00, 0x33, 0x30, 0x03, 0x33, 0xB0, 0x81, 0x19, 0x9F, 0x8F, 0x19, 0x98, 0x81, 0x19, 0xDF, 0xC7, 0x0C, 0xCC, 0xC0, 0x0C, 0xCC, 0xC0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0023(#) number sign
            new byte[] { 0x60, 0x80, 0x3F, 0x6C, 0x67, 0x66, 0x66, 0x60, 0x06, 0x6E, 0xC0, 0x07, 0xF0, 0x01, 0x76, 0x60, 0x06, 0x66, 0x60, 0x66, 0x66, 0x6F, 0xC3, 0x1F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //0024($) dollar sign
            new byte[] { 0x00, 0xE0, 0xC1, 0x33, 0x36, 0x63, 0x23, 0x33, 0x33, 0xB3, 0xE1, 0x09, 0x00, 0x00, 0x78, 0xF8, 0xCC, 0xC6, 0x6C, 0x6C, 0xC6, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0025(%) percent sign
            new byte[] { 0x00, 0x80, 0x0F, 0xCC, 0x61, 0x00, 0x06, 0x60, 0x00, 0x0C, 0xC0, 0x01, 0x1C, 0x6F, 0x33, 0x63, 0x33, 0x3C, 0xC3, 0x31, 0x38, 0x46, 0xC7, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0026(&) ampersand
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0027(') apostrophe
            new byte[] { 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x1C, 0x80, 0x03, 0x00}, //0028(() left parenthesis
            new byte[] { 0x0E, 0x80, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x30, 0x80, 0x01, 0x0E, 0x00, 0x00}, //0029()) right parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x20, 0x46, 0xFF, 0x87, 0x1F, 0xF0, 0x80, 0x0F, 0x9C, 0xC1, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002A(*) asterisk
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002B(+) plus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00}, //002C(,) comma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002D(-) hyphen-minus
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002E(.) full stop
            new byte[] { 0x00, 0x03, 0x30, 0x80, 0x01, 0x18, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x30, 0x00, 0x03, 0x30, 0x80, 0x01, 0x18, 0xC0, 0x01, 0x0C, 0xC0, 0x00, 0x06, 0x00, 0x00}, //002F(/) solidus
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x67, 0x77, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0030(0) digit zero
            new byte[] { 0x00, 0x00, 0x0F, 0xF8, 0xC0, 0x0E, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0031(1) digit one
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x63, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0032(2) digit two
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x63, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x18, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x70, 0x00, 0x27, 0x30, 0x8F, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0033(3) digit three
            new byte[] { 0x00, 0x00, 0x1C, 0xE0, 0x01, 0x1E, 0xB0, 0x01, 0x1B, 0x98, 0xC1, 0x19, 0x8C, 0x61, 0x18, 0x86, 0x31, 0x18, 0xFF, 0x0F, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0034(4) digit four
            new byte[] { 0x00, 0xC0, 0x3F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x60, 0x1F, 0x9E, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x46, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0035(5) digit five
            new byte[] { 0x00, 0x00, 0x1E, 0x70, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0x60, 0x1F, 0x8E, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x70, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0036(6) digit six
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x03, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0C, 0xE0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0037(7) digit seven
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0xC3, 0x38, 0xF8, 0xE0, 0x30, 0x06, 0x76, 0x60, 0x07, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0038(8) digit eight
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x70, 0x8C, 0x87, 0x7F, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0039(9) digit nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003A(:) colon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00}, //003B(;) semicolon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x78, 0xC0, 0x01, 0x07, 0x3C, 0xE0, 0x00, 0x0E, 0xC0, 0x03, 0x70, 0x00, 0x1C, 0x80, 0x07, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003C(<) less-than sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003D(=) equals sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE0, 0x00, 0x3C, 0x00, 0x0F, 0xC0, 0x01, 0x70, 0x00, 0x07, 0x1C, 0xF0, 0xC0, 0x03, 0x0E, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003E(>) greater-than sign
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x63, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x1C, 0xF0, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003F(?) question mark
            new byte[] { 0x00, 0x80, 0x0F, 0x0C, 0x63, 0x30, 0x06, 0x66, 0x7E, 0x36, 0x67, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x7E, 0x06, 0xC0, 0x00, 0x1C, 0x00, 0x1F, 0x00, 0x00, 0x00}, //0040(@) commercial at
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0041(A) latin capital letter a
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x30, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0xFE, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0042(B) latin capital letter b
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0043(C) latin capital letter c
            new byte[] { 0x00, 0xE0, 0x0F, 0x8E, 0xE3, 0x30, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE7, 0x30, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0044(D) latin capital letter d
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0045(E) latin capital letter e
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0046(F) latin capital letter f
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0xE3, 0x70, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x7E, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8C, 0x87, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0047(G) latin capital letter g
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0xFE, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0048(H) latin capital letter h
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0049(I) latin capital letter i
            new byte[] { 0x00, 0xC0, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x63, 0x38, 0x8E, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004A(J) latin capital letter j
            new byte[] { 0x00, 0x60, 0xE0, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x0E, 0x66, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x63, 0x30, 0x06, 0x67, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004B(K) latin capital letter k
            new byte[] { 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004C(L) latin capital letter l
            new byte[] { 0x00, 0xE0, 0x70, 0x0E, 0xE7, 0x78, 0x9E, 0xE7, 0x79, 0xD6, 0x66, 0x6F, 0x76, 0x66, 0x66, 0x66, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004D(M) latin capital letter m
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004E(N) latin capital letter n
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004F(O) latin capital letter o
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0050(P) latin capital letter p
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x60, 0x00, 0x06, 0xE0, 0x03, 0x00}, //0051(Q) latin capital letter q
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x0C, 0xC6, 0x60, 0x18, 0x86, 0x61, 0x30, 0x06, 0x67, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0052(R) latin capital letter r
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0053(S) latin capital letter s
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0054(T) latin capital letter t
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0055(U) latin capital letter u
            new byte[] { 0x00, 0x70, 0xE0, 0x07, 0x66, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x30, 0x8C, 0xC1, 0x19, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0056(V) latin capital letter v
            new byte[] { 0x00, 0x30, 0xC0, 0x03, 0x3E, 0x60, 0x03, 0x36, 0x67, 0x73, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xDE, 0xE6, 0x79, 0x9E, 0xE7, 0x79, 0x9E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0057(W) latin capital letter w
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xC7, 0x30, 0x9C, 0x83, 0x19, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xF8, 0x80, 0x19, 0x8C, 0xE3, 0x30, 0x06, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0058(X) latin capital letter x
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0059(Y) latin capital letter y
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x07, 0x30, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005A(Z) latin capital letter z
            new byte[] { 0xF0, 0x03, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0xF0, 0x03, 0x00}, //005B([) left square bracket
            new byte[] { 0x06, 0xC0, 0x00, 0x0C, 0x80, 0x01, 0x18, 0x80, 0x01, 0x30, 0x00, 0x03, 0x30, 0x00, 0x06, 0x60, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x80, 0x01, 0x18, 0x00, 0x03, 0x30, 0x00, 0x03, 0x00}, //005C(\) reverse solidus
            new byte[] { 0xFE, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xFE, 0x00, 0x00}, //005D(]) right square bracket
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x80, 0x0D, 0x98, 0xC1, 0x18, 0x0C, 0x63, 0x70, 0x07, 0x26, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005E(^) circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00}, //005F(_) low line
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0060(`) grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0061(a) latin small letter a
            new byte[] { 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x1F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8E, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0062(b) latin small letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0063(c) latin small letter c
            new byte[] { 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x37, 0x8C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0064(d) latin small letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0065(e) latin small letter e
            new byte[] { 0xE0, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0066(f) latin small letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x1F, 0x8C, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8C, 0x83, 0x0F, 0x0C, 0x60, 0x00, 0xFC, 0x43, 0x60, 0x06, 0x6E, 0x60, 0x06, 0xC6, 0x3F}, //0067(g) latin small letter g
            new byte[] { 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0068(h) latin small letter h
            new byte[] { 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0069(i) latin small letter i
            new byte[] { 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0xE1, 0x0F}, //006A(j) latin small letter j
            new byte[] { 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x70, 0x8E, 0xE3, 0x1C, 0xEE, 0xE0, 0x07, 0xFE, 0xE0, 0x0C, 0x8E, 0xE1, 0x38, 0x0E, 0xE7, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006B(k) latin small letter k
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006C(l) latin small letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3B, 0xF7, 0x76, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006D(m) latin small letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006E(n) latin small letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006F(o) latin small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8E, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //0070(p) latin small letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x37, 0x8C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30}, //0071(q) latin small letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF3, 0xF0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0072(r) latin small letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0073(s) latin small letter s
            new byte[] { 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0074(t) latin small letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0075(u) latin small letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xE3, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x19, 0xD8, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0076(v) latin small letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC6, 0x73, 0x3C, 0x67, 0xF3, 0x26, 0x6D, 0xD6, 0xE6, 0x69, 0x9E, 0xE7, 0x39, 0x9E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0077(w) latin small letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x0C, 0xC3, 0x19, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xD8, 0xC1, 0x19, 0x0C, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0078(x) latin small letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //0079(y) latin small letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007A(z) latin small letter z
            new byte[] { 0xE0, 0x03, 0x03, 0x30, 0x00, 0x03, 0x70, 0x00, 0x06, 0xC0, 0x00, 0x0C, 0xE0, 0xE0, 0x03, 0xE0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0x00, 0x03, 0xE0, 0x03, 0x00}, //007B({) left curly bracket
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //007C(|) vertical line
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x3C, 0x30, 0x00, 0x03, 0x30, 0x00, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x7E, 0x00, 0x00}, //007D(}) right curly bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x76, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007E(~) tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A0( ) no-break space
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //00A1(¡) inverted exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x1F, 0x7C, 0xC3, 0x26, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0xC0, 0x26, 0x7C, 0x07, 0x1F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //00A2(¢) cent sign
            new byte[] { 0x00, 0x00, 0x3F, 0x1C, 0xC7, 0x60, 0x0E, 0xE0, 0x00, 0x0E, 0xC0, 0x00, 0x0C, 0xF0, 0x0F, 0x1C, 0xC0, 0x01, 0x1C, 0xE0, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A3(£) pound sign
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0x66, 0x70, 0x0E, 0xC3, 0x30, 0x9C, 0x81, 0x19, 0xD8, 0x01, 0x0F, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A5(¥) yen sign
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //00A6(¦) broken bar
            new byte[] { 0x00, 0x80, 0x1F, 0x1C, 0xC3, 0x00, 0x0C, 0xC0, 0x00, 0x38, 0xC0, 0x1E, 0x06, 0x63, 0x70, 0x06, 0xE6, 0x30, 0x38, 0x01, 0x1E, 0x80, 0x03, 0x30, 0x00, 0xC3, 0x18, 0xFC, 0x00, 0x00}, //00A7(§) section sign
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A8(¨) diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x30, 0x06, 0x36, 0xCF, 0x99, 0x9D, 0xC1, 0x0D, 0xD8, 0x80, 0x19, 0x9C, 0xD9, 0xF3, 0x6D, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A9(©) copyright sign
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0x01, 0x18, 0xF8, 0xC1, 0x18, 0xCC, 0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AA(ª) feminine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x86, 0x73, 0x9C, 0xE3, 0x1C, 0xC6, 0xE0, 0x1C, 0x9C, 0x83, 0x73, 0x20, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AB(«) left-pointing double angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AC(¬) not sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AD(­) soft hyphen
            new byte[] { 0x00, 0x00, 0x0F, 0x88, 0xC1, 0x37, 0xD4, 0x43, 0x37, 0x7C, 0x83, 0x18, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AE(®) registered sign
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AF(¯) macron
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x0C, 0xC3, 0x30, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B0(°) degree sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B1(±) plus-minus sign
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0x01, 0x18, 0xC0, 0x00, 0x0C, 0x30, 0x80, 0x01, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B2(²) superscript two
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0x01, 0x18, 0x70, 0x00, 0x18, 0x80, 0x81, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B3(³) superscript three
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B4(´) acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8E, 0xE3, 0x3F, 0x06, 0xE0, 0x00, 0x0E, 0xE0, 0x00}, //00B5(µ) micro sign
            new byte[] { 0x00, 0x80, 0x3F, 0x7E, 0xE3, 0x37, 0x7F, 0xF3, 0x37, 0x7F, 0xE3, 0x37, 0x7E, 0x83, 0x37, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x00}, //00B6(¶) pilcrow sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B7(·) middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x02, 0xE0, 0x00, 0x18}, //00B8(¸) cedilla
            new byte[] { 0x00, 0x00, 0x07, 0x7C, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B9(¹) superscript one
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0xC1, 0x18, 0x8C, 0xC1, 0x18, 0x8C, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BA(º) masculine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x60, 0x0E, 0x9C, 0x81, 0x73, 0x30, 0x86, 0x73, 0x9C, 0x61, 0x0C, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BB(») right-pointing double angle quotation mark
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x60, 0x18, 0xC7, 0x78, 0x8C, 0x66, 0x6C, 0xC3, 0x3F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BC(¼) vulgar fraction one quarter
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xC0, 0x0C, 0x66, 0x30, 0x83, 0x31, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BD(½) vulgar fraction one half
            new byte[] { 0x00, 0xE0, 0xC1, 0x1B, 0x86, 0x61, 0x0E, 0x83, 0x19, 0x9B, 0xF1, 0x01, 0x00, 0x00, 0x60, 0x18, 0xC7, 0x78, 0x8C, 0x66, 0x6C, 0xC3, 0x3F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BE(¾) vulgar fraction three quarters
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x0C, 0xE0, 0x00, 0x06, 0xE0, 0x70, 0x8C, 0x83, 0x1F}, //00BF(¿) inverted question mark
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C0(À) latin capital letter a with grave
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C1(Á) latin capital letter a with acute
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C2(Â) latin capital letter a with circumflex
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C3(Ã) latin capital letter a with tilde
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C4(Ä) latin capital letter a with diaeresis
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C5(Å) latin capital letter a with ring above
            new byte[] { 0x00, 0x00, 0xFF, 0xF0, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0xCC, 0xC0, 0x0C, 0xCC, 0xC7, 0x0C, 0xFE, 0x60, 0x0C, 0xC6, 0x70, 0x0C, 0xC3, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C6(Æ) latin capital letter ae
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x60, 0x00, 0x0E, 0x80, 0x01, 0x18}, //00C7(Ç) latin capital letter c with cedilla
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C8(È) latin capital letter e with grave
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C9(É) latin capital letter e with acute
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CA(Ê) latin capital letter e with circumflex
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CB(Ë) latin capital letter e with diaeresis
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CC(Ì) latin capital letter i with grave
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CD(Í) latin capital letter i with acute
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CE(Î) latin capital letter i with circumflex
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CF(Ï) latin capital letter i with diaeresis
            new byte[] { 0x00, 0xE0, 0x0F, 0x8E, 0xE3, 0x30, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x7F, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE7, 0x30, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D0(Ð) latin capital letter eth
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D1(Ñ) latin capital letter n with tilde
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D2(Ò) latin capital letter o with grave
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D3(Ó) latin capital letter o with acute
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D4(Ô) latin capital letter o with circumflex
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D5(Õ) latin capital letter o with tilde
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D6(Ö) latin capital letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x30, 0x8E, 0x87, 0x1D, 0xF0, 0x00, 0x07, 0xF8, 0xC0, 0x19, 0x0E, 0x63, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D7(×) multiplication sign
            new byte[] { 0x00, 0x80, 0x7F, 0x8C, 0xE7, 0x30, 0x86, 0x67, 0x7C, 0xC6, 0x76, 0x66, 0x67, 0x76, 0x63, 0x36, 0xE6, 0x61, 0x1E, 0xE6, 0x30, 0x8E, 0xF3, 0x0F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D8(Ø) latin capital letter o with stroke
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D9(Ù) latin capital letter u with grave
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DA(Ú) latin capital letter u with acute
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DB(Û) latin capital letter u with circumflex
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DC(Ü) latin capital letter u with diaeresis
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DD(Ý) latin capital letter y with acute
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DE(Þ) latin capital letter thorn
            new byte[] { 0x7C, 0xC0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x0E, 0xE7, 0x30, 0x8E, 0xE1, 0x0C, 0xEE, 0xE0, 0x1E, 0x0E, 0xE7, 0x60, 0x0E, 0xEE, 0xE0, 0x00, 0x0E, 0x60, 0x00, 0x07, 0x1F}, //00DF(ß) latin small letter sharp s
            new byte[] { 0x18, 0x80, 0x03, 0x30, 0x00, 0x06, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E0(à) latin small letter a with grave
            new byte[] { 0xC0, 0x00, 0x0E, 0x60, 0x00, 0x03, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E1(á) latin small letter a with acute
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E2(â) latin small letter a with circumflex
            new byte[] { 0x00, 0xC0, 0x13, 0xE4, 0x01, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E3(ã) latin small letter a with tilde
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E4(ä) latin small letter a with diaeresis
            new byte[] { 0xD8, 0x80, 0x0D, 0xD8, 0x00, 0x07, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E5(å) latin small letter a with ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3D, 0x73, 0x16, 0xC7, 0x60, 0x0C, 0xC6, 0xFE, 0x3F, 0x06, 0x63, 0x30, 0x47, 0x73, 0xEE, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E6(æ) latin small letter ae
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x60, 0x00, 0x0E, 0x80, 0x01, 0x18}, //00E7(ç) latin small letter c with cedilla
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E8(è) latin small letter e with grave
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E9(é) latin small letter e with acute
            new byte[] { 0xF0, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EA(ê) latin small letter e with circumflex
            new byte[] { 0x00, 0x80, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EB(ë) latin small letter e with diaeresis
            new byte[] { 0x30, 0x00, 0x07, 0x60, 0x00, 0x0C, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EC(ì) latin small letter i with grave
            new byte[] { 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x06, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00ED(í) latin small letter i with acute
            new byte[] { 0xE0, 0x00, 0x1F, 0xB8, 0x83, 0x31, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EE(î) latin small letter i with circumflex
            new byte[] { 0x00, 0x80, 0x3B, 0xB8, 0x03, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EF(ï) latin small letter i with diaeresis
            new byte[] { 0xBC, 0x01, 0x0F, 0xF0, 0x80, 0x19, 0x00, 0x83, 0x3F, 0x8C, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F0(ð) latin small letter eth
            new byte[] { 0x00, 0x80, 0x13, 0xCC, 0x01, 0x00, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F1(ñ) latin small letter n with tilde
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F2(ò) latin small letter o with grave
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F3(ó) latin small letter o with acute
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F4(ô) latin small letter o with circumflex
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F5(õ) latin small letter o with tilde
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F6(ö) latin small letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F7(÷) division sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x6F, 0x8C, 0x63, 0x38, 0xC6, 0x67, 0x6C, 0x66, 0x66, 0x63, 0x1E, 0xE6, 0x31, 0x8E, 0xE3, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F8(ø) latin small letter o with stroke
            new byte[] { 0x18, 0x80, 0x03, 0x30, 0x00, 0x06, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F9(ù) latin small letter u with grave
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x02, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FA(ú) latin small letter u with acute
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x18, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FB(û) latin small letter u with circumflex
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FC(ü) latin small letter u with diaeresis
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //00FD(ý) latin small letter y with acute
            new byte[] { 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x1F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8E, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //00FE(þ) latin small letter thorn
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //00FF(ÿ) latin small letter y with diaeresis
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0100(Ā) latin capital letter a with macron
            new byte[] { 0x00, 0xC0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0101(ā) latin small letter a with macron
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0102(Ă) latin capital letter a with breve
            new byte[] { 0x8C, 0xC1, 0x1D, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0103(ă) latin small letter a with breve
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC3, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x06, 0x30, 0x80, 0x01, 0xF0}, //0104(Ą) latin capital letter a with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x06, 0x18, 0x80, 0x01, 0xF0}, //0105(ą) latin small letter a with ogonek
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0106(Ć) latin capital letter c with acute
            new byte[] { 0xC0, 0x00, 0x1C, 0x60, 0x00, 0x06, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0107(ć) latin small letter c with acute
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0108(Ĉ) latin capital letter c with circumflex
            new byte[] { 0xF0, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0109(ĉ) latin small letter c with circumflex
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010A(Ċ) latin capital letter c with dot above
            new byte[] { 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010B(ċ) latin small letter c with dot above
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010C(Č) latin capital letter c with caron
            new byte[] { 0x08, 0xC1, 0x39, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010D(č) latin small letter c with caron
            new byte[] { 0x00, 0xE0, 0x0F, 0x8E, 0xE3, 0x30, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE7, 0x30, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010E(Ď) latin capital letter d with caron
            new byte[] { 0x80, 0x0B, 0xB8, 0x80, 0x0B, 0xB8, 0x80, 0xC3, 0x3F, 0xCE, 0x63, 0x38, 0x87, 0x73, 0x38, 0x87, 0x73, 0x38, 0x87, 0x63, 0x38, 0xCE, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010F(ď) latin small letter d with caron
            new byte[] { 0x00, 0xE0, 0x0F, 0x8E, 0xE3, 0x30, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x7F, 0xE6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xE7, 0x30, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0110(Đ) latin capital letter d with stroke
            new byte[] { 0x00, 0x03, 0x30, 0xE0, 0x0F, 0x30, 0x00, 0x83, 0x37, 0x8C, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0111(đ) latin small letter d with stroke
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0112(Ē) latin capital letter e with macron
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0113(ē) latin small letter e with macron
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0114(Ĕ) latin capital letter e with breve
            new byte[] { 0x8C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0115(ĕ) latin small letter e with breve
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0116(Ė) latin capital letter e with dot above
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0117(ė) latin small letter e with dot above
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x78}, //0118(Ę) latin capital letter e with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x1E}, //0119(ę) latin small letter e with ogonek
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011A(Ě) latin capital letter e with caron
            new byte[] { 0x08, 0xC1, 0x19, 0xF0, 0x00, 0x0F, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011B(ě) latin small letter e with caron
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0xE3, 0x70, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x7E, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8C, 0x87, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011C(Ĝ) latin capital letter g with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x18, 0x00, 0x80, 0x7F, 0x8C, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8C, 0x81, 0x0F, 0x0C, 0x60, 0x00, 0xFC, 0x43, 0x60, 0x06, 0x6E, 0x60, 0x06, 0xC6, 0x3F}, //011D(ĝ) latin small letter g with circumflex
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0xE3, 0x70, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x7E, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8C, 0x87, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011E(Ğ) latin capital letter g with breve
            new byte[] { 0x8C, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x80, 0x7F, 0x8C, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8C, 0x81, 0x0F, 0x0C, 0x60, 0x00, 0xFC, 0x43, 0x60, 0x06, 0x6E, 0x60, 0x06, 0xC6, 0x3F}, //011F(ğ) latin small letter g with breve
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0xE3, 0x70, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x7E, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8C, 0x87, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0120(Ġ) latin capital letter g with dot above
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x87, 0x1F, 0x8C, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8C, 0x83, 0x0F, 0x0C, 0x60, 0x00, 0xFC, 0x43, 0x60, 0x06, 0x6E, 0x60, 0x06, 0xC6, 0x3F}, //0121(ġ) latin small letter g with dot above
            new byte[] { 0x00, 0x80, 0x1F, 0x8C, 0xE3, 0x70, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x7E, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8C, 0x87, 0x6F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0122(Ģ) latin capital letter g with cedilla
            new byte[] { 0xC0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x10, 0x87, 0x1F, 0x8C, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x8C, 0x83, 0x0F, 0x0C, 0x60, 0x00, 0xFC, 0x43, 0x60, 0x06, 0x6E, 0x60, 0x06, 0xC6, 0x3F}, //0123(ģ) latin small letter g with cedilla
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0xFE, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0124(Ĥ) latin capital letter h with circumflex
            new byte[] { 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0125(ĥ) latin small letter h with circumflex
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0xFF, 0x6F, 0x70, 0x06, 0x67, 0x70, 0xFE, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0126(Ħ) latin capital letter h with stroke
            new byte[] { 0x0E, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0127(ħ) latin small letter h with stroke
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0128(Ĩ) latin capital letter i with tilde
            new byte[] { 0x00, 0x80, 0x27, 0xC8, 0x03, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0129(ĩ) latin small letter i with tilde
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012A(Ī) latin capital letter i with macron
            new byte[] { 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012B(ī) latin small letter i with macron
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012C(Ĭ) latin capital letter i with breve
            new byte[] { 0x18, 0x83, 0x3B, 0xF0, 0x01, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012D(ĭ) latin small letter i with breve
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x78}, //012E(Į) latin capital letter i with ogonek
            new byte[] { 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x03, 0x18, 0x80, 0x01, 0xF8}, //012F(į) latin small letter i with ogonek
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0130(İ) latin capital letter i with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0131(ı) latin small letter dotless i
            new byte[] { 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x03, 0x30, 0x00, 0xE3, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0132(Ĳ) latin capital ligature ij
            new byte[] { 0x0E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x1F}, //0133(ĳ) latin small ligature ij
            new byte[] { 0x00, 0xC0, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x63, 0x38, 0x8E, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0134(Ĵ) latin capital letter j with circumflex
            new byte[] { 0xC0, 0x01, 0x3E, 0x60, 0x06, 0x63, 0x00, 0xE0, 0x1F, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0xE1, 0x0F}, //0135(ĵ) latin small letter j with circumflex
            new byte[] { 0x00, 0x60, 0xE0, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x0E, 0x66, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x63, 0x30, 0x06, 0x67, 0xE0, 0x00, 0x08, 0x0E, 0x60, 0x00, 0x06}, //0136(Ķ) latin capital letter k with cedilla
            new byte[] { 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x70, 0x8E, 0xE3, 0x1C, 0xEE, 0xE0, 0x07, 0xFE, 0xE0, 0x0C, 0x8E, 0xE1, 0x38, 0x0E, 0xE7, 0x60, 0x00, 0x08, 0x0E, 0x60, 0x00, 0x06}, //0137(ķ) latin small letter k with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x8E, 0xE3, 0x1C, 0xEE, 0xE0, 0x07, 0xFE, 0xE0, 0x0D, 0x8E, 0xE1, 0x38, 0x0E, 0xE7, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0138(ĸ) latin small letter kra
            new byte[] { 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0139(Ĺ) latin capital letter l with acute
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013A(ĺ) latin small letter l with acute
            new byte[] { 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x0E, 0x60, 0x00, 0x06}, //013B(Ļ) latin capital letter l with cedilla
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //013C(ļ) latin small letter l with cedilla
            new byte[] { 0xC0, 0xC0, 0x0E, 0xEC, 0xC0, 0x06, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013D(Ľ) latin capital letter l with caron
            new byte[] { 0x7E, 0x07, 0x76, 0x60, 0x03, 0x36, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013E(ľ) latin small letter l with caron
            new byte[] { 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x8C, 0xC3, 0x38, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013F(Ŀ) latin capital letter l with middle dot
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xE6, 0x60, 0x0E, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0140(ŀ) latin small letter l with middle dot
            new byte[] { 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x08, 0x7C, 0xE0, 0x01, 0x0F, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0141(Ł) latin capital letter l with stroke
            new byte[] { 0x7E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x36, 0xE0, 0x81, 0x07, 0x64, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0142(ł) latin small letter l with stroke
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0143(Ń) latin capital letter n with acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0144(ń) latin small letter n with acute
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0145(Ņ) latin capital letter n with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0146(ņ) latin small letter n with cedilla
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0147(Ň) latin capital letter n with caron
            new byte[] { 0x08, 0xC1, 0x19, 0xF0, 0x00, 0x0F, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0148(ň) latin small letter n with caron
            new byte[] { 0x03, 0x30, 0x00, 0x01, 0x10, 0x00, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0149(ŉ) latin small letter n preceded by apostrophe
            new byte[] { 0x00, 0xE0, 0x60, 0x1E, 0xE6, 0x61, 0x1E, 0xE6, 0x63, 0x36, 0x66, 0x67, 0x66, 0x66, 0x66, 0xC6, 0x66, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x78, 0x00, 0x06, 0x60, 0x00, 0x86, 0x3F}, //014A(Ŋ) latin capital letter eng
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x3F}, //014B(ŋ) latin small letter eng
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014C(Ō) latin capital letter o with macron
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014D(ō) latin small letter o with macron
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014E(Ŏ) latin capital letter o with breve
            new byte[] { 0x8C, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014F(ŏ) latin small letter o with breve
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0150(Ő) latin capital letter o with double acute
            new byte[] { 0x20, 0x03, 0x3F, 0xB0, 0x81, 0x0D, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0151(ő) latin small letter o with double acute
            new byte[] { 0x00, 0x80, 0xFF, 0xCC, 0x60, 0x0C, 0xC6, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x37, 0x0C, 0xC3, 0x30, 0x0C, 0xC6, 0x60, 0x0C, 0xCC, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0152(Œ) latin capital ligature oe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x79, 0x73, 0x36, 0xC6, 0x63, 0x3C, 0xC6, 0xE3, 0x3F, 0x06, 0x63, 0x30, 0x46, 0xF3, 0xEE, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0153(œ) latin small ligature oe
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x0C, 0xC6, 0x60, 0x18, 0x86, 0x61, 0x30, 0x06, 0x67, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0154(Ŕ) latin capital letter r with acute
            new byte[] { 0x80, 0x01, 0x18, 0xC0, 0x00, 0x0C, 0x00, 0xE0, 0xF3, 0xF0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0155(ŕ) latin small letter r with acute
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x0C, 0xC6, 0x60, 0x18, 0x86, 0x61, 0x30, 0x06, 0x67, 0x60, 0x00, 0x00, 0x06, 0x70, 0x00, 0x03}, //0156(Ŗ) latin capital letter r with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF3, 0xF0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x3F, 0x00, 0x00, 0x07, 0x30, 0x80, 0x03}, //0157(ŗ) latin small letter r with cedilla
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x0C, 0xC6, 0x60, 0x18, 0x86, 0x61, 0x30, 0x06, 0x67, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0158(Ř) latin capital letter r with caron
            new byte[] { 0x10, 0x82, 0x73, 0xE0, 0x01, 0x1E, 0x00, 0xE0, 0xF3, 0xF0, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0159(ř) latin small letter r with caron
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015A(Ś) latin capital letter s with acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015B(ś) latin small letter s with acute
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015C(Ŝ) latin capital letter s with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015D(ŝ) latin small letter s with circumflex
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF8, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x20, 0x00, 0x0E, 0xC0, 0x01, 0x08}, //015E(Ş) latin capital letter s with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x20, 0x00, 0x0E, 0xC0, 0x01, 0x08}, //015F(ş) latin small letter s with cedilla
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0160(Š) latin capital letter s with caron
            new byte[] { 0x0C, 0xC1, 0x19, 0xF8, 0x00, 0x07, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0161(š) latin small letter s with caron
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0162(Ţ) latin capital letter t with cedilla
            new byte[] { 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x1C, 0xC0, 0x00, 0x0C}, //0163(ţ) latin small letter t with cedilla
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0164(Ť) latin capital letter t with caron
            new byte[] { 0x00, 0x03, 0x3B, 0xB0, 0x03, 0x1B, 0x30, 0xF0, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0165(ť) latin small letter t with caron
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0166(Ŧ) latin capital letter t with stroke
            new byte[] { 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0xFE, 0x03, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0167(ŧ) latin small letter t with stroke
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0168(Ũ) latin capital letter u with tilde
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0169(ũ) latin small letter u with tilde
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016A(Ū) latin capital letter u with macron
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016B(ū) latin small letter u with macron
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016C(Ŭ) latin capital letter u with breve
            new byte[] { 0x8C, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016D(ŭ) latin small letter u with breve
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016E(Ů) latin capital letter u with ring above
            new byte[] { 0x98, 0x80, 0x09, 0x98, 0x00, 0x07, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016F(ů) latin small letter u with ring above
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0170(Ű) latin capital letter u with double acute
            new byte[] { 0x30, 0x03, 0x3F, 0x98, 0x81, 0x0D, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0171(ű) latin small letter u with double acute
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x40, 0x00, 0x03, 0x30, 0x00, 0x1E}, //0172(Ų) latin capital letter u with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x78}, //0173(ų) latin small letter u with ogonek
            new byte[] { 0x00, 0x30, 0xC0, 0x03, 0x3E, 0x60, 0x03, 0x36, 0x67, 0x73, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xDE, 0xE6, 0x79, 0x9E, 0xE7, 0x79, 0x9E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0174(Ŵ) latin capital letter w with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x30, 0xC6, 0x73, 0x3C, 0x67, 0xF3, 0x26, 0x6D, 0xD6, 0xE6, 0x69, 0x9E, 0xE7, 0x39, 0x9E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0175(ŵ) latin small letter w with circumflex
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0176(Ŷ) latin capital letter y with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //0177(ŷ) latin small letter y with circumflex
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0178(Ÿ) latin capital letter y with diaeresis
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x07, 0x30, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0179(Ź) latin capital letter z with acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0xE0, 0x3F, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017A(ź) latin small letter z with acute
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x07, 0x30, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017B(Ż) latin capital letter z with dot above
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017C(ż) latin small letter z with dot above
            new byte[] { 0x00, 0xE0, 0x7F, 0x00, 0x07, 0x30, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x03, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017D(Ž) latin capital letter z with caron
            new byte[] { 0x0C, 0xC1, 0x19, 0xF8, 0x00, 0x07, 0x00, 0xE0, 0x3F, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x70, 0x00, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017E(ž) latin small letter z with caron
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x63, 0x30, 0x06, 0x06, 0x60, 0x00, 0x06, 0x60, 0xFF, 0x77, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //018F(Ə) latin capital letter schwa
            new byte[] { 0x00, 0x00, 0xF8, 0xC0, 0x00, 0x0C, 0xE0, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x38, 0x80, 0x01, 0x18, 0xF0, 0x00}, //0192(ƒ) latin small letter f with hook
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01A0(Ơ) latin capital letter o with horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01A1(ơ) latin small letter o with horn
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01AF(Ư) latin capital letter u with horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01B0(ư) latin small letter u with horn
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FA(Ǻ) latin capital letter a with ring above and acute
            new byte[] { 0xD8, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FB(ǻ) latin small letter a with ring above and acute
            new byte[] { 0x00, 0x00, 0xFF, 0xF0, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0xCC, 0xC0, 0x0C, 0xCC, 0xC7, 0x0C, 0xFE, 0x60, 0x0C, 0xC6, 0x70, 0x0C, 0xC3, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FC(Ǽ) latin capital letter ae with acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0xE0, 0x3D, 0x73, 0x16, 0xC7, 0x60, 0x0C, 0xC6, 0xFE, 0x3F, 0x06, 0x63, 0x30, 0x47, 0x73, 0xEE, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FD(ǽ) latin small letter ae with acute
            new byte[] { 0x00, 0x80, 0x7F, 0x8C, 0xE7, 0x30, 0x86, 0x67, 0x7C, 0xC6, 0x76, 0x66, 0x67, 0x76, 0x63, 0x36, 0xE6, 0x61, 0x1E, 0xE6, 0x30, 0x8E, 0xF3, 0x0F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FE(Ǿ) latin capital letter o with stroke and acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x80, 0x6F, 0x8C, 0x63, 0x38, 0xC6, 0x67, 0x6C, 0x66, 0x66, 0x63, 0x1E, 0xE6, 0x31, 0x8E, 0xE3, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FF(ǿ) latin small letter o with stroke and acute
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0218(Ș) latin capital letter s with comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //0219(ș) latin small letter s with comma below
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x07, 0x70, 0x00, 0x03}, //021A(Ț) latin capital letter t with comma below
            new byte[] { 0x00, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF0, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x1C, 0xC0, 0x00, 0x0C}, //021B(ț) latin small letter t with comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0xE1, 0x0F}, //0237(ȷ) latin small letter dotless j
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x00, 0x06, 0x60, 0xFE, 0x67, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0259(ə) latin small letter schwa
            new byte[] { 0xC0, 0x00, 0x0E, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02BB(ʻ) modifier letter turned comma
            new byte[] { 0x38, 0x80, 0x03, 0x18, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02BC(ʼ) modifier letter apostrophe
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C6(ˆ) modifier letter circumflex accent
            new byte[] { 0x0C, 0xC1, 0x19, 0xF8, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C7(ˇ) caron
            new byte[] { 0x8C, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D8(˘) breve
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D9(˙) dot above
            new byte[] { 0x98, 0x80, 0x19, 0x98, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DA(˚) ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0xC0, 0x00, 0x0C, 0xC0, 0x07}, //02DB(˛) ogonek
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DC(˜) small tilde
            new byte[] { 0x20, 0x03, 0x3F, 0xB0, 0x81, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DD(˝) double acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0300(̀) combining grave accent
            new byte[] { 0x03, 0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0301(́) combining acute accent
            new byte[] { 0x01, 0x30, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0302(̂) combining circumflex accent
            new byte[] { 0x00, 0x40, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0303(̃) combining tilde
            new byte[] { 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0304(̄) combining macron
            new byte[] { 0x06, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0306(̆) combining breve
            new byte[] { 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0307(̇) combining dot above
            new byte[] { 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0308(̈) combining diaeresis
            new byte[] { 0x03, 0x30, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0309(̉) combining hook above
            new byte[] { 0x03, 0x20, 0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030A(̊) combining ring above
            new byte[] { 0x0C, 0xF0, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030B(̋) combining double acute accent
            new byte[] { 0x06, 0x70, 0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030C(̌) combining caron
            new byte[] { 0x03, 0x10, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0312(̒) combining turned comma above
            new byte[] { 0x03, 0x30, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0315(̕) combining comma above right
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //031B(̛) combining horn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00}, //0323(̣) combining dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00}, //0326(̦) combining comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00}, //0327(̧) combining cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0328(̨) combining ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C0(π) greek small letter pi
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0400(Ѐ) cyrillic capital letter ie with grave
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0401(Ё) cyrillic capital letter io
            new byte[] { 0x00, 0xF0, 0x0F, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x00, 0x06, 0x60, 0xE0, 0x07, 0x00}, //0402(Ђ) cyrillic capital letter dje
            new byte[] { 0x00, 0xC0, 0x7F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0403(Ѓ) cyrillic capital letter gje
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0404(Є) cyrillic capital letter ukrainian ie
            new byte[] { 0x00, 0x80, 0x1F, 0x0E, 0x67, 0x60, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x01, 0xF0, 0x01, 0x30, 0x00, 0x06, 0x60, 0x00, 0x66, 0x70, 0x0F, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0405(Ѕ) cyrillic capital letter dze
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0406(І) cyrillic capital letter byelorussian-ukrainian i
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0407(Ї) cyrillic capital letter yi
            new byte[] { 0x00, 0xC0, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x63, 0x38, 0x8E, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0408(Ј) cyrillic capital letter je
            new byte[] { 0x00, 0xC0, 0x0F, 0xCC, 0xC0, 0x0C, 0xCC, 0xC0, 0x0C, 0xCC, 0xC0, 0x3C, 0xCC, 0xCE, 0xCC, 0xCE, 0xEC, 0xCC, 0xC6, 0x6C, 0xCC, 0xC6, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0409(Љ) cyrillic capital letter lje
            new byte[] { 0x00, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x3E, 0x7F, 0x7E, 0xC6, 0x67, 0x7C, 0xC6, 0x67, 0x7C, 0xC6, 0x67, 0x7E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040A(Њ) cyrillic capital letter nje
            new byte[] { 0x00, 0xF0, 0x0F, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x18, 0x87, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040B(Ћ) cyrillic capital letter tshe
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x63, 0x38, 0x86, 0x61, 0x1C, 0xC6, 0x60, 0x0C, 0x7E, 0x60, 0x0E, 0xC6, 0x60, 0x1C, 0x86, 0x61, 0x18, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040C(Ќ) cyrillic capital letter kje
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x7C, 0xC6, 0x66, 0x76, 0x66, 0x67, 0x73, 0x36, 0xE7, 0x71, 0x1E, 0xE7, 0x70, 0x0E, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040D(Ѝ) cyrillic capital letter i with grave
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE6, 0x70, 0x0C, 0xC3, 0x31, 0x98, 0x83, 0x19, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //040E(Ў) cyrillic capital letter short u
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //040F(Џ) cyrillic capital letter dzhe
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0410(А) cyrillic capital letter a
            new byte[] { 0x00, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x06, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x70, 0x06, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0411(Б) cyrillic capital letter be
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x30, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0xFE, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0412(В) cyrillic capital letter ve
            new byte[] { 0x00, 0xC0, 0x7F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0413(Г) cyrillic capital letter ghe
            new byte[] { 0x00, 0x80, 0x3F, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x18, 0x83, 0x31, 0x1C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0E, 0xF3, 0xFF, 0x03, 0x3C, 0xC0, 0x03, 0x0C, 0x00}, //0414(Д) cyrillic capital letter de
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0415(Е) cyrillic capital letter ie
            new byte[] { 0x00, 0x30, 0xC6, 0x63, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE3, 0x36, 0xF8, 0xE1, 0x36, 0x66, 0x67, 0x66, 0x67, 0x36, 0xE6, 0x63, 0x3C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0416(Ж) cyrillic capital letter zhe
            new byte[] { 0x00, 0xC0, 0x0F, 0x8E, 0x23, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x18, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x70, 0x00, 0x27, 0x30, 0x8F, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0417(З) cyrillic capital letter ze
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x7C, 0xC6, 0x66, 0x76, 0x66, 0x67, 0x73, 0x36, 0xE7, 0x71, 0x1E, 0xE7, 0x70, 0x0E, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0418(И) cyrillic capital letter i
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x7C, 0xC6, 0x66, 0x76, 0x66, 0x67, 0x73, 0x36, 0xE7, 0x71, 0x1E, 0xE7, 0x70, 0x0E, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0419(Й) cyrillic capital letter short i
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x63, 0x38, 0x86, 0x61, 0x1C, 0xC6, 0x60, 0x0C, 0x7E, 0x60, 0x0E, 0xC6, 0x60, 0x1C, 0x86, 0x61, 0x18, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041A(К) cyrillic capital letter ka
            new byte[] { 0x00, 0x80, 0x7F, 0x18, 0x87, 0x71, 0x18, 0x87, 0x71, 0x18, 0x87, 0x71, 0x18, 0xC7, 0x71, 0x1C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x06, 0x37, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041B(Л) cyrillic capital letter el
            new byte[] { 0x00, 0xE0, 0x70, 0x0E, 0xE7, 0x78, 0x9E, 0xE7, 0x79, 0xD6, 0x66, 0x6F, 0x76, 0x66, 0x66, 0x66, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041C(М) cyrillic capital letter em
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0xFE, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041D(Н) cyrillic capital letter en
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041E(О) cyrillic capital letter o
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //041F(П) cyrillic capital letter pe
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0xFE, 0x61, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0420(Р) cyrillic capital letter er
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0421(С) cyrillic capital letter es
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0422(Т) cyrillic capital letter te
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE6, 0x70, 0x0C, 0xC3, 0x31, 0x98, 0x83, 0x19, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0423(У) cyrillic capital letter u
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x80, 0x1F, 0x6E, 0x63, 0x66, 0x63, 0x36, 0xE6, 0x63, 0x3E, 0xE6, 0x63, 0x3E, 0x66, 0x66, 0xE6, 0x36, 0xF8, 0x01, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}, //0424(Ф) cyrillic capital letter ef
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xC7, 0x30, 0x9C, 0x83, 0x19, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xF8, 0x80, 0x19, 0x8C, 0xE3, 0x30, 0x06, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0425(Х) cyrillic capital letter ha
            new byte[] { 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0xFF, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //0426(Ц) cyrillic capital letter tse
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x0E, 0x87, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0427(Ч) cyrillic capital letter che
            new byte[] { 0x00, 0x70, 0x66, 0x67, 0x76, 0x66, 0x67, 0x76, 0x66, 0x67, 0x76, 0x66, 0x67, 0x76, 0x66, 0x67, 0x76, 0x66, 0x67, 0x76, 0x66, 0x67, 0xF6, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0428(Ш) cyrillic capital letter sha
            new byte[] { 0x00, 0x70, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0xF7, 0xFF, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //0429(Щ) cyrillic capital letter shcha
            new byte[] { 0x00, 0xF0, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x18, 0x86, 0xE1, 0x18, 0x8C, 0xC1, 0x18, 0x8C, 0xE1, 0x18, 0x86, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042A(Ъ) cyrillic capital letter hard sign
            new byte[] { 0x00, 0x70, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x60, 0x07, 0xF6, 0x63, 0x67, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0x67, 0xF6, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042B(Ы) cyrillic capital letter yeru
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042C(Ь) cyrillic capital letter soft sign
            new byte[] { 0x00, 0xC0, 0x0F, 0x8E, 0x61, 0x30, 0x00, 0x03, 0x70, 0x00, 0x06, 0x60, 0xF0, 0x07, 0x60, 0x00, 0x06, 0x70, 0x00, 0x73, 0x30, 0x8E, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042D(Э) cyrillic capital letter e
            new byte[] { 0x00, 0x70, 0x3E, 0x77, 0x77, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0x63, 0x3F, 0x76, 0x63, 0x37, 0x76, 0x63, 0x37, 0x76, 0x63, 0x77, 0x77, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042E(Ю) cyrillic capital letter yu
            new byte[] { 0x00, 0x80, 0x7F, 0x0C, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xC7, 0x70, 0xF8, 0x07, 0x73, 0x18, 0x87, 0x71, 0x1C, 0xC7, 0x70, 0x0C, 0x77, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //042F(Я) cyrillic capital letter ya
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0430(а) cyrillic small letter a
            new byte[] { 0xE0, 0x83, 0x01, 0x0C, 0xC0, 0x00, 0x06, 0x60, 0x0F, 0x8E, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x46, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0431(б) cyrillic small letter be
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0xFC, 0xC1, 0x30, 0x0C, 0xC7, 0x70, 0x0C, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0432(в) cyrillic small letter ve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0433(г) cyrillic small letter ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x06, 0xF3, 0xFF, 0x03, 0x3C, 0xC0, 0x03, 0x0C, 0x00}, //0434(д) cyrillic small letter de
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0435(е) cyrillic small letter ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xE6, 0x67, 0x66, 0x66, 0x66, 0x66, 0x36, 0xFC, 0x63, 0x36, 0x66, 0x66, 0x66, 0x63, 0x36, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0436(ж) cyrillic small letter zhe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x03, 0x30, 0x00, 0x03, 0x38, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0x86, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0437(з) cyrillic small letter ze
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x86, 0x63, 0x38, 0xC6, 0x63, 0x3E, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x31, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0438(и) cyrillic small letter i
            new byte[] { 0x8C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x60, 0x30, 0x86, 0x63, 0x38, 0xC6, 0x63, 0x3E, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x31, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0439(й) cyrillic small letter short i
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x70, 0x0C, 0xC3, 0x18, 0xCC, 0xC1, 0x0C, 0x7C, 0xC0, 0x0C, 0xCC, 0xC0, 0x18, 0x8C, 0xC3, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043A(к) cyrillic small letter ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0x1C, 0xC3, 0x31, 0x1C, 0xC3, 0x31, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x06, 0x73, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043B(л) cyrillic small letter el
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x0E, 0xE7, 0x79, 0x9E, 0x67, 0x6F, 0xF6, 0x66, 0x67, 0x66, 0x66, 0x60, 0x06, 0x66, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043C(м) cyrillic small letter em
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043D(н) cyrillic small letter en
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043E(о) cyrillic small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3F, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //043F(п) cyrillic small letter pe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1F, 0x9E, 0xE3, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x70, 0x8E, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //0440(р) cyrillic small letter er
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0441(с) cyrillic small letter es
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0442(т) cyrillic small letter te
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //0443(у) cyrillic small letter u
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x3F, 0x76, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x76, 0xE6, 0x3F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //0444(ф) cyrillic small letter ef
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x0C, 0xC3, 0x19, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xD8, 0xC1, 0x19, 0x0C, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0445(х) cyrillic small letter ha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0xFF, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //0446(ц) cyrillic small letter tse
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0447(ч) cyrillic small letter che
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0xF6, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0448(ш) cyrillic small letter sha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0x36, 0x66, 0x63, 0xF6, 0xFF, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //0449(щ) cyrillic small letter shcha
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0x18, 0x86, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044A(ъ) cyrillic small letter hard sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x07, 0x76, 0x60, 0x07, 0xF6, 0x63, 0x67, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0xE7, 0xF6, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044B(ы) cyrillic small letter yeru
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x1F, 0x0C, 0xC3, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044C(ь) cyrillic small letter soft sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x61, 0x30, 0x00, 0x03, 0x70, 0xF0, 0x07, 0x70, 0x00, 0x43, 0x30, 0x8E, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044D(э) cyrillic small letter e
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x3E, 0x63, 0x36, 0x63, 0x33, 0x36, 0x63, 0x3F, 0x36, 0x63, 0x33, 0x36, 0x63, 0x63, 0x36, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044E(ю) cyrillic small letter yu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x0C, 0x63, 0x30, 0x06, 0xE3, 0x30, 0xF8, 0x83, 0x33, 0x18, 0xC3, 0x31, 0x0C, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //044F(я) cyrillic small letter ya
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0450(ѐ) cyrillic small letter ie with grave
            new byte[] { 0x00, 0x80, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0451(ё) cyrillic small letter io
            new byte[] { 0x0E, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x03, 0x30, 0x00, 0x83, 0x3F}, //0452(ђ) cyrillic small letter dje
            new byte[] { 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x06, 0x00, 0xC0, 0x3F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0453(ѓ) cyrillic small letter gje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0454(є) cyrillic small letter ukrainian ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x0C, 0x63, 0x00, 0x06, 0xC0, 0x00, 0xF8, 0x01, 0x30, 0x00, 0x66, 0x60, 0x0E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0455(ѕ) cyrillic small letter dze
            new byte[] { 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0456(і) cyrillic small letter byelorussian-ukrainian i
            new byte[] { 0x00, 0x80, 0x3B, 0xB8, 0x03, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0457(ї) cyrillic small letter yi
            new byte[] { 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0xE1, 0x0F}, //0458(ј) cyrillic small letter je
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x6C, 0xC0, 0x06, 0x6C, 0xC0, 0x7E, 0x64, 0x6E, 0xC6, 0x66, 0x6C, 0xC6, 0x66, 0x3E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0459(љ) cyrillic small letter lje
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x7E, 0x7F, 0x3E, 0xC6, 0x63, 0x3C, 0xC6, 0x63, 0x3E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045A(њ) cyrillic small letter nje
            new byte[] { 0x0E, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045B(ћ) cyrillic small letter tshe
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x02, 0x00, 0xC0, 0x70, 0x0C, 0xC3, 0x18, 0xCC, 0xC1, 0x0C, 0x7C, 0xC0, 0x0C, 0xCC, 0xC0, 0x18, 0x8C, 0xC3, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045C(ќ) cyrillic small letter kje
            new byte[] { 0x18, 0x80, 0x03, 0x30, 0x00, 0x06, 0x00, 0x60, 0x30, 0x86, 0x63, 0x38, 0xC6, 0x63, 0x3E, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x31, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //045D(ѝ) cyrillic small letter i with grave
            new byte[] { 0x8C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //045E(ў) cyrillic small letter short u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x3F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //045F(џ) cyrillic small letter dzhe
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x67, 0x60, 0x06, 0x76, 0x60, 0xFF, 0x77, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0472(Ѳ) cyrillic capital letter fita
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0473(ѳ) cyrillic small letter fita
            new byte[] { 0x00, 0xC6, 0x7F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0490(Ґ) cyrillic capital letter ghe with upturn
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0xC3, 0x3F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0491(ґ) cyrillic small letter ghe with upturn
            new byte[] { 0x00, 0xC0, 0x7F, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0xFF, 0xC1, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0492(Ғ) cyrillic capital letter ghe with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0xFF, 0xC1, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0493(ғ) cyrillic small letter ghe with stroke
            new byte[] { 0x00, 0xE0, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x0E, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x00, 0x06, 0x30, 0xF0, 0x01, 0x00}, //0494(Ҕ) cyrillic capital letter ghe with middle hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0xFC, 0xC1, 0x30, 0x0C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x1C}, //0495(ҕ) cyrillic small letter ghe with middle hook
            new byte[] { 0x00, 0x30, 0xE7, 0x73, 0x36, 0x67, 0x77, 0x66, 0x37, 0x76, 0x63, 0x37, 0xFC, 0x61, 0x37, 0x76, 0x63, 0x77, 0x73, 0x36, 0x67, 0x73, 0x36, 0xC7, 0x00, 0x08, 0x80, 0x00, 0x08, 0x00}, //0496(Җ) cyrillic capital letter zhe with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x66, 0x63, 0x66, 0x66, 0x66, 0x63, 0x36, 0xFC, 0x61, 0x36, 0x66, 0x77, 0x66, 0x63, 0x36, 0xE6, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //0497(җ) cyrillic small letter zhe with descender
            new byte[] { 0x00, 0xC0, 0x0F, 0x8E, 0x23, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x18, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x70, 0x00, 0x27, 0x30, 0x8F, 0xC3, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00}, //0498(Ҙ) cyrillic capital letter ze with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x03, 0x30, 0x00, 0x03, 0x38, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0x86, 0xC3, 0x0F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00}, //0499(ҙ) cyrillic small letter ze with descender
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x63, 0x18, 0x86, 0x61, 0x1C, 0xC6, 0x60, 0x0E, 0x3E, 0x60, 0x0E, 0xC6, 0x60, 0x0C, 0x86, 0x61, 0x18, 0x86, 0x63, 0xF0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0x00}, //049A(Қ) cyrillic capital letter ka with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x8E, 0xE3, 0x18, 0xCE, 0xE0, 0x0C, 0x7E, 0xE0, 0x0C, 0xCE, 0xE0, 0x18, 0x8E, 0xE1, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00}, //049B(қ) cyrillic small letter ka with descender
            new byte[] { 0x00, 0x60, 0x60, 0x06, 0x67, 0x30, 0x86, 0xE3, 0x19, 0xDE, 0xE1, 0x0D, 0x7E, 0xE0, 0x0D, 0xDE, 0xE1, 0x19, 0x86, 0x61, 0x30, 0x06, 0x63, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049C(Ҝ) cyrillic capital letter ka with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0x63, 0x38, 0xB6, 0x61, 0x0F, 0x7E, 0x60, 0x0F, 0xB6, 0x61, 0x18, 0x06, 0x63, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //049D(ҝ) cyrillic small letter ka with vertical stroke
            new byte[] { 0x00, 0xF0, 0xE1, 0x18, 0x86, 0x71, 0x18, 0x83, 0x31, 0x98, 0x81, 0x19, 0xF8, 0x80, 0x19, 0x98, 0x81, 0x31, 0x18, 0x83, 0x31, 0x18, 0x86, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A0(Ҡ) cyrillic capital letter bashkir ka
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x61, 0x18, 0x83, 0x31, 0x98, 0x81, 0x19, 0xF8, 0x80, 0x19, 0x98, 0x81, 0x31, 0x18, 0x83, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A1(ҡ) cyrillic small letter bashkir ka
            new byte[] { 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04A2(Ң) cyrillic capital letter en with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04A3(ң) cyrillic small letter en with descender
            new byte[] { 0x00, 0x70, 0xFC, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xFF, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A4(Ҥ) cyrillic capital ligature en ghe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xFC, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xFF, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0xC7, 0x70, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04A5(ҥ) cyrillic small ligature en ghe
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //04AA(Ҫ) cyrillic capital letter es with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x30, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xC0, 0x20, 0x1C, 0x07, 0x1F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00}, //04AB(ҫ) cyrillic small letter es with descender
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04AE(Ү) cyrillic capital letter straight u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xC3, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x19, 0xD8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //04AF(ү) cyrillic small letter straight u
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0x66, 0x70, 0x0C, 0xC3, 0x19, 0x98, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B0(Ұ) cyrillic capital letter straight u with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x06, 0xC3, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x19, 0xD8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0xFC, 0x03, 0x06, 0x60, 0x00, 0x06}, //04B1(ұ) cyrillic small letter straight u with stroke
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE7, 0x30, 0x9C, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xD8, 0x80, 0x19, 0x8C, 0xE1, 0x30, 0x06, 0x33, 0xE0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04B2(Ҳ) cyrillic capital letter ha with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x0C, 0xC3, 0x19, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x0F, 0xD8, 0xC0, 0x19, 0x0C, 0x63, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04B3(ҳ) cyrillic small letter ha with descender
            new byte[] { 0x00, 0x70, 0x30, 0x07, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x0E, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04B6(Ҷ) cyrillic capital letter che with descender
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0x00}, //04B7(ҷ) cyrillic small letter che with descender
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x76, 0x66, 0x67, 0x76, 0x6E, 0x87, 0x7F, 0x60, 0x07, 0x76, 0x60, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B8(Ҹ) cyrillic capital letter che with vertical stroke
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x26, 0x63, 0x32, 0xAE, 0xC3, 0x3F, 0x20, 0x03, 0x32, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04B9(ҹ) cyrillic small letter che with vertical stroke
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x06, 0x63, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BA(Һ) cyrillic capital letter shha
            new byte[] { 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04BB(һ) cyrillic small letter shha
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C0(Ӏ) cyrillic letter palochka
            new byte[] { 0x00, 0x30, 0xC6, 0x63, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE3, 0x36, 0xF8, 0xE1, 0x36, 0x66, 0x67, 0x66, 0x67, 0x36, 0xE6, 0x63, 0x3C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C1(Ӂ) cyrillic capital letter zhe with breve
            new byte[] { 0x8C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x30, 0xE6, 0x67, 0x66, 0x66, 0x66, 0x66, 0x36, 0xFC, 0x63, 0x36, 0x66, 0x66, 0x66, 0x63, 0x36, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04C2(ӂ) cyrillic small letter zhe with breve
            new byte[] { 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04CF(ӏ) cyrillic small letter palochka
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D0(Ӑ) cyrillic capital letter a with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D1(ӑ) cyrillic small letter a with breve
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D2(Ӓ) cyrillic capital letter a with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D3(ӓ) cyrillic small letter a with diaeresis
            new byte[] { 0x00, 0x00, 0xFF, 0xF0, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0xCC, 0xC0, 0x0C, 0xCC, 0xC7, 0x0C, 0xFE, 0x60, 0x0C, 0xC6, 0x70, 0x0C, 0xC3, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D4(Ӕ) cyrillic capital ligature a ie
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x3D, 0x73, 0x16, 0xC7, 0x60, 0x0C, 0xC6, 0xFE, 0x3F, 0x06, 0x63, 0x30, 0x47, 0x73, 0xEE, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D5(ӕ) cyrillic small ligature a ie
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D6(Ӗ) cyrillic capital letter ie with breve
            new byte[] { 0x8C, 0x83, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D7(ӗ) cyrillic small letter ie with breve
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x63, 0x30, 0x06, 0x06, 0x60, 0x00, 0x06, 0x60, 0xFF, 0x77, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D8(Ә) cyrillic capital letter schwa
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x00, 0x06, 0x60, 0xFE, 0x67, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04D9(ә) cyrillic small letter schwa
            new byte[] { 0x00, 0x30, 0xC6, 0x63, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE3, 0x36, 0xF8, 0xE1, 0x36, 0x66, 0x67, 0x66, 0x67, 0x36, 0xE6, 0x63, 0x3C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DC(Ӝ) cyrillic capital letter zhe with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x30, 0xE6, 0x67, 0x66, 0x66, 0x66, 0x66, 0x36, 0xFC, 0x63, 0x36, 0x66, 0x66, 0x66, 0x63, 0x36, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DD(ӝ) cyrillic small letter zhe with diaeresis
            new byte[] { 0x00, 0xC0, 0x0F, 0x8E, 0x23, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x18, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x70, 0x00, 0x27, 0x30, 0x8F, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DE(Ӟ) cyrillic capital letter ze with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x03, 0x30, 0x00, 0x03, 0x38, 0xF8, 0x00, 0x38, 0x00, 0x03, 0x30, 0x86, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04DF(ӟ) cyrillic small letter ze with diaeresis
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x7C, 0xC6, 0x66, 0x76, 0x66, 0x67, 0x73, 0x36, 0xE7, 0x71, 0x1E, 0xE7, 0x70, 0x0E, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E2(Ӣ) cyrillic capital letter i with macron
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x86, 0x63, 0x38, 0xC6, 0x63, 0x3E, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x31, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E3(ӣ) cyrillic small letter i with macron
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x78, 0x86, 0x67, 0x7C, 0xC6, 0x66, 0x76, 0x66, 0x67, 0x73, 0x36, 0xE7, 0x71, 0x1E, 0xE7, 0x70, 0x0E, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E4(Ӥ) cyrillic capital letter i with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0x60, 0x30, 0x86, 0x63, 0x38, 0xC6, 0x63, 0x3E, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x31, 0x0E, 0xE3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E5(ӥ) cyrillic small letter i with diaeresis
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E6(Ӧ) cyrillic capital letter o with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E7(ӧ) cyrillic small letter o with diaeresis
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x67, 0x60, 0x06, 0x76, 0x60, 0xFF, 0x77, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E8(Ө) cyrillic capital letter barred o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04E9(ө) cyrillic small letter barred o
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE6, 0x70, 0x0C, 0xC3, 0x31, 0x98, 0x83, 0x19, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04EE(Ӯ) cyrillic capital letter u with macron
            new byte[] { 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //04EF(ӯ) cyrillic small letter u with macron
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE6, 0x70, 0x0C, 0xC3, 0x31, 0x98, 0x83, 0x19, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F0(Ӱ) cyrillic capital letter u with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //04F1(ӱ) cyrillic small letter u with diaeresis
            new byte[] { 0x00, 0x70, 0xE0, 0x06, 0xE6, 0x70, 0x0C, 0xC3, 0x31, 0x98, 0x83, 0x19, 0xF0, 0x01, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x00, 0x06, 0x70, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F2(Ӳ) cyrillic capital letter u with double acute
            new byte[] { 0x20, 0x03, 0x3F, 0xB0, 0x81, 0x0D, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //04F3(ӳ) cyrillic small letter u with double acute
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x0E, 0x87, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F4(Ӵ) cyrillic capital letter che with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0x01, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F5(ӵ) cyrillic small letter che with diaeresis
            new byte[] { 0x00, 0x70, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x60, 0x07, 0xF6, 0x63, 0x67, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0x67, 0xF6, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F8(Ӹ) cyrillic capital letter yeru with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x70, 0x60, 0x07, 0x76, 0x60, 0x07, 0xF6, 0x63, 0x67, 0x76, 0x6C, 0xC7, 0x76, 0x6C, 0xE7, 0xF6, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //04F9(ӹ) cyrillic small letter yeru with diaeresis
            new byte[] { 0x60, 0xE0, 0x1F, 0x66, 0x63, 0x76, 0x66, 0x66, 0x66, 0x66, 0x67, 0x36, 0xFE, 0x60, 0x36, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xE3, 0x1F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00}, //0E3F(฿) thai currency symbol baht
            new byte[] { 0x00, 0x30, 0xC0, 0x03, 0x3E, 0x60, 0x03, 0x36, 0x67, 0x73, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xDE, 0xE6, 0x79, 0x9E, 0xE7, 0x79, 0x9E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E80(Ẁ) latin capital letter w with grave
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x30, 0xC6, 0x73, 0x3C, 0x67, 0xF3, 0x26, 0x6D, 0xD6, 0xE6, 0x69, 0x9E, 0xE7, 0x39, 0x9E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E81(ẁ) latin small letter w with grave
            new byte[] { 0x00, 0x30, 0xC0, 0x03, 0x3E, 0x60, 0x03, 0x36, 0x67, 0x73, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xDE, 0xE6, 0x79, 0x9E, 0xE7, 0x79, 0x9E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E82(Ẃ) latin capital letter w with acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0x30, 0xC6, 0x73, 0x3C, 0x67, 0xF3, 0x26, 0x6D, 0xD6, 0xE6, 0x69, 0x9E, 0xE7, 0x39, 0x9E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E83(ẃ) latin small letter w with acute
            new byte[] { 0x00, 0x30, 0xC0, 0x03, 0x3E, 0x60, 0x03, 0x36, 0x67, 0x73, 0x66, 0x6F, 0xF6, 0x66, 0x6F, 0xDE, 0xE6, 0x79, 0x9E, 0xE7, 0x79, 0x9E, 0xE7, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E84(Ẅ) latin capital letter w with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xD8, 0x01, 0x00, 0x00, 0x30, 0xC6, 0x73, 0x3C, 0x67, 0xF3, 0x26, 0x6D, 0xD6, 0xE6, 0x69, 0x9E, 0xE7, 0x39, 0x9E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E85(ẅ) latin small letter w with diaeresis
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x67, 0x30, 0x86, 0x63, 0x1C, 0xE6, 0x60, 0x1E, 0x06, 0x66, 0xE0, 0x06, 0x6C, 0xC0, 0x06, 0x6C, 0xE0, 0x3E, 0x66, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E9E(ẞ) latin capital letter sharp s
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EA0(Ạ) latin capital letter a with dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EA1(ạ) latin small letter a with dot below
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA2(Ả) latin capital letter a with hook above
            new byte[] { 0x78, 0x00, 0x0C, 0x60, 0x00, 0x06, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA3(ả) latin small letter a with hook above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA4(Ấ) latin capital letter a with circumflex and acute
            new byte[] { 0xF0, 0x81, 0x0F, 0xDC, 0xC0, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA5(ấ) latin small letter a with circumflex and acute
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA6(Ầ) latin capital letter a with circumflex and grave
            new byte[] { 0x7C, 0x80, 0x0F, 0xDC, 0xC0, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA7(ầ) latin small letter a with circumflex and grave
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA8(Ẩ) latin capital letter a with circumflex and hook above
            new byte[] { 0xF0, 0x81, 0x0F, 0xDC, 0xC0, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EA9(ẩ) latin small letter a with circumflex and hook above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EAA(Ẫ) latin capital letter a with circumflex and tilde
            new byte[] { 0x00, 0x00, 0x07, 0xD8, 0xC0, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EAB(ẫ) latin small letter a with circumflex and tilde
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EAC(Ậ) latin capital letter a with circumflex and dot below
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EAD(ậ) latin small letter a with circumflex and dot below
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EAE(Ắ) latin capital letter a with breve and acute
            new byte[] { 0xBC, 0xC1, 0x18, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EAF(ắ) latin small letter a with breve and acute
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB0(Ằ) latin capital letter a with breve and grave
            new byte[] { 0xEC, 0xC1, 0x18, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB1(ằ) latin small letter a with breve and grave
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB2(Ẳ) latin capital letter a with breve and hook above
            new byte[] { 0xBC, 0xC1, 0x18, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB3(ẳ) latin small letter a with breve and hook above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB4(Ẵ) latin capital letter a with breve and tilde
            new byte[] { 0x8C, 0xC1, 0x18, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EB5(ẵ) latin small letter a with breve and tilde
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC1, 0x30, 0xFC, 0x63, 0x30, 0x06, 0x67, 0x60, 0x07, 0x36, 0xE0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EB6(Ặ) latin capital letter a with breve and dot below
            new byte[] { 0x8C, 0xC1, 0x1D, 0xF8, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8E, 0x01, 0x38, 0x00, 0x03, 0x30, 0xFC, 0xE3, 0x30, 0x06, 0x63, 0x30, 0x86, 0xC3, 0x77, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EB7(ặ) latin small letter a with breve and dot below
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00}, //1EB8(Ẹ) latin capital letter e with dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00}, //1EB9(ẹ) latin small letter e with dot below
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBA(Ẻ) latin capital letter e with hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBB(ẻ) latin small letter e with hook above
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBC(Ẽ) latin capital letter e with tilde
            new byte[] { 0x00, 0x80, 0x13, 0xCC, 0x01, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBD(ẽ) latin small letter e with tilde
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBE(Ế) latin capital letter e with circumflex and acute
            new byte[] { 0xF0, 0x03, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EBF(ế) latin small letter e with circumflex and acute
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC0(Ề) latin capital letter e with circumflex and grave
            new byte[] { 0xFC, 0x00, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC1(ề) latin small letter e with circumflex and grave
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC2(Ể) latin capital letter e with circumflex and hook above
            new byte[] { 0xF0, 0x03, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC3(ể) latin small letter e with circumflex and hook above
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC4(Ễ) latin capital letter e with circumflex and tilde
            new byte[] { 0x00, 0x00, 0x0F, 0xD8, 0xC1, 0x18, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC5(ễ) latin small letter e with circumflex and tilde
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0x63, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00}, //1EC6(Ệ) latin capital letter e with circumflex and dot below
            new byte[] { 0xF0, 0x00, 0x0F, 0x98, 0xC1, 0x30, 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0xFE, 0x67, 0x00, 0x06, 0x60, 0x20, 0x0C, 0x87, 0x1F, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00}, //1EC7(ệ) latin small letter e with circumflex and dot below
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC8(Ỉ) latin capital letter i with hook above
            new byte[] { 0xF0, 0x01, 0x18, 0xC0, 0x00, 0x0C, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EC9(ỉ) latin small letter i with hook above
            new byte[] { 0x00, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1ECA(Ị) latin capital letter i with dot below
            new byte[] { 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0xE0, 0x7F, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00}, //1ECB(ị) latin small letter i with dot below
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1ECC(Ọ) latin capital letter o with dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1ECD(ọ) latin small letter o with dot below
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ECE(Ỏ) latin capital letter o with hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ECF(ỏ) latin small letter o with hook above
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED0(Ố) latin capital letter o with circumflex and acute
            new byte[] { 0xF0, 0x83, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED1(ố) latin small letter o with circumflex and acute
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED2(Ồ) latin capital letter o with circumflex and grave
            new byte[] { 0x7C, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED3(ồ) latin small letter o with circumflex and grave
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED4(Ổ) latin capital letter o with circumflex and hook above
            new byte[] { 0xF0, 0x83, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED5(ổ) latin small letter o with circumflex and hook above
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED6(Ỗ) latin capital letter o with circumflex and tilde
            new byte[] { 0x00, 0x00, 0x0F, 0xD8, 0xC1, 0x18, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1ED7(ỗ) latin small letter o with circumflex and tilde
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1ED8(Ộ) latin capital letter o with circumflex and dot below
            new byte[] { 0x70, 0x80, 0x0F, 0x98, 0xC1, 0x10, 0x00, 0x80, 0x0F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1ED9(ộ) latin small letter o with circumflex and dot below
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDA(Ớ) latin capital letter o with horn and acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x66, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDB(ớ) latin small letter o with horn and acute
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDC(Ờ) latin capital letter o with horn and grave
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x66, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDD(ờ) latin small letter o with horn and grave
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDE(Ở) latin capital letter o with horn and hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x66, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EDF(ở) latin small letter o with horn and hook above
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE0(Ỡ) latin capital letter o with horn and tilde
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0x60, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE1(ỡ) latin small letter o with horn and tilde
            new byte[] { 0x00, 0x86, 0x7F, 0x8C, 0xE3, 0x30, 0x06, 0x66, 0x60, 0x06, 0x76, 0x60, 0x07, 0x76, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE6, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EE2(Ợ) latin capital letter o with horn and dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x86, 0x7F, 0x8C, 0x63, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EE3(ợ) latin small letter o with horn and dot below
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EE4(Ụ) latin capital letter u with dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EE5(ụ) latin small letter u with dot below
            new byte[] { 0x00, 0x60, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE6(Ủ) latin capital letter u with hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xE0, 0x00, 0x06, 0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE7(ủ) latin small letter u with hook above
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE8(Ứ) latin capital letter u with horn and acute
            new byte[] { 0xC0, 0x00, 0x0C, 0x60, 0x00, 0xC2, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EE9(ứ) latin small letter u with horn and acute
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EEA(Ừ) latin capital letter u with horn and grave
            new byte[] { 0x18, 0x80, 0x03, 0x30, 0x00, 0xC6, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EEB(ừ) latin small letter u with horn and grave
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EEC(Ử) latin capital letter u with horn and hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xE0, 0x00, 0xC6, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EED(ử) latin small letter u with horn and hook above
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EEE(Ữ) latin capital letter u with horn and tilde
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0xC0, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EEF(ữ) latin small letter u with horn and tilde
            new byte[] { 0x00, 0x6C, 0xF0, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EF0(Ự) latin capital letter u with horn and dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x6C, 0xF0, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EF1(ự) latin small letter u with horn and dot below
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EF2(Ỳ) latin capital letter y with grave
            new byte[] { 0x30, 0x80, 0x03, 0x70, 0x00, 0x06, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //1EF3(ỳ) latin small letter y with grave
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00}, //1EF4(Ỵ) latin capital letter y with dot below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x73, 0x30, 0xE7, 0x01}, //1EF5(ỵ) latin small letter y with dot below
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EF6(Ỷ) latin capital letter y with hook above
            new byte[] { 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x06, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //1EF7(ỷ) latin small letter y with hook above
            new byte[] { 0x00, 0x30, 0xE0, 0x07, 0xE6, 0x70, 0x0C, 0xC3, 0x19, 0xD8, 0x81, 0x0F, 0xF0, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EF8(Ỹ) latin capital letter y with tilde
            new byte[] { 0x00, 0x80, 0x13, 0xEC, 0x01, 0x00, 0x00, 0x70, 0x60, 0x06, 0xE7, 0x30, 0x0C, 0xC3, 0x18, 0x98, 0x81, 0x1D, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x06, 0x70, 0x00, 0x03, 0x30, 0xE0, 0x01}, //1EF9(ỹ) latin small letter y with tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2013(–) en dash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2014(—) em dash
            new byte[] { 0xC0, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2018(‘) left single quotation mark
            new byte[] { 0xE0, 0x00, 0x0E, 0x60, 0x00, 0x07, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2019(’) right single quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00}, //201A(‚) single low-9 quotation mark
            new byte[] { 0x18, 0x83, 0x31, 0x9C, 0xC3, 0x39, 0x8C, 0xE1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201C(“) left double quotation mark
            new byte[] { 0x38, 0xC7, 0x39, 0x9C, 0xC3, 0x18, 0x8C, 0xC1, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201D(”) right double quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x73, 0x9C, 0xC3, 0x39, 0x9C, 0xC3, 0x18, 0x8C, 0x01, 0x00}, //201E(„) double low-9 quotation mark
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2020(†) dagger
            new byte[] { 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x7F, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06}, //2021(‡) double dagger
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x81, 0x1F, 0xF8, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2022(•) bullet
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x77, 0x77, 0x77, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2026(…) horizontal ellipsis
            new byte[] { 0x00, 0xF0, 0x01, 0x1B, 0x10, 0x03, 0x31, 0xB0, 0x41, 0x9F, 0x07, 0x0F, 0x1C, 0x60, 0x00, 0xF8, 0xC7, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x8C, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2030(‰) per mille sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0E, 0x70, 0x80, 0x03, 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2039(‹) single left-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x03, 0x60, 0x00, 0x1C, 0x80, 0x01, 0x1C, 0x60, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203A(›) single right-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0xC0, 0x00, 0x06, 0x60, 0x00, 0x03, 0x18, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x18, 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2044(⁄) fraction slash
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0x81, 0x18, 0x88, 0x81, 0x1F, 0x88, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2070(⁰) superscript zero
            new byte[] { 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x0F, 0xD8, 0x80, 0x0C, 0xFC, 0x01, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2074(⁴) superscript four
            new byte[] { 0x00, 0x80, 0x0F, 0x18, 0x80, 0x01, 0xF8, 0x80, 0x19, 0x80, 0x81, 0x19, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2075(⁵) superscript five
            new byte[] { 0x00, 0x00, 0x0E, 0x30, 0x80, 0x01, 0xF8, 0x80, 0x19, 0x98, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2076(⁶) superscript six
            new byte[] { 0x00, 0x80, 0x1F, 0x88, 0x01, 0x0C, 0xC0, 0x00, 0x04, 0x60, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2077(⁷) superscript seven
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0x81, 0x19, 0x70, 0x80, 0x19, 0x88, 0x81, 0x19, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2078(⁸) superscript eight
            new byte[] { 0x00, 0x00, 0x0F, 0x98, 0x81, 0x18, 0x98, 0x81, 0x1F, 0xC0, 0x00, 0x0C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2079(⁹) superscript nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x88, 0x81, 0x18, 0xF8, 0x81, 0x18, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2080(₀) subscript zero
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xC0, 0x07, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2081(₁) subscript one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x03, 0x18, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2082(₂) subscript two
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x80, 0x01, 0x0F, 0x80, 0x00, 0x18, 0x88, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2083(₃) subscript three
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xF0, 0x80, 0x0D, 0xC8, 0xC0, 0x1F, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2084(₄) subscript four
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x80, 0x01, 0x18, 0x80, 0x0F, 0x98, 0x01, 0x18, 0x98, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2085(₅) subscript five
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x03, 0x18, 0x80, 0x0F, 0x98, 0x81, 0x19, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2086(₆) subscript six
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x81, 0x18, 0xC0, 0x00, 0x0C, 0x40, 0x00, 0x06, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2087(₇) subscript seven
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x98, 0x01, 0x07, 0x98, 0x81, 0x18, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2088(₈) subscript eight
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x80, 0x19, 0x88, 0x81, 0x19, 0xF8, 0x01, 0x0C, 0xC0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2089(₉) subscript nine
            new byte[] { 0xA0, 0x01, 0x1F, 0xBC, 0xC3, 0x7B, 0xB6, 0x60, 0x0B, 0xB6, 0x60, 0x0F, 0xF6, 0x60, 0x0D, 0xDE, 0xE0, 0x0D, 0xDE, 0xC0, 0x6D, 0xDC, 0x83, 0x1F, 0x78, 0x80, 0x07, 0x00, 0x00, 0x00}, //20A1(₡) colon sign
            new byte[] { 0x00, 0x00, 0x3F, 0x1C, 0xC7, 0x60, 0x0E, 0xE0, 0x00, 0x0E, 0xF0, 0x0F, 0x0C, 0xC0, 0x01, 0xFF, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A4(₤) lira sign
            new byte[] { 0x00, 0xE0, 0x30, 0x1E, 0xE3, 0x31, 0x1E, 0x63, 0x33, 0x36, 0x73, 0xFF, 0x66, 0x63, 0x36, 0x7F, 0x6F, 0x3C, 0xC6, 0x63, 0x3C, 0x86, 0x63, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A6(₦) naira sign
            new byte[] { 0x00, 0xF0, 0x03, 0x73, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x3F, 0x1F, 0xBF, 0xB1, 0x39, 0x33, 0x33, 0x63, 0x73, 0x3C, 0xC6, 0xE3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A8(₨) rupee sign
            new byte[] { 0x00, 0x60, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xF6, 0xFF, 0xF6, 0x66, 0x6F, 0xDF, 0xEE, 0x3D, 0x9E, 0xE3, 0x39, 0x9E, 0xE3, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20A9(₩) won sign
            new byte[] { 0x00, 0xF0, 0x67, 0xE7, 0x76, 0x6C, 0xDF, 0xF6, 0x6D, 0xDF, 0xF6, 0x6D, 0xDF, 0xF6, 0x6D, 0xDF, 0xF6, 0x6D, 0xDF, 0xF6, 0x61, 0x1F, 0xF3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AA(₪) new sheqel sign
            new byte[] { 0x00, 0x03, 0x7E, 0x00, 0x03, 0x30, 0x78, 0xC3, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0xC3, 0x38, 0xF8, 0x03, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AB(₫) dong sign
            new byte[] { 0x00, 0x00, 0x1F, 0x1C, 0xC3, 0x60, 0x06, 0x60, 0x00, 0xFE, 0x60, 0x00, 0x06, 0xE0, 0x0F, 0x06, 0x60, 0x00, 0x0E, 0xC0, 0x60, 0x1C, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AC(€) euro sign
            new byte[] { 0x00, 0xE0, 0x70, 0x0E, 0xE3, 0x38, 0xCE, 0xE1, 0x0C, 0xEE, 0xE0, 0x06, 0xFF, 0xE7, 0x06, 0xEE, 0xE0, 0x1C, 0x8E, 0xE1, 0x38, 0x0E, 0xE7, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AD(₭) kip sign
            new byte[] { 0x00, 0xF0, 0xFF, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x03, 0x1E, 0x78, 0xC0, 0x36, 0xE0, 0x81, 0x07, 0x6C, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AE(₮) tugrik sign
            new byte[] { 0x00, 0xE0, 0x1F, 0x06, 0x63, 0x30, 0xFF, 0x6F, 0x70, 0x06, 0xF7, 0xFF, 0x06, 0x63, 0x30, 0xFE, 0x61, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20B1(₱) peso sign
            new byte[] { 0xC0, 0x80, 0x1F, 0xCC, 0xE3, 0x7C, 0x46, 0x60, 0x06, 0x66, 0x70, 0x06, 0x67, 0x70, 0x7E, 0x26, 0x66, 0x63, 0x36, 0xE7, 0x33, 0xBC, 0x83, 0x0F, 0x18, 0x80, 0x01, 0x00, 0x00, 0x00}, //20B2(₲) guarani sign
            new byte[] { 0x00, 0x80, 0x0F, 0x8E, 0x01, 0x30, 0x00, 0x03, 0x30, 0xFF, 0x0F, 0x0E, 0x30, 0xF0, 0xFF, 0x0C, 0xE0, 0x00, 0x0E, 0xC0, 0x20, 0x9C, 0x87, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20B4(₴) hryvnia sign
            new byte[] { 0xC0, 0x00, 0x1F, 0xDC, 0xC3, 0x6C, 0xC6, 0x60, 0x04, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x02, 0x36, 0xC0, 0x63, 0x3C, 0x03, 0x1F, 0x10, 0x80, 0x01, 0x00, 0x00, 0x00}, //20B5(₵) cedi sign
            new byte[] { 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20B8(₸) tenge sign
            new byte[] { 0x00, 0xF0, 0x7F, 0xC0, 0x00, 0x1C, 0xFF, 0x07, 0x18, 0xC0, 0x01, 0x0C, 0x7F, 0x80, 0x03, 0x70, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x80, 0x01, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20B9(₹) indian rupee sign
            new byte[] { 0x00, 0x80, 0x01, 0x18, 0x80, 0x01, 0x98, 0x81, 0x07, 0x1C, 0xF0, 0x19, 0x78, 0xC0, 0x01, 0x1F, 0x86, 0x61, 0x18, 0x86, 0x71, 0x98, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20BA(₺) turkish lira sign
            new byte[] { 0x00, 0xC0, 0x1F, 0x0C, 0xC7, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xC6, 0x60, 0x0C, 0xF7, 0x1F, 0x0C, 0xC0, 0x00, 0xFF, 0xC1, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20BD(₽) ruble sign
            new byte[] { 0xD8, 0xE0, 0x0F, 0x86, 0x63, 0x30, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0xFE, 0x61, 0x30, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0xE3, 0x1F, 0xD8, 0x80, 0x0D, 0x00, 0x00, 0x00}, //20BF(₿) bitcoin sign
            new byte[] { 0xF0, 0x80, 0x19, 0x98, 0x81, 0x19, 0x98, 0x81, 0x19, 0xD8, 0x80, 0x0D, 0x78, 0x80, 0x03, 0x1C, 0xE0, 0x01, 0x1E, 0x80, 0x31, 0x98, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2113(ℓ) script small l
            new byte[] { 0x00, 0x70, 0x76, 0xEF, 0xFD, 0xDE, 0xEF, 0xFD, 0xDE, 0xEF, 0xFD, 0xDE, 0x7F, 0xF7, 0x07, 0xFB, 0xBF, 0x07, 0x7B, 0xB0, 0x07, 0x7B, 0x30, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2116(№) numero sign
            new byte[] { 0x00, 0xF0, 0x67, 0xE6, 0x66, 0x7E, 0xE6, 0x67, 0x46, 0x66, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2122(™) trade mark sign
            new byte[] { 0x00, 0x80, 0x0F, 0x8C, 0xE3, 0x30, 0x06, 0x67, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x67, 0x70, 0x0E, 0xC3, 0x39, 0xD8, 0xF1, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2126(Ω) ohm sign
            new byte[] { 0x00, 0x80, 0x0F, 0x0C, 0x63, 0x60, 0x06, 0x76, 0x60, 0x07, 0xFE, 0xFF, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x06, 0x64, 0x60, 0x0C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //212E(℮) estimated symbol
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0xFC, 0xD8, 0xCC, 0x60, 0x0C, 0x66, 0x30, 0x03, 0x33, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2150(⅐) vulgar fraction one seventh
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xCC, 0xCC, 0x6C, 0xF8, 0x03, 0x36, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2151(⅑) vulgar fraction one ninth
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0x40, 0x0C, 0x63, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2153(⅓) vulgar fraction one third
            new byte[] { 0x00, 0xE0, 0xC1, 0x1B, 0x86, 0x61, 0x18, 0xC3, 0x18, 0x83, 0xF1, 0x03, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0x40, 0x0C, 0x63, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2154(⅔) vulgar fraction two thirds
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0xF8, 0x98, 0xC0, 0x7C, 0x8C, 0x6C, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2155(⅕) vulgar fraction one fifth
            new byte[] { 0x00, 0xE0, 0xC1, 0x1B, 0x86, 0x61, 0x18, 0xC3, 0x18, 0x83, 0xF1, 0x03, 0x00, 0x00, 0xF8, 0x98, 0xC0, 0x7C, 0x8C, 0x6C, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2156(⅖) vulgar fraction two fifths
            new byte[] { 0x00, 0xE0, 0xC1, 0x1B, 0x86, 0x61, 0x0E, 0x83, 0x19, 0x9B, 0xF1, 0x01, 0x00, 0x00, 0xF8, 0x98, 0xC0, 0x7C, 0x8C, 0x6C, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2157(⅗) vulgar fraction three fifths
            new byte[] { 0x00, 0xC0, 0xC1, 0x1C, 0xE6, 0x61, 0x1B, 0x93, 0x19, 0xBF, 0x81, 0x01, 0x00, 0x00, 0xF8, 0x98, 0xC0, 0x7C, 0x8C, 0x6C, 0xC0, 0xC3, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2158(⅘) vulgar fraction four fifths
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x70, 0x98, 0xC1, 0x7C, 0xCC, 0x6C, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2159(⅙) vulgar fraction one sixth
            new byte[] { 0x00, 0xF0, 0xC1, 0x03, 0xF6, 0x61, 0x32, 0x03, 0x1B, 0x9B, 0xF1, 0x01, 0x00, 0x00, 0x70, 0x98, 0xC1, 0x7C, 0xCC, 0x6C, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215A(⅚) vulgar fraction five sixths
            new byte[] { 0x00, 0xE0, 0xC0, 0x0F, 0xC6, 0x60, 0x0C, 0xC3, 0x18, 0x8C, 0xF1, 0x03, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xCC, 0x8C, 0x67, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215B(⅛) vulgar fraction one eighth
            new byte[] { 0x00, 0xE0, 0xC1, 0x1B, 0x86, 0x61, 0x0E, 0x83, 0x19, 0x9B, 0xF1, 0x01, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xCC, 0x8C, 0x67, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215C(⅜) vulgar fraction three eighths
            new byte[] { 0x00, 0xF0, 0xC1, 0x03, 0xF6, 0x61, 0x32, 0x03, 0x1B, 0x9B, 0xF1, 0x01, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xCC, 0x8C, 0x67, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215D(⅝) vulgar fraction five eighths
            new byte[] { 0x00, 0xF0, 0xC3, 0x13, 0x86, 0x61, 0x08, 0xC3, 0x18, 0x8C, 0x61, 0x00, 0x00, 0x00, 0x78, 0xD8, 0xCC, 0xCC, 0x8C, 0x67, 0xCC, 0xC3, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215E(⅞) vulgar fraction seven eighths
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x0C, 0x60, 0x00, 0xFF, 0x6F, 0x00, 0x0C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2190(←) leftwards arrow
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0xFC, 0xE3, 0x36, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2191(↑) upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x1C, 0x80, 0x03, 0x70, 0xFF, 0x0F, 0x70, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2192(→) rightwards arrow
            new byte[] { 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x36, 0xFC, 0x83, 0x1F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2193(↓) downwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1D, 0x0E, 0x73, 0x60, 0xFF, 0x7F, 0x60, 0x0E, 0xC3, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2194(↔) left right arrow
            new byte[] { 0x00, 0x00, 0x06, 0xF0, 0x80, 0x1F, 0xFC, 0xE3, 0x36, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x36, 0xFC, 0x83, 0x1F, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2195(↕) up down arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x0F, 0xF0, 0x01, 0x3B, 0x30, 0x07, 0xE3, 0x00, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2196(↖) north west arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x78, 0xC0, 0x06, 0x66, 0x30, 0x86, 0x01, 0x0C, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2197(↗) north east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x06, 0x66, 0xC0, 0x06, 0x78, 0x00, 0x07, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2198(↘) south east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x70, 0x80, 0x03, 0x1C, 0xE3, 0x30, 0x07, 0x3B, 0xF0, 0x01, 0x0F, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2199(↙) south west arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0x60, 0x10, 0x8C, 0xC3, 0x0C, 0x6C, 0x60, 0xFF, 0x63, 0x00, 0x0C, 0x80, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21A9(↩) leftwards arrow with hook
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x70, 0x00, 0x83, 0x30, 0x1C, 0x83, 0x73, 0x70, 0xFE, 0x0F, 0x70, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21AA(↪) rightwards arrow with hook
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x01, 0x0E, 0xF0, 0x7F, 0x0E, 0xC6, 0x61, 0x38, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B0(↰) upwards arrow with tip leftwards
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x18, 0x00, 0xE3, 0x7F, 0x06, 0x63, 0x18, 0xC6, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B1(↱) upwards arrow with tip rightwards
            new byte[] { 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x38, 0xC6, 0x61, 0x0E, 0xF6, 0x7F, 0x0E, 0xC0, 0x01, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B2(↲) downwards arrow with tip leftwards
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xC6, 0x60, 0x18, 0x06, 0xE3, 0x7F, 0x00, 0x03, 0x18, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B3(↳) downwards arrow with tip rightwards
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x03, 0x63, 0x18, 0x8C, 0xC1, 0x18, 0x80, 0x01, 0x18, 0x90, 0x09, 0xDB, 0xE1, 0x07, 0x3C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B6(↶) anticlockwise top semicircle arrow
            new byte[] { 0x00, 0x00, 0x00, 0x7E, 0x70, 0x0E, 0xC3, 0x30, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0xD9, 0xB8, 0x0F, 0x7F, 0xE0, 0x03, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21B7(↷) clockwise top semicircle arrow
            new byte[] { 0x00, 0x00, 0xFE, 0xE0, 0x01, 0x3E, 0x6C, 0xE3, 0x66, 0x66, 0x36, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x66, 0x60, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21BA(↺) anticlockwise open circle arrow
            new byte[] { 0x00, 0xF0, 0x07, 0x78, 0xC0, 0x07, 0xEE, 0x63, 0x36, 0x63, 0x36, 0x60, 0x03, 0x3C, 0xC0, 0x03, 0x3C, 0xC0, 0x03, 0x66, 0x60, 0x0C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21BB(↻) clockwise open circle arrow
            new byte[] { 0x00, 0x00, 0x08, 0xC0, 0x01, 0x38, 0x00, 0xF7, 0xFF, 0x00, 0x07, 0x38, 0xF8, 0xC1, 0x0C, 0x06, 0xF0, 0xFF, 0x06, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21C4(⇄) rightwards arrow over leftwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x38, 0xC0, 0x00, 0x06, 0xF0, 0xFF, 0x06, 0xC0, 0x08, 0xD8, 0x01, 0x38, 0x00, 0xF7, 0xFF, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //21C6(⇆) leftwards arrow over rightwards arrow
            new byte[] { 0x00, 0xC0, 0x03, 0xE0, 0x00, 0x1C, 0x80, 0x81, 0x3F, 0x8C, 0x63, 0x70, 0x06, 0x66, 0x60, 0x06, 0x66, 0x60, 0x06, 0x66, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2202(∂) partial differential
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xD8, 0x80, 0x1D, 0x98, 0xC1, 0x19, 0x8C, 0xC3, 0x30, 0x0E, 0x63, 0x70, 0x06, 0x67, 0x60, 0x07, 0xF6, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2206(∆) increment
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //220F(∏) n-ary product
            new byte[] { 0x00, 0xE0, 0x7F, 0x06, 0xE0, 0x00, 0x1C, 0x80, 0x01, 0x38, 0x00, 0x07, 0x60, 0x00, 0x0E, 0xC0, 0x00, 0x0E, 0x60, 0x00, 0x07, 0x38, 0x80, 0x01, 0x1C, 0xE0, 0x00, 0x06, 0xE0, 0x7F}, //2211(∑) n-ary summation
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2212(−) minus sign
            new byte[] { 0x00, 0x00, 0xC0, 0x00, 0x06, 0x60, 0x00, 0xF6, 0x30, 0x0C, 0xC3, 0x30, 0x18, 0x83, 0x19, 0x98, 0x81, 0x19, 0xB0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221A(√) square root
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9E, 0x37, 0xCF, 0x63, 0x3C, 0xC6, 0x63, 0x3C, 0xCD, 0x8E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221E(∞) infinity
            new byte[] { 0xE0, 0x07, 0x06, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x30, 0xF0, 0x03}, //222B(∫) integral
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x76, 0x3E, 0x00, 0x00, 0x00, 0x3E, 0x76, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2248(≈) almost equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x80, 0xE1, 0x7F, 0x60, 0x00, 0x06, 0x30, 0xE0, 0x7F, 0x18, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2260(≠) not equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x3C, 0xF8, 0xE0, 0x01, 0x06, 0xE0, 0x01, 0xF8, 0x00, 0x3C, 0x00, 0x07, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2264(≤) less-than or equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC0, 0x03, 0xF0, 0x00, 0x3C, 0x00, 0x06, 0x3C, 0xF0, 0xC0, 0x03, 0x0E, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2265(≥) greater-than or equal to
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x80, 0x0D, 0x98, 0xC1, 0x38, 0x0E, 0x63, 0x60, 0x03, 0x6E, 0x60, 0x0E, 0xC3, 0x38, 0x98, 0x81, 0x0D, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25CA(◊) lozenge
            new byte[] { 0x00, 0x00, 0xC0, 0x00, 0x0C, 0x60, 0x00, 0x76, 0x70, 0x06, 0x63, 0x30, 0x8E, 0xC1, 0x18, 0xCC, 0xC1, 0x0D, 0xD8, 0x80, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2713(✓) check mark
            new byte[] { 0x00, 0x00, 0x00, 0x07, 0x66, 0x70, 0x0C, 0xC3, 0x19, 0xF8, 0x01, 0x0F, 0x60, 0x00, 0x0F, 0xF8, 0x80, 0x19, 0x8C, 0xE3, 0x30, 0x06, 0x36, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //274C(❌) cross mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x80, 0xED, 0xF8, 0x07, 0x3F, 0xE0, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B0E(⬎) rightwards arrow with tip downwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xE0, 0x01, 0x3F, 0xF8, 0x87, 0xED, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B0F(⬏) rightwards arrow with tip upwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x8F, 0x01, 0x18, 0x80, 0x01, 0x18, 0x30, 0x19, 0xFF, 0xC1, 0x07, 0x38, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B10(⬐) leftwards arrow with tip downwards
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x38, 0xC0, 0x07, 0xFE, 0x30, 0x19, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2B11(⬑) leftwards arrow with tip upwards
            new byte[] { 0xF0, 0x80, 0x18, 0xF8, 0x80, 0x1F, 0x98, 0x01, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x80, 0x0F, 0xFC, 0xE3, 0x7F, 0x0E, 0x07, 0x07, 0x00, 0xC0, 0x1D, 0x40, 0x80, 0x0F, 0x60, 0xC0, 0x19}, //EBE7() private use-ebe7
            new byte[] { 0x00, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //F6D7() private use-f6d7
            new byte[] { 0x01, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //F6D8() private use-f6d8
            new byte[] { 0x7C, 0xC7, 0x70, 0x0C, 0xC0, 0x00, 0x0C, 0xF0, 0x3F, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FB01(ﬁ) latin small ligature fi
            new byte[] { 0x7C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xF3, 0x37, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC3, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //FB02(ﬂ) latin small ligature fl
 
        };

        private static readonly Dictionary<int, ushort> characterMap = new Dictionary<int, ushort>
        {
            { 0x0020, 0 }, { 0x0021, 1 }, { 0x0022, 2 }, { 0x0023, 3 }, { 0x0024, 4 }, { 0x0025, 5 }, { 0x0026, 6 }, { 0x0027, 7 }, { 0x0028, 8 }, { 0x0029, 9 }, { 0x002A, 10 }, { 0x002B, 11 }, { 0x002C, 12 }, { 0x002D, 13 }, { 0x002E, 14 }, { 0x002F, 15 }, { 0x0030, 16 }, { 0x0031, 17 }, { 0x0032, 18 }, { 0x0033, 19 }, { 0x0034, 20 }, { 0x0035, 21 }, { 0x0036, 22 }, { 0x0037, 23 }, { 0x0038, 24 }, { 0x0039, 25 }, { 0x003A, 26 }, { 0x003B, 27 }, { 0x003C, 28 }, { 0x003D, 29 }, { 0x003E, 30 }, { 0x003F, 31 }, { 0x0040, 32 }, { 0x0041, 33 }, { 0x0042, 34 }, { 0x0043, 35 }, { 0x0044, 36 }, { 0x0045, 37 }, { 0x0046, 38 }, { 0x0047, 39 }, { 0x0048, 40 }, { 0x0049, 41 }, { 0x004A, 42 }, { 0x004B, 43 }, { 0x004C, 44 }, { 0x004D, 45 }, { 0x004E, 46 }, { 0x004F, 47 }, { 0x0050, 48 }, { 0x0051, 49 }, { 0x0052, 50 }, { 0x0053, 51 }, { 0x0054, 52 }, { 0x0055, 53 }, { 0x0056, 54 }, { 0x0057, 55 }, { 0x0058, 56 }, { 0x0059, 57 }, { 0x005A, 58 }, { 0x005B, 59 }, { 0x005C, 60 }, { 0x005D, 61 }, { 0x005E, 62 }, { 0x005F, 63 }, { 0x0060, 64 }, { 0x0061, 65 }, { 0x0062, 66 }, { 0x0063, 67 }, { 0x0064, 68 }, { 0x0065, 69 }, { 0x0066, 70 }, { 0x0067, 71 }, { 0x0068, 72 }, { 0x0069, 73 }, { 0x006A, 74 }, { 0x006B, 75 }, { 0x006C, 76 }, { 0x006D, 77 }, { 0x006E, 78 }, { 0x006F, 79 }, { 0x0070, 80 }, { 0x0071, 81 }, { 0x0072, 82 }, { 0x0073, 83 }, { 0x0074, 84 }, { 0x0075, 85 }, { 0x0076, 86 }, { 0x0077, 87 }, { 0x0078, 88 }, { 0x0079, 89 }, { 0x007A, 90 }, { 0x007B, 91 }, { 0x007C, 92 }, { 0x007D, 93 }, { 0x007E, 94 }, { 0x00A0, 95 }, { 0x00A1, 96 }, { 0x00A2, 97 }, { 0x00A3, 98 }, { 0x00A5, 99 }, { 0x00A6, 100 }, { 0x00A7, 101 }, { 0x00A8, 102 }, { 0x00A9, 103 }, { 0x00AA, 104 }, { 0x00AB, 105 }, { 0x00AC, 106 }, { 0x00AD, 107 }, { 0x00AE, 108 }, { 0x00AF, 109 }, { 0x00B0, 110 }, { 0x00B1, 111 }, { 0x00B2, 112 }, { 0x00B3, 113 }, { 0x00B4, 114 }, { 0x00B5, 115 }, { 0x00B6, 116 }, { 0x00B7, 117 }, { 0x00B8, 118 }, { 0x00B9, 119 }, { 0x00BA, 120 }, { 0x00BB, 121 }, { 0x00BC, 122 }, { 0x00BD, 123 }, { 0x00BE, 124 }, { 0x00BF, 125 }, { 0x00C0, 126 }, { 0x00C1, 127 }, { 0x00C2, 128 }, { 0x00C3, 129 }, { 0x00C4, 130 }, { 0x00C5, 131 }, { 0x00C6, 132 }, { 0x00C7, 133 }, { 0x00C8, 134 }, { 0x00C9, 135 }, { 0x00CA, 136 }, { 0x00CB, 137 }, { 0x00CC, 138 }, { 0x00CD, 139 }, { 0x00CE, 140 }, { 0x00CF, 141 }, { 0x00D0, 142 }, { 0x00D1, 143 }, { 0x00D2, 144 }, { 0x00D3, 145 }, { 0x00D4, 146 }, { 0x00D5, 147 }, { 0x00D6, 148 }, { 0x00D7, 149 }, { 0x00D8, 150 }, { 0x00D9, 151 }, { 0x00DA, 152 }, { 0x00DB, 153 }, { 0x00DC, 154 }, { 0x00DD, 155 }, { 0x00DE, 156 }, { 0x00DF, 157 }, { 0x00E0, 158 }, { 0x00E1, 159 }, { 0x00E2, 160 }, { 0x00E3, 161 }, { 0x00E4, 162 }, { 0x00E5, 163 }, { 0x00E6, 164 }, { 0x00E7, 165 }, { 0x00E8, 166 }, { 0x00E9, 167 }, { 0x00EA, 168 }, { 0x00EB, 169 }, { 0x00EC, 170 }, { 0x00ED, 171 }, { 0x00EE, 172 }, { 0x00EF, 173 }, { 0x00F0, 174 }, { 0x00F1, 175 }, { 0x00F2, 176 }, { 0x00F3, 177 }, { 0x00F4, 178 }, { 0x00F5, 179 }, { 0x00F6, 180 }, { 0x00F7, 181 }, { 0x00F8, 182 }, { 0x00F9, 183 }, { 0x00FA, 184 }, { 0x00FB, 185 }, { 0x00FC, 186 }, { 0x00FD, 187 }, { 0x00FE, 188 }, { 0x00FF, 189 }, { 0x0100, 190 }, { 0x0101, 191 }, { 0x0102, 192 }, { 0x0103, 193 }, { 0x0104, 194 }, { 0x0105, 195 }, { 0x0106, 196 }, { 0x0107, 197 }, { 0x0108, 198 }, { 0x0109, 199 }, { 0x010A, 200 }, { 0x010B, 201 }, { 0x010C, 202 }, { 0x010D, 203 }, { 0x010E, 204 }, { 0x010F, 205 }, { 0x0110, 206 }, { 0x0111, 207 }, { 0x0112, 208 }, { 0x0113, 209 }, { 0x0114, 210 }, { 0x0115, 211 }, { 0x0116, 212 }, { 0x0117, 213 }, { 0x0118, 214 }, { 0x0119, 215 }, { 0x011A, 216 }, { 0x011B, 217 }, { 0x011C, 218 }, { 0x011D, 219 }, { 0x011E, 220 }, { 0x011F, 221 }, { 0x0120, 222 }, { 0x0121, 223 }, { 0x0122, 224 }, { 0x0123, 225 }, { 0x0124, 226 }, { 0x0125, 227 }, { 0x0126, 228 }, { 0x0127, 229 }, { 0x0128, 230 }, { 0x0129, 231 }, { 0x012A, 232 }, { 0x012B, 233 }, { 0x012C, 234 }, { 0x012D, 235 }, { 0x012E, 236 }, { 0x012F, 237 }, { 0x0130, 238 }, { 0x0131, 239 }, { 0x0132, 240 }, { 0x0133, 241 }, { 0x0134, 242 }, { 0x0135, 243 }, { 0x0136, 244 }, { 0x0137, 245 }, { 0x0138, 246 }, { 0x0139, 247 }, { 0x013A, 248 }, { 0x013B, 249 }, { 0x013C, 250 }, { 0x013D, 251 }, { 0x013E, 252 }, { 0x013F, 253 }, { 0x0140, 254 }, { 0x0141, 255 }, { 0x0142, 256 }, { 0x0143, 257 }, { 0x0144, 258 }, { 0x0145, 259 }, { 0x0146, 260 }, { 0x0147, 261 }, { 0x0148, 262 }, { 0x0149, 263 }, { 0x014A, 264 }, { 0x014B, 265 }, { 0x014C, 266 }, { 0x014D, 267 }, { 0x014E, 268 }, { 0x014F, 269 }, { 0x0150, 270 }, { 0x0151, 271 }, { 0x0152, 272 }, { 0x0153, 273 }, { 0x0154, 274 }, { 0x0155, 275 }, { 0x0156, 276 }, { 0x0157, 277 }, { 0x0158, 278 }, { 0x0159, 279 }, { 0x015A, 280 }, { 0x015B, 281 }, { 0x015C, 282 }, { 0x015D, 283 }, { 0x015E, 284 }, { 0x015F, 285 }, { 0x0160, 286 }, { 0x0161, 287 }, { 0x0162, 288 }, { 0x0163, 289 }, { 0x0164, 290 }, { 0x0165, 291 }, { 0x0166, 292 }, { 0x0167, 293 }, { 0x0168, 294 }, { 0x0169, 295 }, { 0x016A, 296 }, { 0x016B, 297 }, { 0x016C, 298 }, { 0x016D, 299 }, { 0x016E, 300 }, { 0x016F, 301 }, { 0x0170, 302 }, { 0x0171, 303 }, { 0x0172, 304 }, { 0x0173, 305 }, { 0x0174, 306 }, { 0x0175, 307 }, { 0x0176, 308 }, { 0x0177, 309 }, { 0x0178, 310 }, { 0x0179, 311 }, { 0x017A, 312 }, { 0x017B, 313 }, { 0x017C, 314 }, { 0x017D, 315 }, { 0x017E, 316 }, { 0x018F, 317 }, { 0x0192, 318 }, { 0x01A0, 319 }, { 0x01A1, 320 }, { 0x01AF, 321 }, { 0x01B0, 322 }, { 0x01FA, 323 }, { 0x01FB, 324 }, { 0x01FC, 325 }, { 0x01FD, 326 }, { 0x01FE, 327 }, { 0x01FF, 328 }, { 0x0218, 329 }, { 0x0219, 330 }, { 0x021A, 331 }, { 0x021B, 332 }, { 0x0237, 333 }, { 0x0259, 334 }, { 0x02BB, 335 }, { 0x02BC, 336 }, { 0x02C6, 337 }, { 0x02C7, 338 }, { 0x02D8, 339 }, { 0x02D9, 340 }, { 0x02DA, 341 }, { 0x02DB, 342 }, { 0x02DC, 343 }, { 0x02DD, 344 }, { 0x0300, 345 }, { 0x0301, 346 }, { 0x0302, 347 }, { 0x0303, 348 }, { 0x0304, 349 }, { 0x0306, 350 }, { 0x0307, 351 }, { 0x0308, 352 }, { 0x0309, 353 }, { 0x030A, 354 }, { 0x030B, 355 }, { 0x030C, 356 }, { 0x0312, 357 }, { 0x0315, 358 }, { 0x031B, 359 }, { 0x0323, 360 }, { 0x0326, 361 }, { 0x0327, 362 }, { 0x0328, 363 }, { 0x03C0, 364 }, { 0x0400, 365 }, { 0x0401, 366 }, { 0x0402, 367 }, { 0x0403, 368 }, { 0x0404, 369 }, { 0x0405, 370 }, { 0x0406, 371 }, { 0x0407, 372 }, { 0x0408, 373 }, { 0x0409, 374 }, { 0x040A, 375 }, { 0x040B, 376 }, { 0x040C, 377 }, { 0x040D, 378 }, { 0x040E, 379 }, { 0x040F, 380 }, { 0x0410, 381 }, { 0x0411, 382 }, { 0x0412, 383 }, { 0x0413, 384 }, { 0x0414, 385 }, { 0x0415, 386 }, { 0x0416, 387 }, { 0x0417, 388 }, { 0x0418, 389 }, { 0x0419, 390 }, { 0x041A, 391 }, { 0x041B, 392 }, { 0x041C, 393 }, { 0x041D, 394 }, { 0x041E, 395 }, { 0x041F, 396 }, { 0x0420, 397 }, { 0x0421, 398 }, { 0x0422, 399 }, { 0x0423, 400 }, { 0x0424, 401 }, { 0x0425, 402 }, { 0x0426, 403 }, { 0x0427, 404 }, { 0x0428, 405 }, { 0x0429, 406 }, { 0x042A, 407 }, { 0x042B, 408 }, { 0x042C, 409 }, { 0x042D, 410 }, { 0x042E, 411 }, { 0x042F, 412 }, { 0x0430, 413 }, { 0x0431, 414 }, { 0x0432, 415 }, { 0x0433, 416 }, { 0x0434, 417 }, { 0x0435, 418 }, { 0x0436, 419 }, { 0x0437, 420 }, { 0x0438, 421 }, { 0x0439, 422 }, { 0x043A, 423 }, { 0x043B, 424 }, { 0x043C, 425 }, { 0x043D, 426 }, { 0x043E, 427 }, { 0x043F, 428 }, { 0x0440, 429 }, { 0x0441, 430 }, { 0x0442, 431 }, { 0x0443, 432 }, { 0x0444, 433 }, { 0x0445, 434 }, { 0x0446, 435 }, { 0x0447, 436 }, { 0x0448, 437 }, { 0x0449, 438 }, { 0x044A, 439 }, { 0x044B, 440 }, { 0x044C, 441 }, { 0x044D, 442 }, { 0x044E, 443 }, { 0x044F, 444 }, { 0x0450, 445 }, { 0x0451, 446 }, { 0x0452, 447 }, { 0x0453, 448 }, { 0x0454, 449 }, { 0x0455, 450 }, { 0x0456, 451 }, { 0x0457, 452 }, { 0x0458, 453 }, { 0x0459, 454 }, { 0x045A, 455 }, { 0x045B, 456 }, { 0x045C, 457 }, { 0x045D, 458 }, { 0x045E, 459 }, { 0x045F, 460 }, { 0x0472, 461 }, { 0x0473, 462 }, { 0x0490, 463 }, { 0x0491, 464 }, { 0x0492, 465 }, { 0x0493, 466 }, { 0x0494, 467 }, { 0x0495, 468 }, { 0x0496, 469 }, { 0x0497, 470 }, { 0x0498, 471 }, { 0x0499, 472 }, { 0x049A, 473 }, { 0x049B, 474 }, { 0x049C, 475 }, { 0x049D, 476 }, { 0x04A0, 477 }, { 0x04A1, 478 }, { 0x04A2, 479 }, { 0x04A3, 480 }, { 0x04A4, 481 }, { 0x04A5, 482 }, { 0x04AA, 483 }, { 0x04AB, 484 }, { 0x04AE, 485 }, { 0x04AF, 486 }, { 0x04B0, 487 }, { 0x04B1, 488 }, { 0x04B2, 489 }, { 0x04B3, 490 }, { 0x04B6, 491 }, { 0x04B7, 492 }, { 0x04B8, 493 }, { 0x04B9, 494 }, { 0x04BA, 495 }, { 0x04BB, 496 }, { 0x04C0, 497 }, { 0x04C1, 498 }, { 0x04C2, 499 }, { 0x04CF, 500 }, { 0x04D0, 501 }, { 0x04D1, 502 }, { 0x04D2, 503 }, { 0x04D3, 504 }, { 0x04D4, 505 }, { 0x04D5, 506 }, { 0x04D6, 507 }, { 0x04D7, 508 }, { 0x04D8, 509 }, { 0x04D9, 510 }, { 0x04DC, 511 }, { 0x04DD, 512 }, { 0x04DE, 513 }, { 0x04DF, 514 }, { 0x04E2, 515 }, { 0x04E3, 516 }, { 0x04E4, 517 }, { 0x04E5, 518 }, { 0x04E6, 519 }, { 0x04E7, 520 }, { 0x04E8, 521 }, { 0x04E9, 522 }, { 0x04EE, 523 }, { 0x04EF, 524 }, { 0x04F0, 525 }, { 0x04F1, 526 }, { 0x04F2, 527 }, { 0x04F3, 528 }, { 0x04F4, 529 }, { 0x04F5, 530 }, { 0x04F8, 531 }, { 0x04F9, 532 }, { 0x0E3F, 533 }, { 0x1E80, 534 }, { 0x1E81, 535 }, { 0x1E82, 536 }, { 0x1E83, 537 }, { 0x1E84, 538 }, { 0x1E85, 539 }, { 0x1E9E, 540 }, { 0x1EA0, 541 }, { 0x1EA1, 542 }, { 0x1EA2, 543 }, { 0x1EA3, 544 }, { 0x1EA4, 545 }, { 0x1EA5, 546 }, { 0x1EA6, 547 }, { 0x1EA7, 548 }, { 0x1EA8, 549 }, { 0x1EA9, 550 }, { 0x1EAA, 551 }, { 0x1EAB, 552 }, { 0x1EAC, 553 }, { 0x1EAD, 554 }, { 0x1EAE, 555 }, { 0x1EAF, 556 }, { 0x1EB0, 557 }, { 0x1EB1, 558 }, { 0x1EB2, 559 }, { 0x1EB3, 560 }, { 0x1EB4, 561 }, { 0x1EB5, 562 }, { 0x1EB6, 563 }, { 0x1EB7, 564 }, { 0x1EB8, 565 }, { 0x1EB9, 566 }, { 0x1EBA, 567 }, { 0x1EBB, 568 }, { 0x1EBC, 569 }, { 0x1EBD, 570 }, { 0x1EBE, 571 }, { 0x1EBF, 572 }, { 0x1EC0, 573 }, { 0x1EC1, 574 }, { 0x1EC2, 575 }, { 0x1EC3, 576 }, { 0x1EC4, 577 }, { 0x1EC5, 578 }, { 0x1EC6, 579 }, { 0x1EC7, 580 }, { 0x1EC8, 581 }, { 0x1EC9, 582 }, { 0x1ECA, 583 }, { 0x1ECB, 584 }, { 0x1ECC, 585 }, { 0x1ECD, 586 }, { 0x1ECE, 587 }, { 0x1ECF, 588 }, { 0x1ED0, 589 }, { 0x1ED1, 590 }, { 0x1ED2, 591 }, { 0x1ED3, 592 }, { 0x1ED4, 593 }, { 0x1ED5, 594 }, { 0x1ED6, 595 }, { 0x1ED7, 596 }, { 0x1ED8, 597 }, { 0x1ED9, 598 }, { 0x1EDA, 599 }, { 0x1EDB, 600 }, { 0x1EDC, 601 }, { 0x1EDD, 602 }, { 0x1EDE, 603 }, { 0x1EDF, 604 }, { 0x1EE0, 605 }, { 0x1EE1, 606 }, { 0x1EE2, 607 }, { 0x1EE3, 608 }, { 0x1EE4, 609 }, { 0x1EE5, 610 }, { 0x1EE6, 611 }, { 0x1EE7, 612 }, { 0x1EE8, 613 }, { 0x1EE9, 614 }, { 0x1EEA, 615 }, { 0x1EEB, 616 }, { 0x1EEC, 617 }, { 0x1EED, 618 }, { 0x1EEE, 619 }, { 0x1EEF, 620 }, { 0x1EF0, 621 }, { 0x1EF1, 622 }, { 0x1EF2, 623 }, { 0x1EF3, 624 }, { 0x1EF4, 625 }, { 0x1EF5, 626 }, { 0x1EF6, 627 }, { 0x1EF7, 628 }, { 0x1EF8, 629 }, { 0x1EF9, 630 }, { 0x2013, 631 }, { 0x2014, 632 }, { 0x2018, 633 }, { 0x2019, 634 }, { 0x201A, 635 }, { 0x201C, 636 }, { 0x201D, 637 }, { 0x201E, 638 }, { 0x2020, 639 }, { 0x2021, 640 }, { 0x2022, 641 }, { 0x2026, 642 }, { 0x2030, 643 }, { 0x2039, 644 }, { 0x203A, 645 }, { 0x2044, 646 }, { 0x2070, 647 }, { 0x2074, 648 }, { 0x2075, 649 }, { 0x2076, 650 }, { 0x2077, 651 }, { 0x2078, 652 }, { 0x2079, 653 }, { 0x2080, 654 }, { 0x2081, 655 }, { 0x2082, 656 }, { 0x2083, 657 }, { 0x2084, 658 }, { 0x2085, 659 }, { 0x2086, 660 }, { 0x2087, 661 }, { 0x2088, 662 }, { 0x2089, 663 }, { 0x20A1, 664 }, { 0x20A4, 665 }, { 0x20A6, 666 }, { 0x20A8, 667 }, { 0x20A9, 668 }, { 0x20AA, 669 }, { 0x20AB, 670 }, { 0x20AC, 671 }, { 0x20AD, 672 }, { 0x20AE, 673 }, { 0x20B1, 674 }, { 0x20B2, 675 }, { 0x20B4, 676 }, { 0x20B5, 677 }, { 0x20B8, 678 }, { 0x20B9, 679 }, { 0x20BA, 680 }, { 0x20BD, 681 }, { 0x20BF, 682 }, { 0x2113, 683 }, { 0x2116, 684 }, { 0x2122, 685 }, { 0x2126, 686 }, { 0x212E, 687 }, { 0x2150, 688 }, { 0x2151, 689 }, { 0x2153, 690 }, { 0x2154, 691 }, { 0x2155, 692 }, { 0x2156, 693 }, { 0x2157, 694 }, { 0x2158, 695 }, { 0x2159, 696 }, { 0x215A, 697 }, { 0x215B, 698 }, { 0x215C, 699 }, { 0x215D, 700 }, { 0x215E, 701 }, { 0x2190, 702 }, { 0x2191, 703 }, { 0x2192, 704 }, { 0x2193, 705 }, { 0x2194, 706 }, { 0x2195, 707 }, { 0x2196, 708 }, { 0x2197, 709 }, { 0x2198, 710 }, { 0x2199, 711 }, { 0x21A9, 712 }, { 0x21AA, 713 }, { 0x21B0, 714 }, { 0x21B1, 715 }, { 0x21B2, 716 }, { 0x21B3, 717 }, { 0x21B6, 718 }, { 0x21B7, 719 }, { 0x21BA, 720 }, { 0x21BB, 721 }, { 0x21C4, 722 }, { 0x21C6, 723 }, { 0x2202, 724 }, { 0x2206, 725 }, { 0x220F, 726 }, { 0x2211, 727 }, { 0x2212, 728 }, { 0x221A, 729 }, { 0x221E, 730 }, { 0x222B, 731 }, { 0x2248, 732 }, { 0x2260, 733 }, { 0x2264, 734 }, { 0x2265, 735 }, { 0x25CA, 736 }, { 0x2713, 737 }, { 0x274C, 738 }, { 0x2B0E, 739 }, { 0x2B0F, 740 }, { 0x2B10, 741 }, { 0x2B11, 742 }, { 0xEBE7, 743 }, { 0xF6D7, 744 }, { 0xF6D8, 745 }, { 0xFB01, 746 }, { 0xFB02, 747 }
        };

        /// <summary>
        ///     Get the binary representation of an ASCII character from the
        ///     font table.
        /// </summary>
        /// <param name="character">Character to look up.</param>
        /// <returns>
        ///     Byte array containing the rows of pixels in the character.  Unknown byte codes will result in a space being
        ///     returned.
        /// </returns>
        public byte[] this[char character]
        {
            get
            {
                var c = (int)character;
                if (characterMap.ContainsKey(c))
                    return _fontTable[characterMap[c]];
                else
                    return _fontTable[0];
            }
        }
    }
}