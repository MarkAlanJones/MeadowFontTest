using System.Collections.Generic;

namespace Meadow.Foundation.Graphics
{
    // !!! This code is generated by a tool (FontConverter) !!!
    // Based on Sometype Mono Copyright © 2018 Sometype Mono Project Authors (https://github.com/dharmatype/Sometype-Mono)
    // Using threshold of 40 at 2020-06-24T17:19:20.0827819-04:00
    public class SometypeMono12x20 : IFont
    {
        private const int WIDTH = 12;
        private const int HEIGHT = 20;

        public int Width { get { return WIDTH; } }
        public int Height { get { return HEIGHT; } }

        /// <summary>
        ///   Font table containing the binary representation of ASCII characters.
        /// </summary>
        private static readonly byte[][] _fontTable =
        {
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0020( ) space
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0021(!) exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0xDC, 0xC3, 0x19, 0x8C, 0xC1, 0x18, 0x8C, 0xC1, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0022(") quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x83, 0x3B, 0x98, 0x81, 0x19, 0xFF, 0x8F, 0x19, 0x98, 0xC1, 0x1D, 0xCC, 0xF0, 0x7F, 0xCC, 0xC0, 0x0C, 0xCC, 0xE0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0023(#) number sign
            new byte[] { 0x00, 0x00, 0x07, 0x60, 0x00, 0x0F, 0xFC, 0xE3, 0x36, 0x66, 0x60, 0x06, 0x6E, 0xC0, 0x0F, 0xF0, 0x03, 0x76, 0x60, 0x07, 0x76, 0x67, 0xE3, 0x1F, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00}, //0024($) dollar sign
            new byte[] { 0x00, 0x00, 0x00, 0x1E, 0xB4, 0xE3, 0x33, 0x37, 0x33, 0xB3, 0xB1, 0x0F, 0x1E, 0x00, 0x00, 0xD0, 0x87, 0x6D, 0x6C, 0x6E, 0xE6, 0xC3, 0x36, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0025(%) percent sign
            new byte[] { 0x00, 0x00, 0x00, 0x7C, 0xE0, 0x0C, 0xC6, 0x60, 0x1C, 0xC6, 0xE0, 0x0F, 0x3C, 0xE0, 0x63, 0x77, 0x33, 0x3E, 0xC3, 0x31, 0x1C, 0xE7, 0xE3, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0026(&) ampersand
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0027(') apostrophe
            new byte[] { 0x00, 0x00, 0x18, 0xE0, 0x01, 0x07, 0x38, 0x80, 0x01, 0x18, 0xC0, 0x01, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x01, 0x1C, 0x80, 0x01, 0x38, 0x00, 0x03, 0xE0, 0x00, 0x1C}, //0028(() left parenthesis
            new byte[] { 0x00, 0xC0, 0x00, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x0C, 0xC0, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x06, 0x30, 0xC0, 0x01}, //0029()) right parenthesis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x60, 0x76, 0xFF, 0x87, 0x0F, 0xF8, 0xE0, 0x7F, 0x67, 0x07, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002A(*) asterisk
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002B(+) plus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x38, 0x80, 0x01}, //002C(,) comma
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002D(-) hyphen-minus
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //002E(.) full stop
            new byte[] { 0x00, 0x00, 0x70, 0x00, 0x03, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0x60, 0x00, 0x07, 0x30, 0x80, 0x03, 0x18, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00}, //002F(/) solidus
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x18, 0x06, 0x63, 0x78, 0xC7, 0x77, 0x6C, 0x67, 0x76, 0x67, 0x3F, 0xF6, 0x71, 0x0E, 0x67, 0x30, 0x8C, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0030(0) digit zero
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x78, 0xC0, 0x07, 0x76, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0031(1) digit one
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x38, 0x00, 0x03, 0x30, 0x00, 0x07, 0x38, 0xF0, 0xC3, 0x1F, 0x3C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0032(2) digit two
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE0, 0x18, 0x80, 0x03, 0x30, 0x00, 0x03, 0x38, 0xC0, 0x81, 0x1F, 0x00, 0x03, 0x70, 0x00, 0x07, 0x30, 0xC0, 0xE1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0033(3) digit three
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x07, 0x30, 0x80, 0x03, 0x98, 0xC1, 0x19, 0x8C, 0xE1, 0x18, 0x86, 0x71, 0x18, 0xFF, 0x07, 0x18, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0034(4) digit four
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xC3, 0x00, 0x0C, 0xE0, 0x00, 0x0E, 0x60, 0x00, 0xFE, 0xE1, 0x38, 0x00, 0x03, 0x30, 0x00, 0x03, 0x38, 0xE0, 0xE1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0035(5) digit five
            new byte[] { 0x00, 0x00, 0x00, 0xE0, 0x83, 0x07, 0x1C, 0xE0, 0x00, 0x06, 0x60, 0x00, 0xFF, 0xF1, 0x38, 0x07, 0x67, 0x70, 0x06, 0xE7, 0x70, 0x8C, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0036(6) digit six
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x07, 0x70, 0x80, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0x80, 0x03, 0x18, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0037(7) digit seven
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x0E, 0xE3, 0x39, 0xF8, 0xE1, 0x3F, 0x86, 0x77, 0x70, 0x07, 0x76, 0x70, 0x8E, 0xC3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0038(8) digit eight
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x18, 0x86, 0x73, 0x30, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x78, 0xFC, 0x07, 0x30, 0x80, 0x03, 0x18, 0xE0, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0039(9) digit nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003A(:) colon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x38, 0x80, 0x01}, //003B(;) semicolon
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC0, 0x03, 0x0F, 0x38, 0xE0, 0x00, 0x0E, 0xC0, 0x01, 0x70, 0x00, 0x1E, 0x80, 0x03, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003C(<) less-than sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003D(=) equals sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE0, 0x00, 0x1C, 0x80, 0x07, 0xE0, 0x01, 0x38, 0x80, 0x03, 0x1C, 0xF0, 0xC0, 0x03, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003E(>) greater-than sign
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xF1, 0x38, 0x00, 0x03, 0x70, 0x00, 0x03, 0x3E, 0xF0, 0x80, 0x03, 0x38, 0x00, 0x00, 0x00, 0x80, 0x03, 0x78, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //003F(?) question mark
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x70, 0x06, 0x76, 0x60, 0xF3, 0xB7, 0x63, 0x1B, 0xB6, 0x61, 0x3B, 0x37, 0x7F, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0040(@) commercial at
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0041(A) latin capital letter a
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x63, 0x70, 0x06, 0x67, 0x30, 0x86, 0xE3, 0x1F, 0x06, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0042(B) latin capital letter b
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0043(C) latin capital letter c
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x60, 0x1C, 0x86, 0x63, 0x30, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x38, 0xC6, 0xE1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0044(D) latin capital letter d
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0045(E) latin capital letter e
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0046(F) latin capital letter f
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x7C, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x70, 0x1C, 0x87, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0047(G) latin capital letter g
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0048(H) latin capital letter h
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0049(I) latin capital letter i
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x38, 0xC7, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004A(J) latin capital letter j
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x0C, 0x66, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x60, 0x1C, 0x86, 0x61, 0x38, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004B(K) latin capital letter k
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004C(L) latin capital letter l
            new byte[] { 0x00, 0x00, 0x00, 0x0F, 0xF7, 0x78, 0x8F, 0xF7, 0x78, 0xDF, 0xF7, 0x7D, 0xDF, 0xF7, 0x7F, 0x77, 0x77, 0x77, 0x77, 0x77, 0x70, 0x07, 0x77, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004D(M) latin capital letter m
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004E(N) latin capital letter n
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //004F(O) latin capital letter o
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x61, 0x30, 0x06, 0x67, 0x60, 0x06, 0x66, 0x70, 0x06, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0050(P) latin capital letter p
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x76, 0x60, 0x03, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0xE7, 0x38, 0xFC, 0x83, 0x0F, 0x60, 0x00, 0x06, 0xE0, 0x00, 0xFC}, //0051(Q) latin capital letter q
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x86, 0xE3, 0x1F, 0xE6, 0x60, 0x0C, 0xC6, 0x61, 0x38, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0052(R) latin capital letter r
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0053(S) latin capital letter s
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0054(T) latin capital letter t
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0055(U) latin capital letter u
            new byte[] { 0x00, 0x00, 0x00, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x0E, 0xC3, 0x38, 0x8C, 0xC1, 0x19, 0xD8, 0x81, 0x0D, 0xF8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0056(V) latin capital letter v
            new byte[] { 0x00, 0x00, 0x00, 0x03, 0x3C, 0xE7, 0x73, 0x3E, 0x67, 0x73, 0x36, 0x6F, 0xFF, 0xF6, 0x7D, 0xDE, 0xE7, 0x3D, 0xDE, 0xE3, 0x39, 0x8E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0057(W) latin capital letter w
            new byte[] { 0x00, 0x00, 0x00, 0x07, 0xE7, 0x30, 0x8C, 0xC1, 0x1D, 0xD8, 0x00, 0x0F, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0D, 0xDC, 0xC1, 0x38, 0x8E, 0x73, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0058(X) latin capital letter x
            new byte[] { 0x00, 0x00, 0x00, 0x07, 0x66, 0x70, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0059(Y) latin capital letter y
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x07, 0x38, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005A(Z) latin capital letter z
            new byte[] { 0x00, 0xC0, 0x3F, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x01, 0x1C, 0xC0, 0x3F}, //005B([) left square bracket
            new byte[] { 0x00, 0x70, 0x00, 0x0E, 0xC0, 0x00, 0x1C, 0x80, 0x01, 0x38, 0x00, 0x03, 0x70, 0x00, 0x06, 0xE0, 0x00, 0x0C, 0xC0, 0x01, 0x18, 0x80, 0x03, 0x30, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00}, //005C(\) reverse solidus
            new byte[] { 0x00, 0xE0, 0x1F, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0xE1, 0x1F}, //005D(]) right square bracket
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0xF8, 0x80, 0x0D, 0x9C, 0xC1, 0x38, 0x06, 0x73, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //005E(^) circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00}, //005F(_) low line
            new byte[] { 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0060(`) grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0061(a) latin small letter a
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x30, 0x8E, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0062(b) latin small letter b
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0063(c) latin small letter c
            new byte[] { 0x00, 0x00, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0064(d) latin small letter d
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0065(e) latin small letter e
            new byte[] { 0x00, 0x00, 0xFE, 0x70, 0x04, 0x03, 0x30, 0x00, 0x03, 0xFE, 0x03, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0066(f) latin small letter f
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x0F}, //0067(g) latin small letter g
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0068(h) latin small letter h
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0069(i) latin small letter i
            new byte[] { 0x00, 0x00, 0x1C, 0xE0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xE3, 0xF0, 0x07}, //006A(j) latin small letter j
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x67, 0x38, 0xC6, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006B(k) latin small letter k
            new byte[] { 0x00, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006C(l) latin small letter l
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x73, 0x67, 0x73, 0x36, 0x67, 0x73, 0x36, 0x67, 0x73, 0x36, 0x67, 0x73, 0x36, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006D(m) latin small letter m
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006E(n) latin small letter n
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //006F(o) latin small letter o
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x30, 0x8E, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //0070(p) latin small letter p
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30}, //0071(q) latin small letter q
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xC3, 0x23, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0072(r) latin small letter r
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0073(s) latin small letter s
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x38, 0x80, 0x03, 0xFF, 0x83, 0x03, 0x38, 0x80, 0x03, 0x38, 0x80, 0x03, 0x38, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0074(t) latin small letter t
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0075(u) latin small letter u
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x38, 0x9C, 0xC1, 0x1D, 0xD8, 0x80, 0x0F, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0076(v) latin small letter v
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x3E, 0x67, 0x73, 0x76, 0x67, 0xF7, 0xE6, 0x7D, 0xDE, 0xE3, 0x3D, 0x9E, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0077(w) latin small letter w
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC7, 0x38, 0xDC, 0x81, 0x0F, 0x70, 0x00, 0x07, 0xF8, 0xC0, 0x1D, 0x8E, 0x73, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0078(x) latin small letter x
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x18, 0x9C, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0xF0, 0x01}, //0079(y) latin small letter y
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007A(z) latin small letter z
            new byte[] { 0x00, 0x00, 0x3C, 0x70, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x07, 0x30, 0x00, 0x03, 0x1E, 0x00, 0x03, 0x30, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x70, 0x00, 0x3C}, //007B({) left curly bracket
            new byte[] { 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07}, //007C(|) vertical line
            new byte[] { 0x00, 0xE0, 0x03, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0E, 0x80, 0x03, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x70, 0xE0, 0x03}, //007D(}) right curly bracket
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x66, 0x63, 0x67, 0x37, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //007E(~) tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A0( ) no-break space
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07}, //00A1(¡) inverted exclamation mark
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0xF8, 0xC1, 0x7F, 0x6E, 0x60, 0x06, 0x67, 0x70, 0x06, 0x66, 0xE0, 0x06, 0xFC, 0x87, 0x3F, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A2(¢) cent sign
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0xC7, 0x31, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x1C, 0xF0, 0x3F, 0x18, 0x80, 0x01, 0x18, 0xC0, 0x01, 0x0E, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A3(£) pound sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x70, 0x70, 0xFE, 0xC3, 0x19, 0x8C, 0xC3, 0x38, 0x8C, 0xC3, 0x19, 0xFE, 0x73, 0x70, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A4(¤) currency sign
            new byte[] { 0x00, 0x00, 0x00, 0x07, 0xE7, 0x30, 0x8E, 0xC3, 0x1D, 0xD8, 0x81, 0x0F, 0x70, 0xF0, 0x7F, 0x70, 0x00, 0x07, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A5(¥) yen sign
            new byte[] { 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07}, //00A6(¦) broken bar
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x30, 0x06, 0x60, 0x00, 0x3E, 0xC0, 0x3F, 0x8E, 0x63, 0x70, 0x07, 0xE7, 0x30, 0xFC, 0x01, 0x3E, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00}, //00A7(§) section sign
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A8(¨) diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8E, 0x73, 0x60, 0xFB, 0xB6, 0xE1, 0x0F, 0xDC, 0xC0, 0x0F, 0xBC, 0xE9, 0xFB, 0x76, 0x60, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00A9(©) copyright sign
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xC0, 0x18, 0x80, 0x01, 0x18, 0xFC, 0xC1, 0x18, 0x8C, 0xC1, 0x1F, 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AA(ª) feminine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x18, 0xC3, 0x18, 0xCE, 0xE1, 0x1C, 0x8C, 0x81, 0x31, 0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AB(«) left-pointing double angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AC(¬) not sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AD(­) soft hyphen
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8E, 0x73, 0x60, 0xFB, 0xB6, 0xED, 0xDB, 0x9D, 0xCF, 0xFB, 0xBC, 0xED, 0xDB, 0x77, 0x60, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AE(®) registered sign
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00AF(¯) macron
            new byte[] { 0x00, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x8C, 0xC1, 0x1D, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B0(°) degree sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B1(±) plus-minus sign
            new byte[] { 0xFC, 0xC0, 0x18, 0x80, 0x03, 0x38, 0xF0, 0xC1, 0x0F, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B2(²) superscript two
            new byte[] { 0xFE, 0x40, 0x18, 0x80, 0x01, 0x18, 0xF8, 0x01, 0x38, 0x80, 0x03, 0x38, 0xC0, 0xE1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B3(³) superscript three
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B4(´) acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xE3, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //00B5(µ) micro sign
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xE3, 0x37, 0x7F, 0xF3, 0x37, 0x7F, 0xF3, 0x37, 0x7E, 0x83, 0x37, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x36, 0x60, 0x03, 0x00, 0x00, 0x00, 0x00}, //00B6(¶) pilcrow sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B7(·) middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03, 0xF0, 0x00, 0x0C}, //00B8(¸) cedilla
            new byte[] { 0x60, 0x00, 0x07, 0x7C, 0xE0, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00B9(¹) superscript one
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x18, 0x8E, 0x63, 0x30, 0x06, 0xE3, 0x38, 0x8C, 0x81, 0x0F, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BA(º) masculine ordinal indicator
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0xC6, 0xC0, 0x19, 0xB8, 0x87, 0x73, 0x9C, 0xE3, 0x1C, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BB(») right-pointing double angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xC0, 0x0F, 0xE6, 0x70, 0x8E, 0xF3, 0x1F, 0x00, 0x00, 0x00, 0x10, 0x83, 0x3B, 0xDC, 0xE5, 0x6C, 0xE7, 0x3F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BC(¼) vulgar fraction one quarter
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xE0, 0x0F, 0xE7, 0x30, 0x8E, 0xF1, 0x0F, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xE1, 0x0C, 0x6F, 0x7C, 0xC7, 0x30, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BD(½) vulgar fraction one half
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x80, 0xE1, 0x1E, 0x86, 0x31, 0x98, 0xF1, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83, 0x39, 0xCC, 0xE5, 0x6C, 0xE7, 0x3F, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00BE(¾) vulgar fraction three quarters
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x80, 0x0F, 0x7E, 0xE0, 0x00, 0x06, 0x60, 0x00, 0x0E, 0xC7, 0x1F}, //00BF(¿) inverted question mark
            new byte[] { 0x60, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C0(À) latin capital letter a with grave
            new byte[] { 0x30, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C1(Á) latin capital letter a with acute
            new byte[] { 0xDC, 0x03, 0x10, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C2(Â) latin capital letter a with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C3(Ã) latin capital letter a with tilde
            new byte[] { 0xDC, 0x01, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C4(Ä) latin capital letter a with diaeresis
            new byte[] { 0xD8, 0x00, 0x07, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C5(Å) latin capital letter a with ring above
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x0F, 0xF8, 0x80, 0x0F, 0xF8, 0xC0, 0x0F, 0xEC, 0xC0, 0x7E, 0xEE, 0x60, 0x0E, 0xFF, 0x70, 0x0E, 0xE3, 0x30, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C6(Æ) latin capital letter ae
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x18}, //00C7(Ç) latin capital letter c with cedilla
            new byte[] { 0xC0, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C8(È) latin capital letter e with grave
            new byte[] { 0x30, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00C9(É) latin capital letter e with acute
            new byte[] { 0x9C, 0x03, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CA(Ê) latin capital letter e with circumflex
            new byte[] { 0x9C, 0x03, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CB(Ë) latin capital letter e with diaeresis
            new byte[] { 0x60, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CC(Ì) latin capital letter i with grave
            new byte[] { 0x30, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CD(Í) latin capital letter i with acute
            new byte[] { 0xDC, 0x03, 0x10, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CE(Î) latin capital letter i with circumflex
            new byte[] { 0xDC, 0x01, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00CF(Ï) latin capital letter i with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE0, 0x38, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xF6, 0x67, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x70, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D0(Ð) latin capital letter eth
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D1(Ñ) latin capital letter n with tilde
            new byte[] { 0x60, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D2(Ò) latin capital letter o with grave
            new byte[] { 0x30, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D3(Ó) latin capital letter o with acute
            new byte[] { 0xDC, 0x03, 0x10, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D4(Ô) latin capital letter o with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D5(Õ) latin capital letter o with tilde
            new byte[] { 0xDC, 0x01, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D6(Ö) latin capital letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xE3, 0x38, 0xDC, 0x81, 0x0F, 0x70, 0x80, 0x0F, 0xDC, 0xE1, 0x38, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D7(×) multiplication sign
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xCE, 0x78, 0x06, 0x63, 0x78, 0xC7, 0x77, 0x6C, 0x67, 0x76, 0x67, 0x3F, 0xF6, 0x71, 0x0E, 0xE7, 0x30, 0x8E, 0xB3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D8(Ø) latin capital letter o with stroke
            new byte[] { 0x60, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00D9(Ù) latin capital letter u with grave
            new byte[] { 0x30, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DA(Ú) latin capital letter u with acute
            new byte[] { 0xDC, 0x03, 0x10, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DB(Û) latin capital letter u with circumflex
            new byte[] { 0xDC, 0x01, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DC(Ü) latin capital letter u with diaeresis
            new byte[] { 0x30, 0x00, 0x00, 0x07, 0x66, 0x70, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DD(Ý) latin capital letter y with acute
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x06, 0x63, 0x70, 0x06, 0x66, 0x70, 0x06, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DE(Þ) latin capital letter thorn
            new byte[] { 0x00, 0xC0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x61, 0x1C, 0xC6, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xC6, 0x63, 0x78, 0x06, 0x66, 0x60, 0x36, 0x67, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00DF(ß) latin small letter sharp s
            new byte[] { 0x18, 0xC0, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E0(à) latin small letter a with grave
            new byte[] { 0xC0, 0x00, 0x1E, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E1(á) latin small letter a with acute
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E2(â) latin small letter a with circumflex
            new byte[] { 0x00, 0x80, 0x1B, 0xFC, 0xC1, 0x0E, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E3(ã) latin small letter a with tilde
            new byte[] { 0x00, 0xC0, 0x1D, 0xDE, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E4(ä) latin small letter a with diaeresis
            new byte[] { 0x70, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0x70, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E5(å) latin small letter a with ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDF, 0x13, 0x67, 0x70, 0x0E, 0xE7, 0xFE, 0x3F, 0x07, 0x73, 0x30, 0x06, 0xF3, 0xE4, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E6(æ) latin small letter ae
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x60, 0x00, 0x06, 0xF0, 0x00, 0x18}, //00E7(ç) latin small letter c with cedilla
            new byte[] { 0x10, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E8(è) latin small letter e with grave
            new byte[] { 0xC0, 0x00, 0x1C, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00E9(é) latin small letter e with acute
            new byte[] { 0x60, 0x00, 0x0F, 0xD8, 0xC1, 0x38, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EA(ê) latin small letter e with circumflex
            new byte[] { 0x00, 0xC0, 0x19, 0xDC, 0xC3, 0x19, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EB(ë) latin small letter e with diaeresis
            new byte[] { 0x18, 0xC0, 0x03, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EC(ì) latin small letter i with grave
            new byte[] { 0xC0, 0x00, 0x0E, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00ED(í) latin small letter i with acute
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EE(î) latin small letter i with circumflex
            new byte[] { 0x00, 0xC0, 0x1D, 0xDE, 0xC1, 0x1D, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00EF(ï) latin small letter i with diaeresis
            new byte[] { 0x00, 0xC0, 0x01, 0x7C, 0x02, 0x3E, 0xF0, 0xC1, 0x39, 0x00, 0x83, 0x7F, 0x8E, 0x67, 0x70, 0x07, 0x36, 0x70, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F0(ð) latin small letter eth
            new byte[] { 0x00, 0x80, 0x33, 0xEC, 0xC1, 0x1C, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F1(ñ) latin small letter n with tilde
            new byte[] { 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F2(ò) latin small letter o with grave
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F3(ó) latin small letter o with acute
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x38, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F4(ô) latin small letter o with circumflex
            new byte[] { 0x00, 0x80, 0x1B, 0xEC, 0xC1, 0x0E, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F5(õ) latin small letter o with tilde
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F6(ö) latin small letter o with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F7(÷) division sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE7, 0x38, 0x86, 0x77, 0x7C, 0x67, 0x76, 0x67, 0x3F, 0xE7, 0x31, 0x8E, 0xF3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F8(ø) latin small letter o with stroke
            new byte[] { 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00F9(ù) latin small letter u with grave
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FA(ú) latin small letter u with acute
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x38, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FB(û) latin small letter u with circumflex
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //00FC(ü) latin small letter u with diaeresis
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x18, 0x9C, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0xF0, 0x01}, //00FD(ý) latin small letter y with acute
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x30, 0x8E, 0xE3, 0x1F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //00FE(þ) latin small letter thorn
            new byte[] { 0x00, 0xC0, 0x1D, 0xDE, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x18, 0x9C, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0xF0, 0x01}, //00FF(ÿ) latin small letter y with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0100(Ā) latin capital letter a with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0101(ā) latin small letter a with macron
            new byte[] { 0xF8, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0102(Ă) latin capital letter a with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xDC, 0x81, 0x0F, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0103(ă) latin small letter a with breve
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x80, 0x0F, 0xD8, 0xC0, 0x1D, 0x9C, 0xC1, 0x18, 0x8E, 0xE3, 0x3F, 0x06, 0x63, 0x70, 0x07, 0x36, 0x60, 0x00, 0x03, 0x18, 0x80, 0x01, 0x70}, //0104(Ą) latin capital letter a with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x00, 0x03, 0x30, 0xFC, 0x63, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x38}, //0105(ą) latin small letter a with ogonek
            new byte[] { 0x30, 0x00, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0106(Ć) latin capital letter c with acute
            new byte[] { 0x80, 0x00, 0x1C, 0xE0, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0107(ć) latin small letter c with acute
            new byte[] { 0x9C, 0x03, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0108(Ĉ) latin capital letter c with circumflex
            new byte[] { 0x60, 0x00, 0x0F, 0xD8, 0xC1, 0x38, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0109(ĉ) latin small letter c with circumflex
            new byte[] { 0xE0, 0x00, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010A(Ċ) latin capital letter c with dot above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010B(ċ) latin small letter c with dot above
            new byte[] { 0x60, 0x00, 0x00, 0xF0, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x70, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x20, 0x1C, 0x07, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010C(Č) latin capital letter c with caron
            new byte[] { 0x8C, 0x83, 0x1D, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xE0, 0x00, 0x1C, 0x87, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010D(č) latin small letter c with caron
            new byte[] { 0x30, 0x00, 0x00, 0xFE, 0x60, 0x1C, 0x86, 0x63, 0x30, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x38, 0xC6, 0xE1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010E(Ď) latin capital letter d with caron
            new byte[] { 0x00, 0x00, 0xB0, 0x00, 0x0B, 0xB0, 0x00, 0x0F, 0x30, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //010F(ď) latin small letter d with caron
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE0, 0x38, 0x0E, 0xE7, 0x60, 0x0E, 0xE6, 0x60, 0x0E, 0xF6, 0x67, 0x0E, 0xE6, 0x60, 0x0E, 0xE6, 0x70, 0x8E, 0xE3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0110(Đ) latin capital letter d with stroke
            new byte[] { 0x00, 0x00, 0x30, 0x00, 0x03, 0xFE, 0x00, 0x03, 0x30, 0x00, 0xC3, 0x3F, 0x8E, 0x63, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0111(đ) latin small letter d with stroke
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0112(Ē) latin capital letter e with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0113(ē) latin small letter e with macron
            new byte[] { 0xF0, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0114(Ĕ) latin capital letter e with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0x98, 0x81, 0x0F, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0115(ĕ) latin small letter e with breve
            new byte[] { 0x60, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0116(Ė) latin capital letter e with dot above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0117(ė) latin small letter e with dot above
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x78}, //0118(Ę) latin capital letter e with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x3C}, //0119(ę) latin small letter e with ogonek
            new byte[] { 0x60, 0x00, 0x00, 0xFE, 0xE7, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x3F, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011A(Ě) latin capital letter e with caron
            new byte[] { 0x8C, 0x83, 0x1D, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x38, 0x06, 0x77, 0x70, 0xFF, 0x77, 0x00, 0x07, 0x60, 0x00, 0x1C, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011B(ě) latin small letter e with caron
            new byte[] { 0xDC, 0x03, 0x10, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x7C, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x70, 0x1C, 0x87, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011C(Ĝ) latin capital letter g with circumflex
            new byte[] { 0x70, 0x80, 0x07, 0xDC, 0xE0, 0x18, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x0F}, //011D(ĝ) latin small letter g with circumflex
            new byte[] { 0xF8, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x7C, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x70, 0x1C, 0x87, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //011E(Ğ) latin capital letter g with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xDC, 0x80, 0x0F, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x0F}, //011F(ğ) latin small letter g with breve
            new byte[] { 0x70, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x7C, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x70, 0x1C, 0x87, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0120(Ġ) latin capital letter g with dot above
            new byte[] { 0x00, 0x00, 0x07, 0x78, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x0F}, //0121(ġ) latin small letter g with dot above
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x7C, 0x07, 0x77, 0x70, 0x06, 0xE7, 0x70, 0x1C, 0x87, 0x7F, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0122(Ģ) latin capital letter g with cedilla
            new byte[] { 0x70, 0x00, 0x03, 0x78, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x38, 0x06, 0x73, 0x30, 0x07, 0x73, 0x30, 0x07, 0x63, 0x30, 0x8E, 0x83, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x0F}, //0123(ģ) latin small letter g with cedilla
            new byte[] { 0xDC, 0x03, 0x10, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0124(Ĥ) latin capital letter h with circumflex
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0125(ĥ) latin small letter h with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0xF7, 0x7F, 0x06, 0x67, 0x70, 0x06, 0xE7, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0126(Ħ) latin capital letter h with stroke
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x7F, 0x60, 0x00, 0x06, 0xE0, 0x1F, 0x8E, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0127(ħ) latin small letter h with stroke
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0128(Ĩ) latin capital letter i with tilde
            new byte[] { 0x00, 0xC0, 0x1B, 0xBC, 0xE1, 0x0E, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0129(ĩ) latin small letter i with tilde
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012A(Ī) latin capital letter i with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012B(ī) latin small letter i with macron
            new byte[] { 0xF8, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012C(Ĭ) latin capital letter i with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xDC, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //012D(ĭ) latin small letter i with breve
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0F}, //012E(Į) latin capital letter i with ogonek
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x0F}, //012F(į) latin small letter i with ogonek
            new byte[] { 0x70, 0x00, 0x00, 0xFE, 0x03, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0130(İ) latin capital letter i with dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0131(ı) latin small letter dotless i
            new byte[] { 0x9C, 0x83, 0x00, 0xF8, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x38, 0xC7, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0134(Ĵ) latin capital letter j with circumflex
            new byte[] { 0xC0, 0x00, 0x1E, 0xF0, 0x83, 0x61, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xE3, 0xF0, 0x07}, //0135(ĵ) latin small letter j with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x38, 0xC6, 0x61, 0x0C, 0x66, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x60, 0x1C, 0x86, 0x61, 0x38, 0x06, 0x67, 0x70, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F}, //0136(Ķ) latin capital letter k with cedilla
            new byte[] { 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x67, 0x38, 0xC6, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x63, 0x70, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x0F}, //0137(ķ) latin small letter k with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x67, 0x38, 0xC6, 0x60, 0x07, 0x7E, 0xE0, 0x0F, 0xCE, 0x61, 0x18, 0x86, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0138(ĸ) latin small letter kra
            new byte[] { 0x06, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0139(Ĺ) latin capital letter l with acute
            new byte[] { 0x00, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013A(ĺ) latin small letter l with acute
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0F}, //013B(Ļ) latin capital letter l with cedilla
            new byte[] { 0x00, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //013C(ļ) latin small letter l with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0xEE, 0xE0, 0x06, 0x6E, 0xE0, 0x03, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013D(Ľ) latin capital letter l with caron
            new byte[] { 0x00, 0xF0, 0x3B, 0xB0, 0x03, 0x1B, 0xF0, 0x01, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013E(ľ) latin small letter l with caron
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x38, 0x8E, 0xE7, 0x38, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //013F(Ŀ) latin capital letter l with middle dot
            new byte[] { 0x00, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x0C, 0xE3, 0x30, 0x0C, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0140(ŀ) latin small letter l with middle dot
            new byte[] { 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x1C, 0xFC, 0xC0, 0x03, 0x1E, 0xF0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0141(Ł) latin capital letter l with stroke
            new byte[] { 0x00, 0xF0, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x3B, 0xF0, 0x01, 0x0F, 0x78, 0xC0, 0x03, 0x3F, 0x70, 0x03, 0x30, 0x00, 0x03, 0x70, 0x04, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0142(ł) latin small letter l with stroke
            new byte[] { 0x30, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0143(Ń) latin capital letter n with acute
            new byte[] { 0x80, 0x00, 0x1C, 0xE0, 0x00, 0x03, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0144(ń) latin small letter n with acute
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0145(Ņ) latin capital letter n with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0146(ņ) latin small letter n with cedilla
            new byte[] { 0x70, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0147(Ň) latin capital letter n with caron
            new byte[] { 0x8C, 0x83, 0x1D, 0xF0, 0x00, 0x06, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0148(ň) latin small letter n with caron
            new byte[] { 0x00, 0x30, 0x00, 0x07, 0x30, 0x00, 0x03, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0149(ŉ) latin small letter n preceded by apostrophe
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xE7, 0x70, 0x1E, 0xE7, 0x71, 0x3E, 0x67, 0x73, 0x76, 0x67, 0x76, 0xE6, 0x67, 0x7C, 0xC6, 0x67, 0x78, 0x86, 0x67, 0x70, 0x00, 0x07, 0x30, 0x00, 0x03, 0x1F}, //014A(Ŋ) latin capital letter eng
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x38, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x03, 0x30, 0x80, 0x03, 0x1F}, //014B(ŋ) latin small letter eng
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014C(Ō) latin capital letter o with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014D(ō) latin small letter o with macron
            new byte[] { 0xF8, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014E(Ŏ) latin capital letter o with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xD8, 0x81, 0x0F, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //014F(ŏ) latin small letter o with breve
            new byte[] { 0xCC, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x63, 0x70, 0x07, 0x77, 0x60, 0x07, 0x76, 0x60, 0x07, 0x76, 0x70, 0x06, 0x67, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0150(Ő) latin capital letter o with double acute
            new byte[] { 0x30, 0x83, 0x73, 0x9C, 0xE1, 0x0C, 0x00, 0x00, 0x00, 0xF8, 0xE0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0151(ő) latin small letter o with double acute
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xEF, 0x06, 0x66, 0x70, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x7E, 0x63, 0x30, 0x06, 0x67, 0x60, 0x06, 0x6E, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0152(Œ) latin capital ligature oe
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x33, 0x67, 0x73, 0x3E, 0xC7, 0xF3, 0x3F, 0x07, 0x73, 0x30, 0x07, 0xF3, 0xEC, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0153(œ) latin small ligature oe
            new byte[] { 0x18, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x86, 0xE3, 0x1F, 0xE6, 0x60, 0x0C, 0xC6, 0x61, 0x38, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0154(Ŕ) latin capital letter r with acute
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xEC, 0xC3, 0x23, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0155(ŕ) latin small letter r with acute
            new byte[] { 0x00, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x86, 0xE3, 0x1F, 0xE6, 0x60, 0x0C, 0xC6, 0x61, 0x38, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0156(Ŗ) latin capital letter r with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xC3, 0x23, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xE0, 0x01}, //0157(ŗ) latin small letter r with cedilla
            new byte[] { 0x70, 0x00, 0x00, 0xFE, 0x61, 0x38, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x86, 0xE3, 0x1F, 0xE6, 0x60, 0x0C, 0xC6, 0x61, 0x38, 0x06, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0158(Ř) latin capital letter r with caron
            new byte[] { 0x8C, 0xC3, 0x1D, 0xF8, 0x00, 0x07, 0x00, 0x00, 0x00, 0xEC, 0xC3, 0x23, 0x1C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0159(ř) latin small letter r with caron
            new byte[] { 0x30, 0x00, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015A(Ś) latin capital letter s with acute
            new byte[] { 0xC0, 0x00, 0x1E, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015B(ś) latin small letter s with acute
            new byte[] { 0xDC, 0x41, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015C(Ŝ) latin capital letter s with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //015D(ŝ) latin small letter s with circumflex
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x60, 0x00, 0x03, 0xF0, 0x00, 0x0C}, //015E(Ş) latin capital letter s with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x60, 0x00, 0x03, 0xF0, 0x00, 0x0C}, //015F(ş) latin small letter s with cedilla
            new byte[] { 0x70, 0x00, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0160(Š) latin capital letter s with caron
            new byte[] { 0x8C, 0xC1, 0x1D, 0xF8, 0x00, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0161(š) latin small letter s with caron
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x60, 0x00, 0x03, 0xF0, 0x00, 0x0C}, //0162(Ţ) latin capital letter t with cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x38, 0x80, 0x03, 0xFF, 0x83, 0x03, 0x38, 0x80, 0x03, 0x38, 0x80, 0x03, 0x38, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x40, 0x00, 0x06, 0xE0, 0x01, 0x18}, //0163(ţ) latin small letter t with cedilla
            new byte[] { 0x70, 0x00, 0x00, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0164(Ť) latin capital letter t with caron
            new byte[] { 0x00, 0x00, 0x18, 0xB0, 0x81, 0x1B, 0xF8, 0x80, 0x03, 0xFF, 0x83, 0x03, 0x38, 0x80, 0x03, 0x38, 0x80, 0x03, 0x38, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0165(ť) latin small letter t with caron
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0166(Ŧ) latin capital letter t with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x38, 0x80, 0x03, 0xFF, 0x83, 0x03, 0x38, 0x80, 0x03, 0x38, 0xE0, 0x3F, 0x38, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0167(ŧ) latin small letter t with stroke
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0168(Ũ) latin capital letter u with tilde
            new byte[] { 0x00, 0x80, 0x1B, 0xEC, 0xC1, 0x0E, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0169(ũ) latin small letter u with tilde
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016A(Ū) latin capital letter u with macron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016B(ū) latin small letter u with macron
            new byte[] { 0xF8, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016C(Ŭ) latin capital letter u with breve
            new byte[] { 0x8C, 0xC1, 0x18, 0xD8, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016D(ŭ) latin small letter u with breve
            new byte[] { 0xD8, 0x00, 0x07, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016E(Ů) latin capital letter u with ring above
            new byte[] { 0x70, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //016F(ů) latin small letter u with ring above
            new byte[] { 0xCC, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0170(Ű) latin capital letter u with double acute
            new byte[] { 0x30, 0x83, 0x73, 0x9C, 0xE1, 0x0C, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0171(ű) latin small letter u with double acute
            new byte[] { 0x00, 0x00, 0x00, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x63, 0x30, 0x8C, 0x83, 0x0F, 0x60, 0x00, 0x03, 0x30, 0x00, 0x0E}, //0172(Ų) latin capital letter u with ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xC3, 0x3F, 0x80, 0x01, 0x0C, 0xC0, 0x00, 0x3C}, //0173(ų) latin small letter u with ogonek
            new byte[] { 0xDC, 0x03, 0x10, 0x03, 0x3C, 0xE7, 0x73, 0x3E, 0x67, 0x73, 0x36, 0x6F, 0xFF, 0xF6, 0x7D, 0xDE, 0xE7, 0x3D, 0xDE, 0xE3, 0x39, 0x8E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0174(Ŵ) latin capital letter w with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x38, 0x00, 0x00, 0x00, 0x03, 0x3E, 0x67, 0x73, 0x76, 0x67, 0xF7, 0xE6, 0x7D, 0xDE, 0xE3, 0x3D, 0x9E, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0175(ŵ) latin small letter w with circumflex
            new byte[] { 0xDC, 0x03, 0x10, 0x07, 0x66, 0x70, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0176(Ŷ) latin capital letter y with circumflex
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x18, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x18, 0x9C, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0xF0, 0x01}, //0177(ŷ) latin small letter y with circumflex
            new byte[] { 0xDC, 0x01, 0x00, 0x07, 0x66, 0x70, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0178(Ÿ) latin capital letter y with diaeresis
            new byte[] { 0x30, 0x00, 0x00, 0xFE, 0x07, 0x38, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0179(Ź) latin capital letter z with acute
            new byte[] { 0xC0, 0x00, 0x1C, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017A(ź) latin small letter z with acute
            new byte[] { 0x70, 0x00, 0x00, 0xFE, 0x07, 0x38, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017B(Ż) latin capital letter z with dot above
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017C(ż) latin small letter z with dot above
            new byte[] { 0x70, 0x00, 0x00, 0xFE, 0x07, 0x38, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0x70, 0x00, 0x07, 0x38, 0x80, 0x01, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017D(Ž) latin capital letter z with caron
            new byte[] { 0x8C, 0x83, 0x1D, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x38, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x38, 0xC0, 0x01, 0x0E, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //017E(ž) latin small letter z with caron
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x07, 0x06, 0x70, 0x00, 0x07, 0x70, 0xE0, 0x3F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00}, //0192(ƒ) latin small letter f with hook
            new byte[] { 0x30, 0x00, 0x00, 0xF0, 0x0F, 0x0F, 0xF8, 0x80, 0x0F, 0xF8, 0xC0, 0x0F, 0xEC, 0xC0, 0x7E, 0xEE, 0x60, 0x0E, 0xFF, 0x70, 0x0E, 0xE3, 0x30, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FC(Ǽ) latin capital letter ae with acute
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xDF, 0x13, 0x67, 0x70, 0x0E, 0xE7, 0xFE, 0x3F, 0x07, 0x73, 0x30, 0x06, 0xF3, 0xE4, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FD(ǽ) latin small letter ae with acute
            new byte[] { 0x30, 0x00, 0x00, 0xF8, 0xCE, 0x78, 0x06, 0x63, 0x78, 0xC7, 0x77, 0x6C, 0x67, 0x76, 0x67, 0x3F, 0xF6, 0x71, 0x0E, 0xE7, 0x30, 0x8E, 0xB3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FE(Ǿ) latin capital letter o with stroke and acute
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF8, 0xE7, 0x38, 0x86, 0x77, 0x7C, 0x67, 0x76, 0x67, 0x3F, 0xE7, 0x31, 0x8E, 0xF3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //01FF(ǿ) latin small letter o with stroke and acute
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x30, 0x06, 0x60, 0x00, 0x0E, 0xE0, 0x01, 0xFC, 0x01, 0x3F, 0x80, 0x03, 0x70, 0x00, 0x27, 0x30, 0x87, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0218(Ș) latin capital letter s with comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xE3, 0x30, 0x06, 0xE0, 0x00, 0xFE, 0x81, 0x3F, 0x00, 0x03, 0x30, 0x86, 0xE3, 0x1F, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //0219(ș) latin small letter s with comma below
            new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x07, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F}, //021A(Ț) latin capital letter t with comma below
            new byte[] { 0x00, 0x00, 0x00, 0x30, 0x80, 0x03, 0x38, 0x80, 0x03, 0xFF, 0x83, 0x03, 0x38, 0x80, 0x03, 0x38, 0x80, 0x03, 0x38, 0x00, 0x03, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x0E}, //021B(ț) latin small letter t with comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x0C, 0xE3, 0xF0, 0x07}, //0237(ȷ) latin small letter dotless j
            new byte[] { 0x00, 0x00, 0x07, 0xF0, 0x00, 0x06, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02BC(ʼ) modifier letter apostrophe
            new byte[] { 0x70, 0x80, 0x0F, 0xDC, 0xC1, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C6(ˆ) modifier letter circumflex accent
            new byte[] { 0x8C, 0xC3, 0x1D, 0xF8, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C7(ˇ) caron
            new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02C9(ˉ) modifier letter macron
            new byte[] { 0x8C, 0xC1, 0x18, 0xD8, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D8(˘) breve
            new byte[] { 0x00, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02D9(˙) dot above
            new byte[] { 0x70, 0x80, 0x0D, 0xD8, 0x80, 0x0D, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DA(˚) ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x00, 0x03, 0x38, 0x00, 0x0F}, //02DB(˛) ogonek
            new byte[] { 0x00, 0x80, 0x1B, 0xEC, 0xC1, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DC(˜) small tilde
            new byte[] { 0x30, 0x82, 0x73, 0x9C, 0xE3, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //02DD(˝) double acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0300(̀) combining grave accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0301(́) combining acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0302(̂) combining circumflex accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0303(̃) combining tilde
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0304(̄) combining macron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0306(̆) combining breve
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0307(̇) combining dot above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0308(̈) combining diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030A(̊) combining ring above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030B(̋) combining double acute accent
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //030C(̌) combining caron
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0312(̒) combining turned comma above
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0326(̦) combining comma below
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0327(̧) combining cedilla
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0328(̨) combining ogonek
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0335(̵) combining short stroke overlay
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0336(̶) combining long stroke overlay
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0337(̷) combining short solidus overlay
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0338(̸) combining long solidus overlay
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF0, 0x80, 0x0F, 0xD8, 0x80, 0x1D, 0xDC, 0xC1, 0x18, 0x8C, 0xE3, 0x38, 0x06, 0x63, 0x70, 0x07, 0xF7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0394(Δ) greek capital letter delta
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x36, 0x60, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0xC3, 0x1D, 0xD8, 0xF0, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03A9(Ω) greek capital letter omega
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x8E, 0xE3, 0x3F, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00}, //03BC(μ) greek small letter mu
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC7, 0x18, 0x8C, 0xC1, 0x18, 0x8C, 0xC1, 0x18, 0x8E, 0xE1, 0x18, 0x8E, 0x61, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //03C0(π) greek small letter pi
            new byte[] { 0x60, 0x00, 0x00, 0x03, 0x3C, 0xE7, 0x73, 0x3E, 0x67, 0x73, 0x36, 0x6F, 0xFF, 0xF6, 0x7D, 0xDE, 0xE7, 0x3D, 0xDE, 0xE3, 0x39, 0x8E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E80(Ẁ) latin capital letter w with grave
            new byte[] { 0x18, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x03, 0x3E, 0x67, 0x73, 0x76, 0x67, 0xF7, 0xE6, 0x7D, 0xDE, 0xE3, 0x3D, 0x9E, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E81(ẁ) latin small letter w with grave
            new byte[] { 0x30, 0x00, 0x00, 0x03, 0x3C, 0xE7, 0x73, 0x3E, 0x67, 0x73, 0x36, 0x6F, 0xFF, 0xF6, 0x7D, 0xDE, 0xE7, 0x3D, 0xDE, 0xE3, 0x39, 0x8E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E82(Ẃ) latin capital letter w with acute
            new byte[] { 0xC0, 0x00, 0x1E, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x3E, 0x67, 0x73, 0x76, 0x67, 0xF7, 0xE6, 0x7D, 0xDE, 0xE3, 0x3D, 0x9E, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E83(ẃ) latin small letter w with acute
            new byte[] { 0xDC, 0x01, 0x00, 0x03, 0x3C, 0xE7, 0x73, 0x3E, 0x67, 0x73, 0x36, 0x6F, 0xFF, 0xF6, 0x7D, 0xDE, 0xE7, 0x3D, 0xDE, 0xE3, 0x39, 0x8E, 0xE3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E84(Ẅ) latin capital letter w with diaeresis
            new byte[] { 0x00, 0xC0, 0x1D, 0xDC, 0xC3, 0x1D, 0x00, 0x00, 0x00, 0x03, 0x3E, 0x67, 0x73, 0x76, 0x67, 0xF7, 0xE6, 0x7D, 0xDE, 0xE3, 0x3D, 0x9E, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E85(ẅ) latin small letter w with diaeresis
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xE1, 0x38, 0x86, 0x63, 0x0C, 0xE7, 0x70, 0x0E, 0xE7, 0x70, 0x1C, 0x87, 0x73, 0x70, 0x07, 0x76, 0x60, 0x17, 0x77, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1E9E(ẞ) latin capital letter sharp s
            new byte[] { 0x60, 0x00, 0x00, 0x07, 0x66, 0x70, 0x8E, 0xC3, 0x18, 0xDC, 0x81, 0x0F, 0xF0, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //1EF2(Ỳ) latin capital letter y with grave
            new byte[] { 0x18, 0xC0, 0x03, 0x70, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x07, 0x67, 0x30, 0x0E, 0xC3, 0x18, 0x9C, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0x70, 0x00, 0x07, 0x70, 0x00, 0x03, 0x38, 0xF0, 0x01}, //1EF3(ỳ) latin small letter y with grave
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2002( ) en space
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2003( ) em space
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2008( ) punctuation space
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2013(–) en dash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2014(—) em dash
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x9C, 0xC1, 0x19, 0x00, 0x00, 0x00}, //2016(‖) double vertical line
            new byte[] { 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0E, 0x30, 0x00, 0x03, 0x78, 0x80, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2018(‘) left single quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x0F, 0xF0, 0x00, 0x0E, 0x60, 0x80, 0x03, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2019(’) right single quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0x60, 0x00, 0x06, 0x38, 0x80, 0x01}, //201A(‚) single low-9 quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x10, 0xC6, 0x39, 0x8E, 0x61, 0x0C, 0xDE, 0xE3, 0x3D, 0xCE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201C(“) left double quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x9C, 0xE3, 0x3D, 0x9C, 0x83, 0x31, 0x1C, 0xE3, 0x1C, 0xC2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //201D(”) right double quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x39, 0xDE, 0xE3, 0x39, 0x18, 0xC3, 0x38, 0xCE, 0x31, 0x04}, //201E(„) double low-9 quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x06, 0xFF, 0x07, 0x06, 0x60, 0x00, 0x06, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00}, //2020(†) dagger
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x70, 0x00, 0x06, 0xFF, 0x07, 0x06, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x60, 0xF0, 0x7F, 0x60, 0x00, 0x07, 0x70, 0x00, 0x07, 0x00, 0x00, 0x00}, //2021(‡) double dagger
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0xC0, 0x1F, 0xFC, 0x81, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2022(•) bullet
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x77, 0x77, 0x77, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2026(…) horizontal ellipsis
            new byte[] { 0x00, 0x00, 0x00, 0x1E, 0xB0, 0x03, 0x33, 0x30, 0x03, 0x3B, 0xE0, 0x71, 0xF0, 0xF3, 0x03, 0x03, 0xE0, 0x79, 0xF3, 0x36, 0x6F, 0xF3, 0xE6, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2030(‰) per mille sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xE0, 0x00, 0x07, 0x38, 0x80, 0x03, 0x70, 0x00, 0x0E, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2039(‹) single left-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x38, 0x00, 0x07, 0xE0, 0x01, 0x1E, 0x70, 0x80, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //203A(›) single right-pointing angle quotation mark
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x07, 0x30, 0x80, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x0C, 0x60, 0x00, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2044(⁄) fraction slash
            new byte[] { 0xF8, 0xC0, 0x18, 0x8E, 0xE3, 0x3C, 0x66, 0x63, 0x33, 0x3E, 0xE3, 0x39, 0x9C, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2070(⁰) superscript zero
            new byte[] { 0xE0, 0x00, 0x07, 0x30, 0x80, 0x1B, 0xDC, 0xC1, 0x1C, 0xCE, 0xE1, 0x7F, 0xC0, 0x01, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2074(⁴) superscript four
            new byte[] { 0xFC, 0xC1, 0x00, 0x0C, 0xC0, 0x00, 0xFC, 0xC1, 0x38, 0x80, 0x03, 0x38, 0xC0, 0xE1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2075(⁵) superscript five
            new byte[] { 0xE0, 0x81, 0x03, 0x1C, 0xC0, 0x00, 0xFE, 0xE1, 0x39, 0x0E, 0xC3, 0x30, 0x9C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2076(⁶) superscript six
            new byte[] { 0x00, 0xE0, 0x3F, 0x80, 0x01, 0x1C, 0xE0, 0x00, 0x06, 0x70, 0x00, 0x03, 0x38, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2077(⁷) superscript seven
            new byte[] { 0xF8, 0xC0, 0x18, 0x8E, 0xC3, 0x39, 0xFC, 0xC1, 0x1F, 0x8E, 0x63, 0x30, 0x8E, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2078(⁸) superscript eight
            new byte[] { 0xF8, 0xC0, 0x18, 0x8E, 0xE3, 0x30, 0x8C, 0x83, 0x3F, 0x80, 0x03, 0x18, 0xE0, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2079(⁹) superscript nine
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE1, 0x38, 0xCE, 0x63, 0x36, 0x36, 0xE3, 0x33, 0x9E, 0xC3, 0x19, 0xF8, 0x00, 0x00}, //2080(₀) subscript zero
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x70, 0xC0, 0x07, 0x6E, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0xFE, 0x03, 0x00}, //2081(₁) subscript one
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x8C, 0x01, 0x38, 0x80, 0x03, 0x1F, 0xFC, 0xC0, 0x01, 0x0C, 0xE0, 0x00, 0xFE, 0x03, 0x00}, //2082(₂) subscript two
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x84, 0x01, 0x18, 0x80, 0x81, 0x1F, 0x80, 0x03, 0x38, 0x80, 0x03, 0x1C, 0x7E, 0x00, 0x00}, //2083(₃) subscript three
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x70, 0x00, 0x03, 0xB8, 0xC1, 0x1D, 0xCC, 0xE1, 0x1C, 0xFE, 0x07, 0x1C, 0xC0, 0x01, 0x00}, //2084(₄) subscript four
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x1F, 0x8C, 0x03, 0x38, 0x80, 0x03, 0x1C, 0x7E, 0x00, 0x00}, //2085(₅) subscript five
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x38, 0xC0, 0x01, 0x0C, 0xE0, 0x1F, 0x9E, 0xE3, 0x30, 0x0C, 0xC3, 0x39, 0xF8, 0x00, 0x00}, //2086(₆) subscript six
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0x18, 0xC0, 0x01, 0x0E, 0x60, 0x00, 0x07, 0x30, 0x80, 0x03, 0x38, 0x00, 0x00}, //2087(₇) subscript seven
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE1, 0x38, 0x9C, 0xC3, 0x1F, 0xFC, 0xE1, 0x38, 0x06, 0xE3, 0x38, 0xF8, 0x01, 0x00}, //2088(₈) subscript eight
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8C, 0xE1, 0x38, 0x0E, 0xC3, 0x38, 0xF8, 0x03, 0x38, 0x80, 0x01, 0x0E, 0x3C, 0x00, 0x00}, //2089(₉) subscript nine
            new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x87, 0x63, 0x1C, 0xC0, 0x00, 0x0C, 0xF0, 0x3F, 0x0E, 0xE0, 0x00, 0xFF, 0xC1, 0x00, 0x0C, 0xC0, 0x01, 0x38, 0x07, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20AC(€) euro sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0xE0, 0x00, 0x0C, 0xC0, 0xF1, 0x7F, 0xC0, 0x01, 0x0E, 0x7F, 0xE0, 0x01, 0x38, 0x00, 0x07, 0xE0, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //20B9(₹) indian rupee sign
            new byte[] { 0x00, 0xC0, 0x0D, 0xD8, 0x80, 0x0D, 0xFE, 0x61, 0x30, 0x06, 0x67, 0x30, 0x86, 0xE3, 0x1F, 0x06, 0x63, 0x70, 0x06, 0x67, 0x70, 0x06, 0xE3, 0x1F, 0xD8, 0xC0, 0x0D, 0x00, 0x00, 0x00}, //20BF(₿) bitcoin sign
            new byte[] { 0x00, 0x00, 0x1F, 0x38, 0x83, 0x31, 0x18, 0x87, 0x71, 0x18, 0x83, 0x39, 0xD8, 0x81, 0x0F, 0x78, 0xE0, 0x01, 0x1F, 0x80, 0x01, 0x38, 0x02, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2113(ℓ) script small l
            new byte[] { 0x00, 0x00, 0x00, 0x37, 0x70, 0x03, 0x37, 0x70, 0x03, 0x3F, 0xF0, 0x7B, 0xBF, 0xFD, 0xDB, 0xBB, 0xBD, 0xDB, 0xBB, 0xB7, 0x03, 0x3B, 0x30, 0xFB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2116(№) numero sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x8E, 0x73, 0x60, 0xFB, 0xB6, 0xF9, 0x9B, 0x9D, 0xCF, 0x1B, 0xBC, 0xE1, 0x1B, 0x76, 0x60, 0x8E, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2117(℗) sound recording copyright
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF0, 0x67, 0xE3, 0x77, 0x7E, 0xFC, 0x97, 0x7F, 0x6F, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2120(℠) service mark
            new byte[] { 0x00, 0x00, 0x00, 0x7F, 0x66, 0x7E, 0xE6, 0x67, 0x7E, 0xE6, 0x67, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2122(™) trade mark sign
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x73, 0x70, 0x07, 0x36, 0x60, 0x07, 0x76, 0x60, 0x07, 0x67, 0x30, 0x8E, 0xC3, 0x1D, 0xD8, 0xF0, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2126(Ω) ohm sign
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC0, 0x38, 0x06, 0x77, 0x60, 0x07, 0x76, 0xE0, 0xFF, 0x7F, 0x00, 0x07, 0x70, 0x00, 0x07, 0x60, 0x70, 0x8C, 0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //212E(℮) estimated symbol
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xE0, 0x0F, 0xE7, 0x30, 0x8E, 0xF1, 0x0F, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xE1, 0x8C, 0x67, 0xE0, 0x07, 0x3E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2153(⅓) vulgar fraction one third
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x90, 0xE1, 0x1E, 0xF7, 0x30, 0x83, 0xF1, 0x0D, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xE1, 0x8C, 0x67, 0xE0, 0x07, 0x3E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2154(⅔) vulgar fraction two thirds
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xE0, 0x0F, 0xE7, 0x30, 0x8E, 0xF1, 0x0F, 0x00, 0x00, 0x00, 0xC0, 0x87, 0x0D, 0xCC, 0x67, 0xE0, 0x07, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2155(⅕) vulgar fraction one fifth
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x90, 0xE1, 0x1E, 0xF7, 0x30, 0x83, 0xF1, 0x0D, 0x00, 0x00, 0x00, 0xC0, 0x87, 0x0D, 0xCC, 0x67, 0xE0, 0x07, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2156(⅖) vulgar fraction two fifths
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x80, 0xE1, 0x1E, 0x87, 0x31, 0x98, 0xF1, 0x0C, 0x00, 0x00, 0x00, 0xC0, 0x87, 0x0D, 0xCC, 0x67, 0xE0, 0x07, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2157(⅗) vulgar fraction three fifths
            new byte[] { 0x00, 0x00, 0x00, 0x1C, 0xE0, 0xE0, 0x17, 0xB6, 0x31, 0xBF, 0x83, 0x1D, 0x00, 0x00, 0x00, 0xD0, 0x87, 0x0F, 0xCC, 0xE7, 0xE0, 0x07, 0x3E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2158(⅘) vulgar fraction four fifths
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xC0, 0x0F, 0xE6, 0x70, 0x8E, 0xF3, 0x1F, 0x00, 0x00, 0x00, 0x10, 0x87, 0x1F, 0xDC, 0xE7, 0xEC, 0xC7, 0x3E, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2159(⅙) vulgar fraction one sixth
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x30, 0xE0, 0x1F, 0x86, 0x31, 0x98, 0xF1, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x87, 0x1D, 0xCC, 0xE7, 0xEC, 0xC7, 0x3E, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215A(⅚) vulgar fraction five sixths
            new byte[] { 0x00, 0x00, 0x00, 0x0E, 0xF0, 0xE0, 0x0F, 0xE7, 0x30, 0x8E, 0xF1, 0x0F, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xED, 0xCC, 0x67, 0xFC, 0xC7, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215B(⅛) vulgar fraction one eighth
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x80, 0xE1, 0x1E, 0x87, 0x31, 0x98, 0xF1, 0x0C, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xED, 0xCC, 0x67, 0xFC, 0xC7, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215C(⅜) vulgar fraction three eighths
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x30, 0xE0, 0x1F, 0x87, 0x31, 0x98, 0xF1, 0x0C, 0x00, 0x00, 0x00, 0xC0, 0x87, 0xED, 0xCC, 0x67, 0xFC, 0xC7, 0x3C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215D(⅝) vulgar fraction five eighths
            new byte[] { 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x61, 0x0C, 0x67, 0x38, 0xC6, 0x01, 0x0C, 0x00, 0x00, 0x00, 0xC0, 0xC7, 0xED, 0xCE, 0x77, 0xFC, 0xC3, 0x1C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //215E(⅞) vulgar fraction seven eighths
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x80, 0x01, 0x0C, 0x70, 0x00, 0xFF, 0x7F, 0x00, 0x0C, 0x80, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2190(←) leftwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0xC0, 0x1F, 0xEE, 0x73, 0x76, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2191(↑) upwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x80, 0x03, 0x70, 0xFF, 0x0F, 0x70, 0x80, 0x03, 0x1C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2192(→) rightwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x67, 0xE7, 0x3E, 0xFC, 0x81, 0x0F, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2193(↓) downwards arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x19, 0x8C, 0x63, 0x30, 0x07, 0xF6, 0xFF, 0x07, 0x66, 0x30, 0x8C, 0xC3, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2194(↔) left right arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x0F, 0xFC, 0x63, 0x76, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x66, 0xC7, 0x1F, 0xF8, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2195(↕) up down arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE1, 0x01, 0x3E, 0x60, 0x07, 0xE6, 0x60, 0x1C, 0x80, 0x03, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2196(↖) north west arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0x3C, 0xE0, 0x03, 0x37, 0x38, 0xC3, 0x31, 0x0E, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2197(↗) north east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x06, 0xC0, 0x30, 0x18, 0x03, 0x33, 0x60, 0x03, 0x3C, 0xC0, 0xC3, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2198(↘) south east arrow
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x67, 0x18, 0xC6, 0x60, 0x0E, 0x76, 0xE0, 0x03, 0x1E, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2199(↙) south west arrow
            new byte[] { 0x00, 0x00, 0x00, 0xF8, 0xC1, 0x39, 0x00, 0x03, 0x70, 0x00, 0x07, 0x70, 0xFC, 0xE7, 0x78, 0x07, 0x77, 0x70, 0x07, 0x73, 0x38, 0xCE, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2202(∂) partial differential
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xEF, 0x78, 0x86, 0x77, 0x7C, 0xE3, 0x36, 0x67, 0x3B, 0xF6, 0x61, 0x0F, 0xF7, 0x38, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2205(∅) empty set
            new byte[] { 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF0, 0x80, 0x0F, 0xD8, 0x80, 0x1D, 0xDC, 0xC1, 0x18, 0x8C, 0xE3, 0x38, 0x06, 0x63, 0x70, 0x07, 0xF7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2206(∆) increment
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70, 0x06, 0x67, 0x70}, //220F(∏) n-ary product
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE0, 0x7F, 0x0E, 0xC0, 0x00, 0x1C, 0x80, 0x03, 0x30, 0x00, 0x07, 0xE0, 0x00, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x80, 0x03, 0x1C, 0xC0, 0x00, 0x0E, 0xE0, 0x7F}, //2211(∑) n-ary summation
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2212(−) minus sign
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x07, 0x38, 0x80, 0x01, 0x0C, 0xE0, 0x00, 0x07, 0x30, 0x80, 0x01, 0x1C, 0xE0, 0x00, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2215(∕) division slash
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2219(∙) bullet operator
            new byte[] { 0x00, 0x00, 0x60, 0x00, 0x06, 0x60, 0x00, 0x07, 0x30, 0x00, 0x03, 0x30, 0x80, 0x03, 0x18, 0x8F, 0xC1, 0x18, 0xDC, 0x81, 0x1D, 0xD8, 0x80, 0x0F, 0xF8, 0x00, 0x0F, 0x70, 0x00, 0x07}, //221A(√) square root
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0xB7, 0x6F, 0x73, 0x3E, 0xE7, 0x73, 0xBE, 0x6F, 0xDE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //221E(∞) infinity
            new byte[] { 0x00, 0x00, 0x7C, 0x60, 0x04, 0x06, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x70, 0x00, 0x07, 0x31, 0xF0, 0x01}, //222B(∫) integral
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x66, 0x77, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x66, 0x77, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2248(≈) almost equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xC0, 0xF1, 0x7F, 0x60, 0x00, 0x06, 0x70, 0x00, 0x03, 0xFF, 0xC7, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2260(≠) not equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0xE0, 0x81, 0x07, 0x1E, 0xE0, 0x01, 0x78, 0x00, 0x1E, 0x80, 0x03, 0x20, 0x00, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2264(≤) less-than or equal to
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xE0, 0x00, 0x3C, 0x00, 0x1F, 0x80, 0x03, 0x38, 0xF0, 0xC1, 0x03, 0x0E, 0x20, 0x00, 0x00, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //2265(≥) greater-than or equal to
            new byte[] { 0x00, 0x00, 0x00, 0x60, 0x00, 0x07, 0xF8, 0x80, 0x0D, 0x9C, 0xC1, 0x38, 0x06, 0x63, 0x70, 0x0E, 0xC3, 0x18, 0xDC, 0x81, 0x0D, 0xF0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //25CA(◊) lozenge
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //E0FF() private use-e0ff
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //EFFD() private use-effd
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //F000() private use-f000
            new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF7, 0x7F, 0xFF, 0xF7, 0x7F, 0xFE, 0x77, 0x7F, 0xFE, 0xF3, 0x7F, 0xFF, 0xF3, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //F8FF() private use-f8ff
 
        };

        private static readonly Dictionary<int, ushort> characterMap = new Dictionary<int, ushort>
        {
            { 0x0020, 0 }, { 0x0021, 1 }, { 0x0022, 2 }, { 0x0023, 3 }, { 0x0024, 4 }, { 0x0025, 5 }, { 0x0026, 6 }, { 0x0027, 7 }, { 0x0028, 8 }, { 0x0029, 9 }, { 0x002A, 10 }, { 0x002B, 11 }, { 0x002C, 12 }, { 0x002D, 13 }, { 0x002E, 14 }, { 0x002F, 15 }, { 0x0030, 16 }, { 0x0031, 17 }, { 0x0032, 18 }, { 0x0033, 19 }, { 0x0034, 20 }, { 0x0035, 21 }, { 0x0036, 22 }, { 0x0037, 23 }, { 0x0038, 24 }, { 0x0039, 25 }, { 0x003A, 26 }, { 0x003B, 27 }, { 0x003C, 28 }, { 0x003D, 29 }, { 0x003E, 30 }, { 0x003F, 31 }, { 0x0040, 32 }, { 0x0041, 33 }, { 0x0042, 34 }, { 0x0043, 35 }, { 0x0044, 36 }, { 0x0045, 37 }, { 0x0046, 38 }, { 0x0047, 39 }, { 0x0048, 40 }, { 0x0049, 41 }, { 0x004A, 42 }, { 0x004B, 43 }, { 0x004C, 44 }, { 0x004D, 45 }, { 0x004E, 46 }, { 0x004F, 47 }, { 0x0050, 48 }, { 0x0051, 49 }, { 0x0052, 50 }, { 0x0053, 51 }, { 0x0054, 52 }, { 0x0055, 53 }, { 0x0056, 54 }, { 0x0057, 55 }, { 0x0058, 56 }, { 0x0059, 57 }, { 0x005A, 58 }, { 0x005B, 59 }, { 0x005C, 60 }, { 0x005D, 61 }, { 0x005E, 62 }, { 0x005F, 63 }, { 0x0060, 64 }, { 0x0061, 65 }, { 0x0062, 66 }, { 0x0063, 67 }, { 0x0064, 68 }, { 0x0065, 69 }, { 0x0066, 70 }, { 0x0067, 71 }, { 0x0068, 72 }, { 0x0069, 73 }, { 0x006A, 74 }, { 0x006B, 75 }, { 0x006C, 76 }, { 0x006D, 77 }, { 0x006E, 78 }, { 0x006F, 79 }, { 0x0070, 80 }, { 0x0071, 81 }, { 0x0072, 82 }, { 0x0073, 83 }, { 0x0074, 84 }, { 0x0075, 85 }, { 0x0076, 86 }, { 0x0077, 87 }, { 0x0078, 88 }, { 0x0079, 89 }, { 0x007A, 90 }, { 0x007B, 91 }, { 0x007C, 92 }, { 0x007D, 93 }, { 0x007E, 94 }, { 0x00A0, 95 }, { 0x00A1, 96 }, { 0x00A2, 97 }, { 0x00A3, 98 }, { 0x00A4, 99 }, { 0x00A5, 100 }, { 0x00A6, 101 }, { 0x00A7, 102 }, { 0x00A8, 103 }, { 0x00A9, 104 }, { 0x00AA, 105 }, { 0x00AB, 106 }, { 0x00AC, 107 }, { 0x00AD, 108 }, { 0x00AE, 109 }, { 0x00AF, 110 }, { 0x00B0, 111 }, { 0x00B1, 112 }, { 0x00B2, 113 }, { 0x00B3, 114 }, { 0x00B4, 115 }, { 0x00B5, 116 }, { 0x00B6, 117 }, { 0x00B7, 118 }, { 0x00B8, 119 }, { 0x00B9, 120 }, { 0x00BA, 121 }, { 0x00BB, 122 }, { 0x00BC, 123 }, { 0x00BD, 124 }, { 0x00BE, 125 }, { 0x00BF, 126 }, { 0x00C0, 127 }, { 0x00C1, 128 }, { 0x00C2, 129 }, { 0x00C3, 130 }, { 0x00C4, 131 }, { 0x00C5, 132 }, { 0x00C6, 133 }, { 0x00C7, 134 }, { 0x00C8, 135 }, { 0x00C9, 136 }, { 0x00CA, 137 }, { 0x00CB, 138 }, { 0x00CC, 139 }, { 0x00CD, 140 }, { 0x00CE, 141 }, { 0x00CF, 142 }, { 0x00D0, 143 }, { 0x00D1, 144 }, { 0x00D2, 145 }, { 0x00D3, 146 }, { 0x00D4, 147 }, { 0x00D5, 148 }, { 0x00D6, 149 }, { 0x00D7, 150 }, { 0x00D8, 151 }, { 0x00D9, 152 }, { 0x00DA, 153 }, { 0x00DB, 154 }, { 0x00DC, 155 }, { 0x00DD, 156 }, { 0x00DE, 157 }, { 0x00DF, 158 }, { 0x00E0, 159 }, { 0x00E1, 160 }, { 0x00E2, 161 }, { 0x00E3, 162 }, { 0x00E4, 163 }, { 0x00E5, 164 }, { 0x00E6, 165 }, { 0x00E7, 166 }, { 0x00E8, 167 }, { 0x00E9, 168 }, { 0x00EA, 169 }, { 0x00EB, 170 }, { 0x00EC, 171 }, { 0x00ED, 172 }, { 0x00EE, 173 }, { 0x00EF, 174 }, { 0x00F0, 175 }, { 0x00F1, 176 }, { 0x00F2, 177 }, { 0x00F3, 178 }, { 0x00F4, 179 }, { 0x00F5, 180 }, { 0x00F6, 181 }, { 0x00F7, 182 }, { 0x00F8, 183 }, { 0x00F9, 184 }, { 0x00FA, 185 }, { 0x00FB, 186 }, { 0x00FC, 187 }, { 0x00FD, 188 }, { 0x00FE, 189 }, { 0x00FF, 190 }, { 0x0100, 191 }, { 0x0101, 192 }, { 0x0102, 193 }, { 0x0103, 194 }, { 0x0104, 195 }, { 0x0105, 196 }, { 0x0106, 197 }, { 0x0107, 198 }, { 0x0108, 199 }, { 0x0109, 200 }, { 0x010A, 201 }, { 0x010B, 202 }, { 0x010C, 203 }, { 0x010D, 204 }, { 0x010E, 205 }, { 0x010F, 206 }, { 0x0110, 207 }, { 0x0111, 208 }, { 0x0112, 209 }, { 0x0113, 210 }, { 0x0114, 211 }, { 0x0115, 212 }, { 0x0116, 213 }, { 0x0117, 214 }, { 0x0118, 215 }, { 0x0119, 216 }, { 0x011A, 217 }, { 0x011B, 218 }, { 0x011C, 219 }, { 0x011D, 220 }, { 0x011E, 221 }, { 0x011F, 222 }, { 0x0120, 223 }, { 0x0121, 224 }, { 0x0122, 225 }, { 0x0123, 226 }, { 0x0124, 227 }, { 0x0125, 228 }, { 0x0126, 229 }, { 0x0127, 230 }, { 0x0128, 231 }, { 0x0129, 232 }, { 0x012A, 233 }, { 0x012B, 234 }, { 0x012C, 235 }, { 0x012D, 236 }, { 0x012E, 237 }, { 0x012F, 238 }, { 0x0130, 239 }, { 0x0131, 240 }, { 0x0134, 241 }, { 0x0135, 242 }, { 0x0136, 243 }, { 0x0137, 244 }, { 0x0138, 245 }, { 0x0139, 246 }, { 0x013A, 247 }, { 0x013B, 248 }, { 0x013C, 249 }, { 0x013D, 250 }, { 0x013E, 251 }, { 0x013F, 252 }, { 0x0140, 253 }, { 0x0141, 254 }, { 0x0142, 255 }, { 0x0143, 256 }, { 0x0144, 257 }, { 0x0145, 258 }, { 0x0146, 259 }, { 0x0147, 260 }, { 0x0148, 261 }, { 0x0149, 262 }, { 0x014A, 263 }, { 0x014B, 264 }, { 0x014C, 265 }, { 0x014D, 266 }, { 0x014E, 267 }, { 0x014F, 268 }, { 0x0150, 269 }, { 0x0151, 270 }, { 0x0152, 271 }, { 0x0153, 272 }, { 0x0154, 273 }, { 0x0155, 274 }, { 0x0156, 275 }, { 0x0157, 276 }, { 0x0158, 277 }, { 0x0159, 278 }, { 0x015A, 279 }, { 0x015B, 280 }, { 0x015C, 281 }, { 0x015D, 282 }, { 0x015E, 283 }, { 0x015F, 284 }, { 0x0160, 285 }, { 0x0161, 286 }, { 0x0162, 287 }, { 0x0163, 288 }, { 0x0164, 289 }, { 0x0165, 290 }, { 0x0166, 291 }, { 0x0167, 292 }, { 0x0168, 293 }, { 0x0169, 294 }, { 0x016A, 295 }, { 0x016B, 296 }, { 0x016C, 297 }, { 0x016D, 298 }, { 0x016E, 299 }, { 0x016F, 300 }, { 0x0170, 301 }, { 0x0171, 302 }, { 0x0172, 303 }, { 0x0173, 304 }, { 0x0174, 305 }, { 0x0175, 306 }, { 0x0176, 307 }, { 0x0177, 308 }, { 0x0178, 309 }, { 0x0179, 310 }, { 0x017A, 311 }, { 0x017B, 312 }, { 0x017C, 313 }, { 0x017D, 314 }, { 0x017E, 315 }, { 0x0192, 316 }, { 0x01FC, 317 }, { 0x01FD, 318 }, { 0x01FE, 319 }, { 0x01FF, 320 }, { 0x0218, 321 }, { 0x0219, 322 }, { 0x021A, 323 }, { 0x021B, 324 }, { 0x0237, 325 }, { 0x02BC, 326 }, { 0x02C6, 327 }, { 0x02C7, 328 }, { 0x02C9, 329 }, { 0x02D8, 330 }, { 0x02D9, 331 }, { 0x02DA, 332 }, { 0x02DB, 333 }, { 0x02DC, 334 }, { 0x02DD, 335 }, { 0x0300, 336 }, { 0x0301, 337 }, { 0x0302, 338 }, { 0x0303, 339 }, { 0x0304, 340 }, { 0x0306, 341 }, { 0x0307, 342 }, { 0x0308, 343 }, { 0x030A, 344 }, { 0x030B, 345 }, { 0x030C, 346 }, { 0x0312, 347 }, { 0x0326, 348 }, { 0x0327, 349 }, { 0x0328, 350 }, { 0x0335, 351 }, { 0x0336, 352 }, { 0x0337, 353 }, { 0x0338, 354 }, { 0x0394, 355 }, { 0x03A9, 356 }, { 0x03BC, 357 }, { 0x03C0, 358 }, { 0x1E80, 359 }, { 0x1E81, 360 }, { 0x1E82, 361 }, { 0x1E83, 362 }, { 0x1E84, 363 }, { 0x1E85, 364 }, { 0x1E9E, 365 }, { 0x1EF2, 366 }, { 0x1EF3, 367 }, { 0x2002, 368 }, { 0x2003, 369 }, { 0x2008, 370 }, { 0x2013, 371 }, { 0x2014, 372 }, { 0x2016, 373 }, { 0x2018, 374 }, { 0x2019, 375 }, { 0x201A, 376 }, { 0x201C, 377 }, { 0x201D, 378 }, { 0x201E, 379 }, { 0x2020, 380 }, { 0x2021, 381 }, { 0x2022, 382 }, { 0x2026, 383 }, { 0x2030, 384 }, { 0x2039, 385 }, { 0x203A, 386 }, { 0x2044, 387 }, { 0x2070, 388 }, { 0x2074, 389 }, { 0x2075, 390 }, { 0x2076, 391 }, { 0x2077, 392 }, { 0x2078, 393 }, { 0x2079, 394 }, { 0x2080, 395 }, { 0x2081, 396 }, { 0x2082, 397 }, { 0x2083, 398 }, { 0x2084, 399 }, { 0x2085, 400 }, { 0x2086, 401 }, { 0x2087, 402 }, { 0x2088, 403 }, { 0x2089, 404 }, { 0x20AC, 405 }, { 0x20B9, 406 }, { 0x20BF, 407 }, { 0x2113, 408 }, { 0x2116, 409 }, { 0x2117, 410 }, { 0x2120, 411 }, { 0x2122, 412 }, { 0x2126, 413 }, { 0x212E, 414 }, { 0x2153, 415 }, { 0x2154, 416 }, { 0x2155, 417 }, { 0x2156, 418 }, { 0x2157, 419 }, { 0x2158, 420 }, { 0x2159, 421 }, { 0x215A, 422 }, { 0x215B, 423 }, { 0x215C, 424 }, { 0x215D, 425 }, { 0x215E, 426 }, { 0x2190, 427 }, { 0x2191, 428 }, { 0x2192, 429 }, { 0x2193, 430 }, { 0x2194, 431 }, { 0x2195, 432 }, { 0x2196, 433 }, { 0x2197, 434 }, { 0x2198, 435 }, { 0x2199, 436 }, { 0x2202, 437 }, { 0x2205, 438 }, { 0x2206, 439 }, { 0x220F, 440 }, { 0x2211, 441 }, { 0x2212, 442 }, { 0x2215, 443 }, { 0x2219, 444 }, { 0x221A, 445 }, { 0x221E, 446 }, { 0x222B, 447 }, { 0x2248, 448 }, { 0x2260, 449 }, { 0x2264, 450 }, { 0x2265, 451 }, { 0x25CA, 452 }, { 0xE0FF, 453 }, { 0xEFFD, 454 }, { 0xF000, 455 }, { 0xF8FF, 456 }
        };

        /// <summary>
        ///     Get the binary representation of an ASCII character from the
        ///     font table.
        /// </summary>
        /// <param name="character">Character to look up.</param>
        /// <returns>
        ///     Byte array containing the rows of pixels in the character.  Unknown byte codes will result in a space being
        ///     returned.
        /// </returns>
        public byte[] this[char character]
        {
            get
            {
                var c = (int)character;
                if (characterMap.ContainsKey(c))
                    return _fontTable[characterMap[c]];
                else
                    return _fontTable[0];
            }
        }
    }
}
